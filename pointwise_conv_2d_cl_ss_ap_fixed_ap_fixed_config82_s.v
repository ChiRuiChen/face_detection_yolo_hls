// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pointwise_conv_2d_cl_ss_ap_fixed_ap_fixed_config82_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        data_V_V_dout,
        data_V_V_empty_n,
        data_V_V_read,
        res_V_V_din,
        res_V_V_full_n,
        res_V_V_write
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_state2 = 8'd2;
parameter    ap_ST_fsm_state3 = 8'd4;
parameter    ap_ST_fsm_state4 = 8'd8;
parameter    ap_ST_fsm_state5 = 8'd16;
parameter    ap_ST_fsm_state6 = 8'd32;
parameter    ap_ST_fsm_state7 = 8'd64;
parameter    ap_ST_fsm_state8 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [15:0] data_V_V_dout;
input   data_V_V_empty_n;
output   data_V_V_read;
output  [15:0] res_V_V_din;
input   res_V_V_full_n;
output   res_V_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg data_V_V_read;
reg res_V_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg   [15:0] layer_in_V_7_0;
reg   [15:0] layer_in_V_7_1;
reg   [15:0] layer_in_V_7_2;
reg   [15:0] layer_in_V_7_3;
reg   [15:0] layer_in_V_7_4;
reg   [15:0] layer_in_V_7_5;
reg   [15:0] layer_in_V_7_6;
reg   [15:0] layer_in_V_7_7;
reg   [15:0] layer_in_V_7_8;
reg   [15:0] layer_in_V_7_9;
reg   [15:0] layer_in_V_7_10;
reg   [15:0] layer_in_V_7_11;
reg   [15:0] layer_in_V_7_12;
reg   [15:0] layer_in_V_7_13;
reg   [15:0] layer_in_V_7_14;
reg   [15:0] layer_in_V_7_15;
reg    data_V_V_blk_n;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln286_fu_624_p2;
wire    ap_CS_fsm_state8;
wire   [0:0] icmp_ln309_fu_1318_p2;
reg    res_V_V_blk_n;
wire    ap_CS_fsm_state7;
reg   [0:0] or_ln284_reg_1476;
wire   [0:0] icmp_ln299_fu_1274_p2;
wire   [10:0] add_ln277_fu_576_p2;
reg   [10:0] add_ln277_reg_1461;
wire    ap_CS_fsm_state2;
wire   [5:0] select_ln277_fu_594_p3;
reg   [5:0] select_ln277_reg_1466;
wire   [0:0] icmp_ln277_fu_570_p2;
wire   [5:0] select_ln277_3_fu_602_p3;
reg   [5:0] select_ln277_3_reg_1471;
wire   [0:0] or_ln284_fu_618_p2;
reg    ap_block_state3;
wire   [4:0] i_ic_5_fu_630_p2;
reg   [4:0] i_ic_5_reg_1484;
wire   [4:0] ir_fu_742_p2;
wire    ap_CS_fsm_state5;
wire  signed [23:0] grp_fu_1330_p3;
wire   [0:0] icmp_ln324_fu_736_p2;
wire  signed [23:0] grp_fu_1338_p3;
wire  signed [23:0] grp_fu_1346_p3;
wire  signed [23:0] grp_fu_1354_p3;
wire  signed [23:0] grp_fu_1362_p3;
wire  signed [23:0] grp_fu_1370_p3;
wire  signed [23:0] grp_fu_1378_p3;
wire  signed [23:0] grp_fu_1386_p3;
wire  signed [23:0] grp_fu_1394_p3;
wire  signed [23:0] grp_fu_1402_p3;
wire  signed [23:0] grp_fu_1410_p3;
wire  signed [23:0] grp_fu_1418_p3;
wire  signed [23:0] grp_fu_1426_p3;
wire  signed [23:0] grp_fu_1434_p3;
wire  signed [23:0] grp_fu_1442_p3;
wire  signed [23:0] grp_fu_1450_p3;
reg   [15:0] trunc_ln_reg_1580;
wire    ap_CS_fsm_state6;
reg   [15:0] trunc_ln708_s_reg_1585;
reg   [15:0] trunc_ln708_93_reg_1590;
reg   [15:0] trunc_ln708_94_reg_1595;
reg   [15:0] trunc_ln708_95_reg_1600;
reg   [15:0] trunc_ln708_96_reg_1605;
reg   [15:0] trunc_ln708_97_reg_1610;
reg   [15:0] trunc_ln708_98_reg_1615;
reg   [15:0] trunc_ln708_99_reg_1620;
reg   [15:0] trunc_ln708_100_reg_1625;
reg   [15:0] trunc_ln708_101_reg_1630;
reg   [15:0] trunc_ln708_102_reg_1635;
reg   [15:0] trunc_ln708_103_reg_1640;
reg   [15:0] trunc_ln708_104_reg_1645;
reg   [15:0] trunc_ln708_105_reg_1650;
reg   [15:0] trunc_ln708_106_reg_1655;
wire   [4:0] i_ic_6_fu_1280_p2;
reg    ap_predicate_op213_write_state7;
reg    ap_block_state7;
wire   [5:0] i_iw_fu_1313_p2;
wire   [4:0] i_ic_fu_1324_p2;
reg    ap_block_state8;
reg   [10:0] indvar_flatten_reg_301;
reg    ap_block_state1;
reg   [5:0] i_ih_0_reg_312;
reg   [5:0] i_iw_0_reg_323;
reg   [4:0] i_ic_0_reg_334;
wire    ap_CS_fsm_state4;
reg   [23:0] acc_V_15_0_reg_345;
reg   [23:0] acc_V_14_0_reg_357;
reg   [23:0] acc_V_13_0_reg_369;
reg   [23:0] acc_V_12_0_reg_381;
reg   [23:0] acc_V_11_0_reg_393;
reg   [23:0] acc_V_10_0_reg_405;
reg   [23:0] acc_V_9_0_reg_417;
reg   [23:0] acc_V_8_0_reg_429;
reg   [23:0] acc_V_7_0_reg_441;
reg   [23:0] acc_V_6_0_reg_453;
reg   [23:0] acc_V_5_0_reg_465;
reg   [23:0] acc_V_4_0_reg_477;
reg   [23:0] acc_V_3_0_reg_489;
reg   [23:0] acc_V_2_0_reg_501;
reg   [23:0] acc_V_1_0_reg_513;
reg   [23:0] acc_V_0_0_reg_525;
reg   [4:0] in_index_reg_537;
reg   [4:0] i_ic1_0_reg_548;
reg   [4:0] i_ic2_0_reg_559;
wire   [3:0] trunc_ln203_fu_636_p1;
wire   [15:0] out_data_V_fu_1290_p18;
wire   [0:0] icmp_ln279_fu_588_p2;
wire   [5:0] i_ih_fu_582_p2;
wire   [0:0] trunc_ln277_fu_610_p1;
wire   [0:0] trunc_ln279_fu_614_p1;
wire   [3:0] trunc_ln332_fu_748_p1;
wire   [127:0] merge_i_fu_854_p18;
wire   [15:0] tmp_5_fu_816_p18;
wire  signed [7:0] trunc_ln332_3_fu_892_p1;
wire  signed [7:0] tmp_127_fu_904_p4;
wire  signed [7:0] tmp_128_fu_918_p4;
wire  signed [7:0] tmp_129_fu_932_p4;
wire  signed [7:0] tmp_130_fu_946_p4;
wire  signed [7:0] tmp_131_fu_960_p4;
wire  signed [7:0] tmp_132_fu_974_p4;
wire  signed [7:0] tmp_133_fu_988_p4;
wire  signed [7:0] tmp_134_fu_1002_p4;
wire  signed [7:0] tmp_135_fu_1016_p4;
wire  signed [7:0] tmp_136_fu_1030_p4;
wire  signed [7:0] tmp_137_fu_1044_p4;
wire  signed [7:0] tmp_138_fu_1058_p4;
wire  signed [7:0] tmp_139_fu_1072_p4;
wire  signed [7:0] tmp_140_fu_1086_p4;
wire  signed [7:0] tmp_141_fu_1100_p4;
wire   [3:0] out_data_V_fu_1290_p17;
wire  signed [15:0] grp_fu_1330_p0;
wire  signed [23:0] sext_ln1116_fu_896_p1;
wire  signed [15:0] grp_fu_1338_p0;
wire  signed [15:0] grp_fu_1346_p0;
wire  signed [15:0] grp_fu_1354_p0;
wire  signed [15:0] grp_fu_1362_p0;
wire  signed [15:0] grp_fu_1370_p0;
wire  signed [15:0] grp_fu_1378_p0;
wire  signed [15:0] grp_fu_1386_p0;
wire  signed [15:0] grp_fu_1394_p0;
wire  signed [15:0] grp_fu_1402_p0;
wire  signed [15:0] grp_fu_1410_p0;
wire  signed [15:0] grp_fu_1418_p0;
wire  signed [15:0] grp_fu_1426_p0;
wire  signed [15:0] grp_fu_1434_p0;
wire  signed [15:0] grp_fu_1442_p0;
wire  signed [15:0] grp_fu_1450_p0;
reg   [7:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 8'd1;
#0 layer_in_V_7_0 = 16'd0;
#0 layer_in_V_7_1 = 16'd0;
#0 layer_in_V_7_2 = 16'd0;
#0 layer_in_V_7_3 = 16'd0;
#0 layer_in_V_7_4 = 16'd0;
#0 layer_in_V_7_5 = 16'd0;
#0 layer_in_V_7_6 = 16'd0;
#0 layer_in_V_7_7 = 16'd0;
#0 layer_in_V_7_8 = 16'd0;
#0 layer_in_V_7_9 = 16'd0;
#0 layer_in_V_7_10 = 16'd0;
#0 layer_in_V_7_11 = 16'd0;
#0 layer_in_V_7_12 = 16'd0;
#0 layer_in_V_7_13 = 16'd0;
#0 layer_in_V_7_14 = 16'd0;
#0 layer_in_V_7_15 = 16'd0;
end

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U82(
    .din0(layer_in_V_7_0),
    .din1(layer_in_V_7_1),
    .din2(layer_in_V_7_2),
    .din3(layer_in_V_7_3),
    .din4(layer_in_V_7_4),
    .din5(layer_in_V_7_5),
    .din6(layer_in_V_7_6),
    .din7(layer_in_V_7_7),
    .din8(layer_in_V_7_8),
    .din9(layer_in_V_7_9),
    .din10(layer_in_V_7_10),
    .din11(layer_in_V_7_11),
    .din12(layer_in_V_7_12),
    .din13(layer_in_V_7_13),
    .din14(layer_in_V_7_14),
    .din15(layer_in_V_7_15),
    .din16(trunc_ln332_fu_748_p1),
    .dout(tmp_5_fu_816_p18)
);

myproject_mux_164_128_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 128 ),
    .din1_WIDTH( 128 ),
    .din2_WIDTH( 128 ),
    .din3_WIDTH( 128 ),
    .din4_WIDTH( 128 ),
    .din5_WIDTH( 128 ),
    .din6_WIDTH( 128 ),
    .din7_WIDTH( 128 ),
    .din8_WIDTH( 128 ),
    .din9_WIDTH( 128 ),
    .din10_WIDTH( 128 ),
    .din11_WIDTH( 128 ),
    .din12_WIDTH( 128 ),
    .din13_WIDTH( 128 ),
    .din14_WIDTH( 128 ),
    .din15_WIDTH( 128 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 128 ))
myproject_mux_164_128_1_1_U83(
    .din0(128'd1167880714341710002472337606062179076),
    .din1(128'd335022204805742508636055046243165603838),
    .din2(128'd331019228511033082357860436900539466243),
    .din3(128'd338963239716157550081670747758555891191),
    .din4(128'd2616795605332504398412608658926207998),
    .din5(128'd26553264866398161218145974656504360957),
    .din6(128'd340204604800681016952478410863374893318),
    .din7(128'd338911375857654488451874410222813836279),
    .din8(128'd337540854218143321408319509661198319361),
    .din9(128'd5275839951423263898211378711512288780),
    .din10(128'd332379487961531125102112916511345933309),
    .din11(128'd14543805961041911156260676601315390983),
    .din12(128'd336315450694599022056555625531301627388),
    .din13(128'd9221559074998307327122889763356407555),
    .din14(128'd334819968745459815348109590393537234174),
    .din15(128'd333651702654807077998360284443032155394),
    .din16(trunc_ln332_fu_748_p1),
    .dout(merge_i_fu_854_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U84(
    .din0(trunc_ln_reg_1580),
    .din1(trunc_ln708_s_reg_1585),
    .din2(trunc_ln708_93_reg_1590),
    .din3(trunc_ln708_94_reg_1595),
    .din4(trunc_ln708_95_reg_1600),
    .din5(trunc_ln708_96_reg_1605),
    .din6(trunc_ln708_97_reg_1610),
    .din7(trunc_ln708_98_reg_1615),
    .din8(trunc_ln708_99_reg_1620),
    .din9(trunc_ln708_100_reg_1625),
    .din10(trunc_ln708_101_reg_1630),
    .din11(trunc_ln708_102_reg_1635),
    .din12(trunc_ln708_103_reg_1640),
    .din13(trunc_ln708_104_reg_1645),
    .din14(trunc_ln708_105_reg_1650),
    .din15(trunc_ln708_106_reg_1655),
    .din16(out_data_V_fu_1290_p17),
    .dout(out_data_V_fu_1290_p18)
);

myproject_mac_muladd_16s_8s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_16s_8s_24ns_24_1_1_U85(
    .din0(grp_fu_1330_p0),
    .din1(trunc_ln332_3_fu_892_p1),
    .din2(acc_V_0_0_reg_525),
    .dout(grp_fu_1330_p3)
);

myproject_mac_muladd_16s_8s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_16s_8s_24ns_24_1_1_U86(
    .din0(grp_fu_1338_p0),
    .din1(tmp_127_fu_904_p4),
    .din2(acc_V_1_0_reg_513),
    .dout(grp_fu_1338_p3)
);

myproject_mac_muladd_16s_8s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_16s_8s_24ns_24_1_1_U87(
    .din0(grp_fu_1346_p0),
    .din1(tmp_128_fu_918_p4),
    .din2(acc_V_2_0_reg_501),
    .dout(grp_fu_1346_p3)
);

myproject_mac_muladd_16s_8s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_16s_8s_24ns_24_1_1_U88(
    .din0(grp_fu_1354_p0),
    .din1(tmp_129_fu_932_p4),
    .din2(acc_V_3_0_reg_489),
    .dout(grp_fu_1354_p3)
);

myproject_mac_muladd_16s_8s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_16s_8s_24ns_24_1_1_U89(
    .din0(grp_fu_1362_p0),
    .din1(tmp_130_fu_946_p4),
    .din2(acc_V_4_0_reg_477),
    .dout(grp_fu_1362_p3)
);

myproject_mac_muladd_16s_8s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_16s_8s_24ns_24_1_1_U90(
    .din0(grp_fu_1370_p0),
    .din1(tmp_131_fu_960_p4),
    .din2(acc_V_5_0_reg_465),
    .dout(grp_fu_1370_p3)
);

myproject_mac_muladd_16s_8s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_16s_8s_24ns_24_1_1_U91(
    .din0(grp_fu_1378_p0),
    .din1(tmp_132_fu_974_p4),
    .din2(acc_V_6_0_reg_453),
    .dout(grp_fu_1378_p3)
);

myproject_mac_muladd_16s_8s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_16s_8s_24ns_24_1_1_U92(
    .din0(grp_fu_1386_p0),
    .din1(tmp_133_fu_988_p4),
    .din2(acc_V_7_0_reg_441),
    .dout(grp_fu_1386_p3)
);

myproject_mac_muladd_16s_8s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_16s_8s_24ns_24_1_1_U93(
    .din0(grp_fu_1394_p0),
    .din1(tmp_134_fu_1002_p4),
    .din2(acc_V_8_0_reg_429),
    .dout(grp_fu_1394_p3)
);

myproject_mac_muladd_16s_8s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_16s_8s_24ns_24_1_1_U94(
    .din0(grp_fu_1402_p0),
    .din1(tmp_135_fu_1016_p4),
    .din2(acc_V_9_0_reg_417),
    .dout(grp_fu_1402_p3)
);

myproject_mac_muladd_16s_8s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_16s_8s_24ns_24_1_1_U95(
    .din0(grp_fu_1410_p0),
    .din1(tmp_136_fu_1030_p4),
    .din2(acc_V_10_0_reg_405),
    .dout(grp_fu_1410_p3)
);

myproject_mac_muladd_16s_8s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_16s_8s_24ns_24_1_1_U96(
    .din0(grp_fu_1418_p0),
    .din1(tmp_137_fu_1044_p4),
    .din2(acc_V_11_0_reg_393),
    .dout(grp_fu_1418_p3)
);

myproject_mac_muladd_16s_8s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_16s_8s_24ns_24_1_1_U97(
    .din0(grp_fu_1426_p0),
    .din1(tmp_138_fu_1058_p4),
    .din2(acc_V_12_0_reg_381),
    .dout(grp_fu_1426_p3)
);

myproject_mac_muladd_16s_8s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_16s_8s_24ns_24_1_1_U98(
    .din0(grp_fu_1434_p0),
    .din1(tmp_139_fu_1072_p4),
    .din2(acc_V_13_0_reg_369),
    .dout(grp_fu_1434_p3)
);

myproject_mac_muladd_16s_8s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_16s_8s_24ns_24_1_1_U99(
    .din0(grp_fu_1442_p0),
    .din1(tmp_140_fu_1086_p4),
    .din2(acc_V_14_0_reg_357),
    .dout(grp_fu_1442_p3)
);

myproject_mac_muladd_16s_8s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_16s_8s_24ns_24_1_1_U100(
    .din0(grp_fu_1450_p0),
    .din1(tmp_141_fu_1100_p4),
    .din2(acc_V_15_0_reg_345),
    .dout(grp_fu_1450_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln277_fu_570_p2 == 1'd1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_fu_736_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        acc_V_0_0_reg_525 <= grp_fu_1330_p3;
    end else if ((~((icmp_ln286_fu_624_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln286_fu_624_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        acc_V_0_0_reg_525 <= 24'd61440;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_fu_736_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        acc_V_10_0_reg_405 <= grp_fu_1410_p3;
    end else if ((~((icmp_ln286_fu_624_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln286_fu_624_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        acc_V_10_0_reg_405 <= 24'd38912;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_fu_736_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        acc_V_11_0_reg_393 <= grp_fu_1418_p3;
    end else if ((~((icmp_ln286_fu_624_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln286_fu_624_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        acc_V_11_0_reg_393 <= 24'd16734208;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_fu_736_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        acc_V_12_0_reg_381 <= grp_fu_1426_p3;
    end else if ((~((icmp_ln286_fu_624_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln286_fu_624_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        acc_V_12_0_reg_381 <= 24'd16384;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_fu_736_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        acc_V_13_0_reg_369 <= grp_fu_1434_p3;
    end else if ((~((icmp_ln286_fu_624_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln286_fu_624_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        acc_V_13_0_reg_369 <= 24'd2048;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_fu_736_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        acc_V_14_0_reg_357 <= grp_fu_1442_p3;
    end else if ((~((icmp_ln286_fu_624_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln286_fu_624_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        acc_V_14_0_reg_357 <= 24'd16752640;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_fu_736_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        acc_V_15_0_reg_345 <= grp_fu_1450_p3;
    end else if ((~((icmp_ln286_fu_624_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln286_fu_624_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        acc_V_15_0_reg_345 <= 24'd75776;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_fu_736_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        acc_V_1_0_reg_513 <= grp_fu_1338_p3;
    end else if ((~((icmp_ln286_fu_624_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln286_fu_624_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        acc_V_1_0_reg_513 <= 24'd98304;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_fu_736_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        acc_V_2_0_reg_501 <= grp_fu_1346_p3;
    end else if ((~((icmp_ln286_fu_624_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln286_fu_624_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        acc_V_2_0_reg_501 <= 24'd20480;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_fu_736_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        acc_V_3_0_reg_489 <= grp_fu_1354_p3;
    end else if ((~((icmp_ln286_fu_624_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln286_fu_624_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        acc_V_3_0_reg_489 <= 24'd32768;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_fu_736_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        acc_V_4_0_reg_477 <= grp_fu_1362_p3;
    end else if ((~((icmp_ln286_fu_624_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln286_fu_624_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        acc_V_4_0_reg_477 <= 24'd2048;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_fu_736_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        acc_V_5_0_reg_465 <= grp_fu_1370_p3;
    end else if ((~((icmp_ln286_fu_624_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln286_fu_624_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        acc_V_5_0_reg_465 <= 24'd14336;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_fu_736_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        acc_V_6_0_reg_453 <= grp_fu_1378_p3;
    end else if ((~((icmp_ln286_fu_624_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln286_fu_624_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        acc_V_6_0_reg_453 <= 24'd16730112;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_fu_736_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        acc_V_7_0_reg_441 <= grp_fu_1386_p3;
    end else if ((~((icmp_ln286_fu_624_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln286_fu_624_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        acc_V_7_0_reg_441 <= 24'd55296;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_fu_736_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        acc_V_8_0_reg_429 <= grp_fu_1394_p3;
    end else if ((~((icmp_ln286_fu_624_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln286_fu_624_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        acc_V_8_0_reg_429 <= 24'd77824;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_fu_736_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        acc_V_9_0_reg_417 <= grp_fu_1402_p3;
    end else if ((~((icmp_ln286_fu_624_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln286_fu_624_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        acc_V_9_0_reg_417 <= 24'd30720;
    end
end

always @ (posedge ap_clk) begin
    if ((~((res_V_V_full_n == 1'b0) & (ap_predicate_op213_write_state7 == 1'b1)) & (icmp_ln299_fu_1274_p2 == 1'd0) & (or_ln284_reg_1476 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        i_ic1_0_reg_548 <= i_ic_6_fu_1280_p2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        i_ic1_0_reg_548 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln277_fu_570_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (or_ln284_fu_618_p2 == 1'd1))) begin
        i_ic2_0_reg_559 <= 5'd0;
    end else if ((~((icmp_ln309_fu_1318_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln309_fu_1318_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        i_ic2_0_reg_559 <= i_ic_fu_1324_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_ic_0_reg_334 <= i_ic_5_reg_1484;
    end else if (((or_ln284_fu_618_p2 == 1'd0) & (icmp_ln277_fu_570_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i_ic_0_reg_334 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((res_V_V_full_n == 1'b0) & (ap_predicate_op213_write_state7 == 1'b1)) & (1'b1 == ap_CS_fsm_state7) & ((icmp_ln299_fu_1274_p2 == 1'd1) | (or_ln284_reg_1476 == 1'd1)))) begin
        i_ih_0_reg_312 <= select_ln277_3_reg_1471;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_ih_0_reg_312 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((res_V_V_full_n == 1'b0) & (ap_predicate_op213_write_state7 == 1'b1)) & (1'b1 == ap_CS_fsm_state7) & ((icmp_ln299_fu_1274_p2 == 1'd1) | (or_ln284_reg_1476 == 1'd1)))) begin
        i_iw_0_reg_323 <= i_iw_fu_1313_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_iw_0_reg_323 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_fu_736_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        in_index_reg_537 <= ir_fu_742_p2;
    end else if ((~((icmp_ln286_fu_624_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln286_fu_624_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        in_index_reg_537 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((res_V_V_full_n == 1'b0) & (ap_predicate_op213_write_state7 == 1'b1)) & (1'b1 == ap_CS_fsm_state7) & ((icmp_ln299_fu_1274_p2 == 1'd1) | (or_ln284_reg_1476 == 1'd1)))) begin
        indvar_flatten_reg_301 <= add_ln277_reg_1461;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_301 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln277_reg_1461 <= add_ln277_fu_576_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln286_fu_624_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
        i_ic_5_reg_1484 <= i_ic_5_fu_630_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln286_fu_624_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln286_fu_624_p2 == 1'd0) & (trunc_ln203_fu_636_p1 == 4'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        layer_in_V_7_0 <= data_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln286_fu_624_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln286_fu_624_p2 == 1'd0) & (trunc_ln203_fu_636_p1 == 4'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        layer_in_V_7_1 <= data_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln286_fu_624_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln286_fu_624_p2 == 1'd0) & (trunc_ln203_fu_636_p1 == 4'd10) & (1'b1 == ap_CS_fsm_state3))) begin
        layer_in_V_7_10 <= data_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln286_fu_624_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln286_fu_624_p2 == 1'd0) & (trunc_ln203_fu_636_p1 == 4'd11) & (1'b1 == ap_CS_fsm_state3))) begin
        layer_in_V_7_11 <= data_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln286_fu_624_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln286_fu_624_p2 == 1'd0) & (trunc_ln203_fu_636_p1 == 4'd12) & (1'b1 == ap_CS_fsm_state3))) begin
        layer_in_V_7_12 <= data_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln286_fu_624_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln286_fu_624_p2 == 1'd0) & (trunc_ln203_fu_636_p1 == 4'd13) & (1'b1 == ap_CS_fsm_state3))) begin
        layer_in_V_7_13 <= data_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln286_fu_624_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln286_fu_624_p2 == 1'd0) & (trunc_ln203_fu_636_p1 == 4'd14) & (1'b1 == ap_CS_fsm_state3))) begin
        layer_in_V_7_14 <= data_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln286_fu_624_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln286_fu_624_p2 == 1'd0) & (trunc_ln203_fu_636_p1 == 4'd15) & (1'b1 == ap_CS_fsm_state3))) begin
        layer_in_V_7_15 <= data_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln286_fu_624_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln286_fu_624_p2 == 1'd0) & (trunc_ln203_fu_636_p1 == 4'd2) & (1'b1 == ap_CS_fsm_state3))) begin
        layer_in_V_7_2 <= data_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln286_fu_624_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln286_fu_624_p2 == 1'd0) & (trunc_ln203_fu_636_p1 == 4'd3) & (1'b1 == ap_CS_fsm_state3))) begin
        layer_in_V_7_3 <= data_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln286_fu_624_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln286_fu_624_p2 == 1'd0) & (trunc_ln203_fu_636_p1 == 4'd4) & (1'b1 == ap_CS_fsm_state3))) begin
        layer_in_V_7_4 <= data_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln286_fu_624_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln286_fu_624_p2 == 1'd0) & (trunc_ln203_fu_636_p1 == 4'd5) & (1'b1 == ap_CS_fsm_state3))) begin
        layer_in_V_7_5 <= data_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln286_fu_624_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln286_fu_624_p2 == 1'd0) & (trunc_ln203_fu_636_p1 == 4'd6) & (1'b1 == ap_CS_fsm_state3))) begin
        layer_in_V_7_6 <= data_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln286_fu_624_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln286_fu_624_p2 == 1'd0) & (trunc_ln203_fu_636_p1 == 4'd7) & (1'b1 == ap_CS_fsm_state3))) begin
        layer_in_V_7_7 <= data_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln286_fu_624_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln286_fu_624_p2 == 1'd0) & (trunc_ln203_fu_636_p1 == 4'd8) & (1'b1 == ap_CS_fsm_state3))) begin
        layer_in_V_7_8 <= data_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln286_fu_624_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln286_fu_624_p2 == 1'd0) & (trunc_ln203_fu_636_p1 == 4'd9) & (1'b1 == ap_CS_fsm_state3))) begin
        layer_in_V_7_9 <= data_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln277_fu_570_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        or_ln284_reg_1476 <= or_ln284_fu_618_p2;
        select_ln277_3_reg_1471 <= select_ln277_3_fu_602_p3;
        select_ln277_reg_1466 <= select_ln277_fu_594_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        trunc_ln708_100_reg_1625 <= {{acc_V_9_0_reg_417[22:7]}};
        trunc_ln708_101_reg_1630 <= {{acc_V_10_0_reg_405[22:7]}};
        trunc_ln708_102_reg_1635 <= {{acc_V_11_0_reg_393[22:7]}};
        trunc_ln708_103_reg_1640 <= {{acc_V_12_0_reg_381[22:7]}};
        trunc_ln708_104_reg_1645 <= {{acc_V_13_0_reg_369[22:7]}};
        trunc_ln708_105_reg_1650 <= {{acc_V_14_0_reg_357[22:7]}};
        trunc_ln708_106_reg_1655 <= {{acc_V_15_0_reg_345[22:7]}};
        trunc_ln708_93_reg_1590 <= {{acc_V_2_0_reg_501[22:7]}};
        trunc_ln708_94_reg_1595 <= {{acc_V_3_0_reg_489[22:7]}};
        trunc_ln708_95_reg_1600 <= {{acc_V_4_0_reg_477[22:7]}};
        trunc_ln708_96_reg_1605 <= {{acc_V_5_0_reg_465[22:7]}};
        trunc_ln708_97_reg_1610 <= {{acc_V_6_0_reg_453[22:7]}};
        trunc_ln708_98_reg_1615 <= {{acc_V_7_0_reg_441[22:7]}};
        trunc_ln708_99_reg_1620 <= {{acc_V_8_0_reg_429[22:7]}};
        trunc_ln708_s_reg_1585 <= {{acc_V_1_0_reg_513[22:7]}};
        trunc_ln_reg_1580 <= {{acc_V_0_0_reg_525[22:7]}};
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln277_fu_570_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln309_fu_1318_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8)) | ((icmp_ln286_fu_624_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        data_V_V_blk_n = data_V_V_empty_n;
    end else begin
        data_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~((icmp_ln309_fu_1318_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln309_fu_1318_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8)) | (~((icmp_ln286_fu_624_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln286_fu_624_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        data_V_V_read = 1'b1;
    end else begin
        data_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln277_fu_570_p2 == 1'd1))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((icmp_ln299_fu_1274_p2 == 1'd0) & (or_ln284_reg_1476 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        res_V_V_blk_n = res_V_V_full_n;
    end else begin
        res_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((res_V_V_full_n == 1'b0) & (ap_predicate_op213_write_state7 == 1'b1)) & (1'b1 == ap_CS_fsm_state7) & (ap_predicate_op213_write_state7 == 1'b1))) begin
        res_V_V_write = 1'b1;
    end else begin
        res_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln277_fu_570_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((icmp_ln277_fu_570_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (or_ln284_fu_618_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if ((~((icmp_ln286_fu_624_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln286_fu_624_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else if ((~((icmp_ln286_fu_624_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln286_fu_624_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state5 : begin
            if (((icmp_ln324_fu_736_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if ((~((res_V_V_full_n == 1'b0) & (ap_predicate_op213_write_state7 == 1'b1)) & (1'b1 == ap_CS_fsm_state7) & ((icmp_ln299_fu_1274_p2 == 1'd1) | (or_ln284_reg_1476 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if ((~((res_V_V_full_n == 1'b0) & (ap_predicate_op213_write_state7 == 1'b1)) & (icmp_ln299_fu_1274_p2 == 1'd0) & (or_ln284_reg_1476 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if ((~((icmp_ln309_fu_1318_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln309_fu_1318_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else if ((~((icmp_ln309_fu_1318_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln309_fu_1318_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln277_fu_576_p2 = (indvar_flatten_reg_301 + 11'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state3 = ((icmp_ln286_fu_624_p2 == 1'd0) & (data_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state7 = ((res_V_V_full_n == 1'b0) & (ap_predicate_op213_write_state7 == 1'b1));
end

always @ (*) begin
    ap_block_state8 = ((icmp_ln309_fu_1318_p2 == 1'd0) & (data_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_predicate_op213_write_state7 = ((icmp_ln299_fu_1274_p2 == 1'd0) & (or_ln284_reg_1476 == 1'd0));
end

assign ap_ready = internal_ap_ready;

assign grp_fu_1330_p0 = sext_ln1116_fu_896_p1;

assign grp_fu_1338_p0 = sext_ln1116_fu_896_p1;

assign grp_fu_1346_p0 = sext_ln1116_fu_896_p1;

assign grp_fu_1354_p0 = sext_ln1116_fu_896_p1;

assign grp_fu_1362_p0 = sext_ln1116_fu_896_p1;

assign grp_fu_1370_p0 = sext_ln1116_fu_896_p1;

assign grp_fu_1378_p0 = sext_ln1116_fu_896_p1;

assign grp_fu_1386_p0 = sext_ln1116_fu_896_p1;

assign grp_fu_1394_p0 = sext_ln1116_fu_896_p1;

assign grp_fu_1402_p0 = sext_ln1116_fu_896_p1;

assign grp_fu_1410_p0 = sext_ln1116_fu_896_p1;

assign grp_fu_1418_p0 = sext_ln1116_fu_896_p1;

assign grp_fu_1426_p0 = sext_ln1116_fu_896_p1;

assign grp_fu_1434_p0 = sext_ln1116_fu_896_p1;

assign grp_fu_1442_p0 = sext_ln1116_fu_896_p1;

assign grp_fu_1450_p0 = sext_ln1116_fu_896_p1;

assign i_ic_5_fu_630_p2 = (i_ic_0_reg_334 + 5'd1);

assign i_ic_6_fu_1280_p2 = (i_ic1_0_reg_548 + 5'd1);

assign i_ic_fu_1324_p2 = (i_ic2_0_reg_559 + 5'd1);

assign i_ih_fu_582_p2 = (6'd1 + i_ih_0_reg_312);

assign i_iw_fu_1313_p2 = (select_ln277_reg_1466 + 6'd1);

assign icmp_ln277_fu_570_p2 = ((indvar_flatten_reg_301 == 11'd1024) ? 1'b1 : 1'b0);

assign icmp_ln279_fu_588_p2 = ((i_iw_0_reg_323 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln286_fu_624_p2 = ((i_ic_0_reg_334 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln299_fu_1274_p2 = ((i_ic1_0_reg_548 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln309_fu_1318_p2 = ((i_ic2_0_reg_559 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln324_fu_736_p2 = ((in_index_reg_537 == 5'd16) ? 1'b1 : 1'b0);

assign ir_fu_742_p2 = (in_index_reg_537 + 5'd1);

assign or_ln284_fu_618_p2 = (trunc_ln279_fu_614_p1 | trunc_ln277_fu_610_p1);

assign out_data_V_fu_1290_p17 = i_ic1_0_reg_548[3:0];

assign res_V_V_din = out_data_V_fu_1290_p18;

assign select_ln277_3_fu_602_p3 = ((icmp_ln279_fu_588_p2[0:0] === 1'b1) ? i_ih_fu_582_p2 : i_ih_0_reg_312);

assign select_ln277_fu_594_p3 = ((icmp_ln279_fu_588_p2[0:0] === 1'b1) ? 6'd0 : i_iw_0_reg_323);

assign sext_ln1116_fu_896_p1 = $signed(tmp_5_fu_816_p18);

assign start_out = real_start;

assign tmp_127_fu_904_p4 = {{merge_i_fu_854_p18[15:8]}};

assign tmp_128_fu_918_p4 = {{merge_i_fu_854_p18[23:16]}};

assign tmp_129_fu_932_p4 = {{merge_i_fu_854_p18[31:24]}};

assign tmp_130_fu_946_p4 = {{merge_i_fu_854_p18[39:32]}};

assign tmp_131_fu_960_p4 = {{merge_i_fu_854_p18[47:40]}};

assign tmp_132_fu_974_p4 = {{merge_i_fu_854_p18[55:48]}};

assign tmp_133_fu_988_p4 = {{merge_i_fu_854_p18[63:56]}};

assign tmp_134_fu_1002_p4 = {{merge_i_fu_854_p18[71:64]}};

assign tmp_135_fu_1016_p4 = {{merge_i_fu_854_p18[79:72]}};

assign tmp_136_fu_1030_p4 = {{merge_i_fu_854_p18[87:80]}};

assign tmp_137_fu_1044_p4 = {{merge_i_fu_854_p18[95:88]}};

assign tmp_138_fu_1058_p4 = {{merge_i_fu_854_p18[103:96]}};

assign tmp_139_fu_1072_p4 = {{merge_i_fu_854_p18[111:104]}};

assign tmp_140_fu_1086_p4 = {{merge_i_fu_854_p18[119:112]}};

assign tmp_141_fu_1100_p4 = {{merge_i_fu_854_p18[127:120]}};

assign trunc_ln203_fu_636_p1 = i_ic_0_reg_334[3:0];

assign trunc_ln277_fu_610_p1 = select_ln277_3_fu_602_p3[0:0];

assign trunc_ln279_fu_614_p1 = select_ln277_fu_594_p3[0:0];

assign trunc_ln332_3_fu_892_p1 = merge_i_fu_854_p18[7:0];

assign trunc_ln332_fu_748_p1 = in_index_reg_537[3:0];

endmodule //pointwise_conv_2d_cl_ss_ap_fixed_ap_fixed_config82_s
