// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conv_2d_cl_ss_ap_fixed_ap_fixed_16_5_5_3_0_config22_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        data_V_V_dout,
        data_V_V_empty_n,
        data_V_V_read,
        res_V_V_din,
        res_V_V_full_n,
        res_V_V_write
);

parameter    ap_ST_fsm_state1 = 16'd1;
parameter    ap_ST_fsm_state2 = 16'd2;
parameter    ap_ST_fsm_state3 = 16'd4;
parameter    ap_ST_fsm_state4 = 16'd8;
parameter    ap_ST_fsm_pp0_stage0 = 16'd16;
parameter    ap_ST_fsm_state7 = 16'd32;
parameter    ap_ST_fsm_state8 = 16'd64;
parameter    ap_ST_fsm_state9 = 16'd128;
parameter    ap_ST_fsm_state10 = 16'd256;
parameter    ap_ST_fsm_state11 = 16'd512;
parameter    ap_ST_fsm_state12 = 16'd1024;
parameter    ap_ST_fsm_state13 = 16'd2048;
parameter    ap_ST_fsm_state14 = 16'd4096;
parameter    ap_ST_fsm_state15 = 16'd8192;
parameter    ap_ST_fsm_state16 = 16'd16384;
parameter    ap_ST_fsm_state17 = 16'd32768;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [15:0] data_V_V_dout;
input   data_V_V_empty_n;
output   data_V_V_read;
output  [15:0] res_V_V_din;
input   res_V_V_full_n;
output   res_V_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg data_V_V_read;
reg res_V_V_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [15:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [7:0] layer_in_V_9_address0;
reg    layer_in_V_9_ce0;
reg    layer_in_V_9_we0;
wire  signed [15:0] layer_in_V_9_q0;
reg   [31:0] sX_5;
reg   [31:0] sY_5;
reg   [31:0] pY_5;
reg   [31:0] pX_5;
wire   [7:0] w22_V_address0;
reg    w22_V_ce0;
wire   [125:0] w22_V_q0;
reg    data_V_V_blk_n;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln315_fu_717_p2;
reg    res_V_V_blk_n;
wire    ap_CS_fsm_state16;
reg   [23:0] acc_V_15_0_reg_471;
reg   [23:0] acc_V_14_0_reg_483;
reg   [23:0] acc_V_13_0_reg_495;
reg   [23:0] acc_V_12_0_reg_507;
reg   [23:0] acc_V_11_0_reg_519;
reg   [23:0] acc_V_10_0_reg_531;
reg   [23:0] acc_V_9_0_reg_543;
reg   [23:0] acc_V_8_0_reg_555;
reg   [23:0] acc_V_7_0_reg_567;
reg   [23:0] acc_V_6_0_reg_579;
reg   [23:0] acc_V_5_0_reg_591;
reg   [23:0] acc_V_4_0_reg_603;
reg   [23:0] acc_V_3_0_reg_615;
reg   [23:0] acc_V_2_0_reg_627;
reg   [23:0] acc_V_1_0_reg_639;
reg   [23:0] acc_V_0_0_reg_651;
reg   [7:0] in_index_reg_663;
reg    ap_block_state1;
wire   [8:0] i_fu_711_p2;
reg   [8:0] i_reg_1532;
wire    ap_CS_fsm_state2;
wire   [4:0] i1_fu_723_p2;
reg    ap_block_state3;
reg   [31:0] sX_5_load_reg_1545;
wire    ap_CS_fsm_state4;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config22_s_fu_696_ap_ready;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config22_s_fu_696_ap_done;
wire   [0:0] icmp_ln326_fu_738_p2;
reg   [0:0] icmp_ln326_reg_1550;
reg   [31:0] sY_5_load_reg_1555;
wire   [0:0] icmp_ln326_16_fu_748_p2;
reg   [0:0] icmp_ln326_16_reg_1560;
reg   [31:0] pY_5_load_reg_1565;
reg   [31:0] pX_5_load_reg_1571;
wire   [0:0] and_ln326_12_fu_806_p2;
reg   [0:0] and_ln326_12_reg_1577;
wire   [0:0] icmp_ln324_fu_812_p2;
reg   [0:0] icmp_ln324_reg_1581;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state5_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [7:0] ir_fu_818_p2;
reg    ap_enable_reg_pp0_iter0;
wire  signed [23:0] grp_fu_1321_p3;
reg    ap_enable_reg_pp0_iter1;
wire  signed [23:0] grp_fu_1329_p3;
wire  signed [23:0] grp_fu_1337_p3;
wire  signed [23:0] grp_fu_1345_p3;
wire  signed [23:0] grp_fu_1353_p3;
wire  signed [23:0] grp_fu_1361_p3;
wire  signed [23:0] grp_fu_1369_p3;
wire  signed [23:0] grp_fu_1377_p3;
wire  signed [23:0] grp_fu_1385_p3;
wire  signed [23:0] grp_fu_1393_p3;
wire  signed [23:0] grp_fu_1401_p3;
wire  signed [23:0] grp_fu_1409_p3;
wire  signed [23:0] grp_fu_1417_p3;
wire  signed [23:0] grp_fu_1425_p3;
wire  signed [23:0] grp_fu_1433_p3;
wire  signed [23:0] grp_fu_1441_p3;
reg   [15:0] trunc_ln708_304_reg_1680;
wire    ap_CS_fsm_state7;
reg   [15:0] trunc_ln708_305_reg_1685;
reg   [15:0] trunc_ln708_306_reg_1690;
reg   [15:0] trunc_ln708_307_reg_1695;
reg   [15:0] trunc_ln708_308_reg_1700;
reg   [15:0] trunc_ln708_309_reg_1705;
reg   [15:0] trunc_ln708_310_reg_1710;
reg   [15:0] trunc_ln708_311_reg_1715;
reg   [15:0] trunc_ln708_312_reg_1720;
reg   [15:0] trunc_ln708_313_reg_1725;
reg   [15:0] trunc_ln708_314_reg_1730;
reg   [15:0] trunc_ln708_315_reg_1735;
reg   [15:0] trunc_ln708_316_reg_1740;
reg   [15:0] trunc_ln708_317_reg_1745;
wire   [4:0] i_ic_fu_1224_p2;
reg   [4:0] i_ic_reg_1753;
wire    ap_CS_fsm_state15;
wire   [0:0] icmp_ln338_fu_1218_p2;
wire   [0:0] icmp_ln346_fu_1235_p2;
reg   [0:0] icmp_ln346_reg_1763;
wire   [31:0] select_ln356_fu_1302_p3;
wire   [0:0] icmp_ln350_fu_1281_p2;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state5;
reg   [3:0] tmpdata_V_address0;
reg    tmpdata_V_ce0;
reg    tmpdata_V_we0;
wire   [15:0] tmpdata_V_q0;
reg   [3:0] layer_out_i_address0;
reg    layer_out_i_ce0;
reg    layer_out_i_we0;
reg   [15:0] layer_out_i_d0;
wire   [15:0] layer_out_i_q0;
reg   [3:0] layer_out_i_address1;
reg    layer_out_i_ce1;
reg    layer_out_i_we1;
reg   [15:0] layer_out_i_d1;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config22_s_fu_696_ap_start;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config22_s_fu_696_ap_idle;
wire   [3:0] grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config22_s_fu_696_data_V_address0;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config22_s_fu_696_data_V_ce0;
wire   [7:0] grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config22_s_fu_696_output_V_address0;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config22_s_fu_696_output_V_ce0;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config22_s_fu_696_output_V_we0;
wire   [15:0] grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config22_s_fu_696_output_V_d0;
reg   [8:0] i_0_i_reg_449;
wire    ap_CS_fsm_state17;
reg   [4:0] i1_0_i_reg_460;
wire   [0:0] icmp_ln313_fu_705_p2;
wire    ap_block_pp0_stage0;
reg   [4:0] i_ic_0_i_reg_674;
wire    ap_CS_fsm_state14;
reg   [31:0] storemerge_i_reg_685;
reg    grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config22_s_fu_696_ap_start_reg;
reg    ap_block_state3_ignore_call0;
wire   [63:0] zext_ln317_fu_729_p1;
wire   [63:0] zext_ln332_fu_824_p1;
wire   [63:0] zext_ln340_fu_1230_p1;
wire   [31:0] select_ln361_fu_1256_p3;
wire   [31:0] add_ln354_fu_1286_p2;
wire   [31:0] add_ln359_fu_1240_p2;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire   [30:0] tmp_13_fu_758_p4;
wire   [30:0] tmp_14_fu_778_p4;
wire   [0:0] icmp_ln326_17_fu_768_p2;
wire   [0:0] icmp_ln326_18_fu_788_p2;
wire   [0:0] and_ln326_11_fu_800_p2;
wire   [0:0] and_ln326_fu_794_p2;
wire  signed [15:0] sext_ln1116_fu_834_p0;
wire  signed [7:0] trunc_ln332_fu_830_p1;
wire  signed [7:0] tmp_456_fu_846_p4;
wire  signed [7:0] tmp_457_fu_860_p4;
wire  signed [7:0] tmp_458_fu_874_p4;
wire  signed [7:0] tmp_459_fu_888_p4;
wire  signed [7:0] tmp_460_fu_902_p4;
wire  signed [7:0] tmp_461_fu_916_p4;
wire  signed [7:0] tmp_462_fu_930_p4;
wire  signed [7:0] tmp_463_fu_944_p4;
wire  signed [7:0] tmp_464_fu_958_p4;
wire  signed [7:0] tmp_465_fu_972_p4;
wire  signed [7:0] tmp_466_fu_986_p4;
wire  signed [7:0] tmp_467_fu_1000_p4;
wire  signed [7:0] tmp_468_fu_1014_p4;
wire  signed [7:0] tmp_469_fu_1028_p4;
wire  signed [5:0] tmp_23_fu_1042_p4;
wire   [31:0] add_ln361_fu_1251_p2;
wire   [31:0] add_ln356_fu_1297_p2;
wire  signed [15:0] grp_fu_1321_p1;
wire  signed [23:0] sext_ln1116_fu_834_p1;
wire  signed [15:0] grp_fu_1329_p1;
wire  signed [15:0] grp_fu_1337_p1;
wire  signed [15:0] grp_fu_1345_p1;
wire  signed [15:0] grp_fu_1353_p1;
wire  signed [15:0] grp_fu_1361_p1;
wire  signed [15:0] grp_fu_1369_p1;
wire  signed [15:0] grp_fu_1377_p1;
wire  signed [15:0] grp_fu_1385_p1;
wire  signed [15:0] grp_fu_1393_p1;
wire  signed [15:0] grp_fu_1401_p1;
wire  signed [15:0] grp_fu_1409_p1;
wire  signed [15:0] grp_fu_1417_p1;
wire  signed [15:0] grp_fu_1425_p1;
wire  signed [15:0] grp_fu_1433_p1;
reg   [15:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_485;
reg    ap_condition_487;
reg    ap_condition_320;
reg    ap_condition_439;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 16'd1;
#0 sX_5 = 32'd0;
#0 sY_5 = 32'd0;
#0 pY_5 = 32'd0;
#0 pX_5 = 32'd0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config22_s_fu_696_ap_start_reg = 1'b0;
end

conv_2d_cl_ss_ap_fixed_ap_fixed_16_5_5_3_0_config13_s_laylbW #(
    .DataWidth( 16 ),
    .AddressRange( 144 ),
    .AddressWidth( 8 ))
layer_in_V_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer_in_V_9_address0),
    .ce0(layer_in_V_9_ce0),
    .we0(layer_in_V_9_we0),
    .d0(grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config22_s_fu_696_output_V_d0),
    .q0(layer_in_V_9_q0)
);

conv_2d_cl_ss_ap_fixed_ap_fixed_16_5_5_3_0_config22_s_w22_V #(
    .DataWidth( 126 ),
    .AddressRange( 144 ),
    .AddressWidth( 8 ))
w22_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w22_V_address0),
    .ce0(w22_V_ce0),
    .q0(w22_V_q0)
);

pooling2d_cl_ss_ap_fixed_ap_fixed_16_5_5_3_0_config6_s_meibs #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
tmpdata_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tmpdata_V_address0),
    .ce0(tmpdata_V_ce0),
    .we0(tmpdata_V_we0),
    .d0(data_V_V_dout),
    .q0(tmpdata_V_q0)
);

conv_2d_cl_ss_ap_fixed_ap_fixed_16_5_5_3_0_config3_s_layefYi #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
layer_out_i_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer_out_i_address0),
    .ce0(layer_out_i_ce0),
    .we0(layer_out_i_we0),
    .d0(layer_out_i_d0),
    .q0(layer_out_i_q0),
    .address1(layer_out_i_address1),
    .ce1(layer_out_i_ce1),
    .we1(layer_out_i_we1),
    .d1(layer_out_i_d1)
);

cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config22_s grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config22_s_fu_696(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config22_s_fu_696_ap_start),
    .ap_done(grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config22_s_fu_696_ap_done),
    .ap_idle(grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config22_s_fu_696_ap_idle),
    .ap_ready(grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config22_s_fu_696_ap_ready),
    .data_V_address0(grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config22_s_fu_696_data_V_address0),
    .data_V_ce0(grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config22_s_fu_696_data_V_ce0),
    .data_V_q0(tmpdata_V_q0),
    .output_V_address0(grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config22_s_fu_696_output_V_address0),
    .output_V_ce0(grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config22_s_fu_696_output_V_ce0),
    .output_V_we0(grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config22_s_fu_696_output_V_we0),
    .output_V_d0(grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config22_s_fu_696_output_V_d0),
    .output_V_q0(layer_in_V_9_q0)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U108(
    .din0(trunc_ln332_fu_830_p1),
    .din1(grp_fu_1321_p1),
    .din2(acc_V_0_0_reg_651),
    .dout(grp_fu_1321_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U109(
    .din0(tmp_456_fu_846_p4),
    .din1(grp_fu_1329_p1),
    .din2(acc_V_1_0_reg_639),
    .dout(grp_fu_1329_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U110(
    .din0(tmp_457_fu_860_p4),
    .din1(grp_fu_1337_p1),
    .din2(acc_V_2_0_reg_627),
    .dout(grp_fu_1337_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U111(
    .din0(tmp_458_fu_874_p4),
    .din1(grp_fu_1345_p1),
    .din2(acc_V_3_0_reg_615),
    .dout(grp_fu_1345_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U112(
    .din0(tmp_459_fu_888_p4),
    .din1(grp_fu_1353_p1),
    .din2(acc_V_4_0_reg_603),
    .dout(grp_fu_1353_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U113(
    .din0(tmp_460_fu_902_p4),
    .din1(grp_fu_1361_p1),
    .din2(acc_V_5_0_reg_591),
    .dout(grp_fu_1361_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U114(
    .din0(tmp_461_fu_916_p4),
    .din1(grp_fu_1369_p1),
    .din2(acc_V_6_0_reg_579),
    .dout(grp_fu_1369_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U115(
    .din0(tmp_462_fu_930_p4),
    .din1(grp_fu_1377_p1),
    .din2(acc_V_7_0_reg_567),
    .dout(grp_fu_1377_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U116(
    .din0(tmp_463_fu_944_p4),
    .din1(grp_fu_1385_p1),
    .din2(acc_V_8_0_reg_555),
    .dout(grp_fu_1385_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U117(
    .din0(tmp_464_fu_958_p4),
    .din1(grp_fu_1393_p1),
    .din2(acc_V_9_0_reg_543),
    .dout(grp_fu_1393_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U118(
    .din0(tmp_465_fu_972_p4),
    .din1(grp_fu_1401_p1),
    .din2(acc_V_10_0_reg_531),
    .dout(grp_fu_1401_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U119(
    .din0(tmp_466_fu_986_p4),
    .din1(grp_fu_1409_p1),
    .din2(acc_V_11_0_reg_519),
    .dout(grp_fu_1409_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U120(
    .din0(tmp_467_fu_1000_p4),
    .din1(grp_fu_1417_p1),
    .din2(acc_V_12_0_reg_507),
    .dout(grp_fu_1417_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U121(
    .din0(tmp_468_fu_1014_p4),
    .din1(grp_fu_1425_p1),
    .din2(acc_V_13_0_reg_495),
    .dout(grp_fu_1425_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U122(
    .din0(tmp_469_fu_1028_p4),
    .din1(grp_fu_1433_p1),
    .din2(acc_V_14_0_reg_483),
    .dout(grp_fu_1433_p3)
);

myproject_mac_muladd_6s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_6s_16s_24ns_24_1_1_U123(
    .din0(tmp_23_fu_1042_p4),
    .din1(layer_in_V_9_q0),
    .din2(acc_V_15_0_reg_471),
    .dout(grp_fu_1441_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((icmp_ln313_fu_705_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state5) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state4) & (1'd1 == and_ln326_12_fu_806_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config22_s_fu_696_ap_done == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state5))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state5);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state4) & (1'd1 == and_ln326_12_fu_806_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config22_s_fu_696_ap_done == 1'b1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config22_s_fu_696_ap_start_reg <= 1'b0;
    end else begin
        if ((~((icmp_ln315_fu_717_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln315_fu_717_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
            grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config22_s_fu_696_ap_start_reg <= 1'b1;
        end else if ((grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config22_s_fu_696_ap_ready == 1'b1)) begin
            grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config22_s_fu_696_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_1581 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_0_0_reg_651 <= grp_fu_1321_p3;
    end else if (((1'b1 == ap_CS_fsm_state4) & (1'd1 == and_ln326_12_fu_806_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config22_s_fu_696_ap_done == 1'b1))) begin
        acc_V_0_0_reg_651 <= 24'd61440;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_1581 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_10_0_reg_531 <= grp_fu_1401_p3;
    end else if (((1'b1 == ap_CS_fsm_state4) & (1'd1 == and_ln326_12_fu_806_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config22_s_fu_696_ap_done == 1'b1))) begin
        acc_V_10_0_reg_531 <= 24'd38912;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_1581 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_11_0_reg_519 <= grp_fu_1409_p3;
    end else if (((1'b1 == ap_CS_fsm_state4) & (1'd1 == and_ln326_12_fu_806_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config22_s_fu_696_ap_done == 1'b1))) begin
        acc_V_11_0_reg_519 <= 24'd16734208;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_1581 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_12_0_reg_507 <= grp_fu_1417_p3;
    end else if (((1'b1 == ap_CS_fsm_state4) & (1'd1 == and_ln326_12_fu_806_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config22_s_fu_696_ap_done == 1'b1))) begin
        acc_V_12_0_reg_507 <= 24'd16384;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_1581 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_13_0_reg_495 <= grp_fu_1425_p3;
    end else if (((1'b1 == ap_CS_fsm_state4) & (1'd1 == and_ln326_12_fu_806_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config22_s_fu_696_ap_done == 1'b1))) begin
        acc_V_13_0_reg_495 <= 24'd2048;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_1581 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_14_0_reg_483 <= grp_fu_1433_p3;
    end else if (((1'b1 == ap_CS_fsm_state4) & (1'd1 == and_ln326_12_fu_806_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config22_s_fu_696_ap_done == 1'b1))) begin
        acc_V_14_0_reg_483 <= 24'd16752640;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_1581 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_15_0_reg_471 <= grp_fu_1441_p3;
    end else if (((1'b1 == ap_CS_fsm_state4) & (1'd1 == and_ln326_12_fu_806_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config22_s_fu_696_ap_done == 1'b1))) begin
        acc_V_15_0_reg_471 <= 24'd75776;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_1581 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_1_0_reg_639 <= grp_fu_1329_p3;
    end else if (((1'b1 == ap_CS_fsm_state4) & (1'd1 == and_ln326_12_fu_806_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config22_s_fu_696_ap_done == 1'b1))) begin
        acc_V_1_0_reg_639 <= 24'd98304;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_1581 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_2_0_reg_627 <= grp_fu_1337_p3;
    end else if (((1'b1 == ap_CS_fsm_state4) & (1'd1 == and_ln326_12_fu_806_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config22_s_fu_696_ap_done == 1'b1))) begin
        acc_V_2_0_reg_627 <= 24'd20480;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_1581 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_3_0_reg_615 <= grp_fu_1345_p3;
    end else if (((1'b1 == ap_CS_fsm_state4) & (1'd1 == and_ln326_12_fu_806_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config22_s_fu_696_ap_done == 1'b1))) begin
        acc_V_3_0_reg_615 <= 24'd32768;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_1581 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_4_0_reg_603 <= grp_fu_1353_p3;
    end else if (((1'b1 == ap_CS_fsm_state4) & (1'd1 == and_ln326_12_fu_806_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config22_s_fu_696_ap_done == 1'b1))) begin
        acc_V_4_0_reg_603 <= 24'd2048;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_1581 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_5_0_reg_591 <= grp_fu_1361_p3;
    end else if (((1'b1 == ap_CS_fsm_state4) & (1'd1 == and_ln326_12_fu_806_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config22_s_fu_696_ap_done == 1'b1))) begin
        acc_V_5_0_reg_591 <= 24'd14336;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_1581 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_6_0_reg_579 <= grp_fu_1369_p3;
    end else if (((1'b1 == ap_CS_fsm_state4) & (1'd1 == and_ln326_12_fu_806_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config22_s_fu_696_ap_done == 1'b1))) begin
        acc_V_6_0_reg_579 <= 24'd16730112;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_1581 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_7_0_reg_567 <= grp_fu_1377_p3;
    end else if (((1'b1 == ap_CS_fsm_state4) & (1'd1 == and_ln326_12_fu_806_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config22_s_fu_696_ap_done == 1'b1))) begin
        acc_V_7_0_reg_567 <= 24'd55296;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_1581 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_8_0_reg_555 <= grp_fu_1385_p3;
    end else if (((1'b1 == ap_CS_fsm_state4) & (1'd1 == and_ln326_12_fu_806_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config22_s_fu_696_ap_done == 1'b1))) begin
        acc_V_8_0_reg_555 <= 24'd77824;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_1581 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_9_0_reg_543 <= grp_fu_1393_p3;
    end else if (((1'b1 == ap_CS_fsm_state4) & (1'd1 == and_ln326_12_fu_806_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config22_s_fu_696_ap_done == 1'b1))) begin
        acc_V_9_0_reg_543 <= 24'd30720;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln315_fu_717_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln315_fu_717_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        i1_0_i_reg_460 <= i1_fu_723_p2;
    end else if (((icmp_ln313_fu_705_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i1_0_i_reg_460 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        i_0_i_reg_449 <= i_reg_1532;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_i_reg_449 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((res_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
        i_ic_0_i_reg_674 <= i_ic_reg_1753;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        i_ic_0_i_reg_674 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_fu_812_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_index_reg_663 <= ir_fu_818_p2;
    end else if (((1'b1 == ap_CS_fsm_state4) & (1'd1 == and_ln326_12_fu_806_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config22_s_fu_696_ap_done == 1'b1))) begin
        in_index_reg_663 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        if ((1'b1 == ap_condition_487)) begin
            pX_5 <= 32'd0;
        end else if ((1'b1 == ap_condition_485)) begin
            pX_5 <= add_ln359_fu_1240_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        if ((1'b1 == ap_condition_439)) begin
            pY_5 <= 32'd0;
        end else if ((1'b1 == ap_condition_320)) begin
            pY_5 <= add_ln354_fu_1286_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        if ((1'b1 == ap_condition_487)) begin
            sX_5 <= 32'd0;
        end else if ((1'b1 == ap_condition_485)) begin
            sX_5 <= select_ln361_fu_1256_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        if ((1'b1 == ap_condition_439)) begin
            storemerge_i_reg_685 <= 32'd0;
        end else if ((1'b1 == ap_condition_320)) begin
            storemerge_i_reg_685 <= select_ln356_fu_1302_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config22_s_fu_696_ap_done == 1'b1))) begin
        and_ln326_12_reg_1577 <= and_ln326_12_fu_806_p2;
        icmp_ln326_16_reg_1560 <= icmp_ln326_16_fu_748_p2;
        icmp_ln326_reg_1550 <= icmp_ln326_fu_738_p2;
        pX_5_load_reg_1571 <= pX_5;
        pY_5_load_reg_1565 <= pY_5;
        sX_5_load_reg_1545 <= sX_5;
        sY_5_load_reg_1555 <= sY_5;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (1'd1 == and_ln326_12_reg_1577))) begin
        i_ic_reg_1753 <= i_ic_fu_1224_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_1532 <= i_fu_711_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln324_reg_1581 <= icmp_ln324_fu_812_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & ((1'd0 == and_ln326_12_reg_1577) | (icmp_ln338_fu_1218_p2 == 1'd1)))) begin
        icmp_ln346_reg_1763 <= icmp_ln346_fu_1235_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln346_reg_1763 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
        sY_5 <= storemerge_i_reg_685;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        trunc_ln708_304_reg_1680 <= {{acc_V_2_0_reg_627[22:7]}};
        trunc_ln708_305_reg_1685 <= {{acc_V_3_0_reg_615[22:7]}};
        trunc_ln708_306_reg_1690 <= {{acc_V_4_0_reg_603[22:7]}};
        trunc_ln708_307_reg_1695 <= {{acc_V_5_0_reg_591[22:7]}};
        trunc_ln708_308_reg_1700 <= {{acc_V_6_0_reg_579[22:7]}};
        trunc_ln708_309_reg_1705 <= {{acc_V_7_0_reg_567[22:7]}};
        trunc_ln708_310_reg_1710 <= {{acc_V_8_0_reg_555[22:7]}};
        trunc_ln708_311_reg_1715 <= {{acc_V_9_0_reg_543[22:7]}};
        trunc_ln708_312_reg_1720 <= {{acc_V_10_0_reg_531[22:7]}};
        trunc_ln708_313_reg_1725 <= {{acc_V_11_0_reg_519[22:7]}};
        trunc_ln708_314_reg_1730 <= {{acc_V_12_0_reg_507[22:7]}};
        trunc_ln708_315_reg_1735 <= {{acc_V_13_0_reg_495[22:7]}};
        trunc_ln708_316_reg_1740 <= {{acc_V_14_0_reg_483[22:7]}};
        trunc_ln708_317_reg_1745 <= {{acc_V_15_0_reg_471[22:7]}};
    end
end

always @ (*) begin
    if ((icmp_ln324_fu_812_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state5 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state5 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln313_fu_705_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln313_fu_705_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln315_fu_717_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        data_V_V_blk_n = data_V_V_empty_n;
    end else begin
        data_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((icmp_ln315_fu_717_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln315_fu_717_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        data_V_V_read = 1'b1;
    end else begin
        data_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer_in_V_9_address0 = zext_ln332_fu_824_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        layer_in_V_9_address0 = grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config22_s_fu_696_output_V_address0;
    end else begin
        layer_in_V_9_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer_in_V_9_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        layer_in_V_9_ce0 = grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config22_s_fu_696_output_V_ce0;
    end else begin
        layer_in_V_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        layer_in_V_9_we0 = grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config22_s_fu_696_output_V_we0;
    end else begin
        layer_in_V_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        layer_out_i_address0 = zext_ln340_fu_1230_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        layer_out_i_address0 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        layer_out_i_address0 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        layer_out_i_address0 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        layer_out_i_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        layer_out_i_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        layer_out_i_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        layer_out_i_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        layer_out_i_address0 = 64'd0;
    end else begin
        layer_out_i_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        layer_out_i_address1 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        layer_out_i_address1 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        layer_out_i_address1 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        layer_out_i_address1 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        layer_out_i_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        layer_out_i_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        layer_out_i_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        layer_out_i_address1 = 64'd1;
    end else begin
        layer_out_i_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state7))) begin
        layer_out_i_ce0 = 1'b1;
    end else begin
        layer_out_i_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state7))) begin
        layer_out_i_ce1 = 1'b1;
    end else begin
        layer_out_i_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        layer_out_i_d0 = trunc_ln708_316_reg_1740;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        layer_out_i_d0 = trunc_ln708_314_reg_1730;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        layer_out_i_d0 = trunc_ln708_312_reg_1720;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        layer_out_i_d0 = trunc_ln708_310_reg_1710;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        layer_out_i_d0 = trunc_ln708_308_reg_1700;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        layer_out_i_d0 = trunc_ln708_306_reg_1690;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        layer_out_i_d0 = trunc_ln708_304_reg_1680;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        layer_out_i_d0 = {{acc_V_0_0_reg_651[22:7]}};
    end else begin
        layer_out_i_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        layer_out_i_d1 = trunc_ln708_317_reg_1745;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        layer_out_i_d1 = trunc_ln708_315_reg_1735;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        layer_out_i_d1 = trunc_ln708_313_reg_1725;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        layer_out_i_d1 = trunc_ln708_311_reg_1715;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        layer_out_i_d1 = trunc_ln708_309_reg_1705;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        layer_out_i_d1 = trunc_ln708_307_reg_1695;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        layer_out_i_d1 = trunc_ln708_305_reg_1685;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        layer_out_i_d1 = {{acc_V_1_0_reg_639[22:7]}};
    end else begin
        layer_out_i_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state7))) begin
        layer_out_i_we0 = 1'b1;
    end else begin
        layer_out_i_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state7))) begin
        layer_out_i_we1 = 1'b1;
    end else begin
        layer_out_i_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        res_V_V_blk_n = res_V_V_full_n;
    end else begin
        res_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((res_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
        res_V_V_write = 1'b1;
    end else begin
        res_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln315_fu_717_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        tmpdata_V_address0 = zext_ln317_fu_729_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmpdata_V_address0 = grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config22_s_fu_696_data_V_address0;
    end else begin
        tmpdata_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((~((icmp_ln315_fu_717_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln315_fu_717_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        tmpdata_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmpdata_V_ce0 = grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config22_s_fu_696_data_V_ce0;
    end else begin
        tmpdata_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln315_fu_717_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln315_fu_717_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        tmpdata_V_we0 = 1'b1;
    end else begin
        tmpdata_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w22_V_ce0 = 1'b1;
    end else begin
        w22_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln313_fu_705_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if ((~((icmp_ln315_fu_717_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln315_fu_717_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if ((~((icmp_ln315_fu_717_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln315_fu_717_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (1'd1 == and_ln326_12_fu_806_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config22_s_fu_696_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'd0 == and_ln326_12_fu_806_p2) & (1'b1 == ap_CS_fsm_state4) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config22_s_fu_696_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln324_fu_812_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln324_fu_812_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & ((1'd0 == and_ln326_12_reg_1577) | (icmp_ln338_fu_1218_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((res_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln354_fu_1286_p2 = (pY_5_load_reg_1565 + 32'd1);

assign add_ln356_fu_1297_p2 = (sY_5_load_reg_1555 + 32'd1);

assign add_ln359_fu_1240_p2 = (pX_5_load_reg_1571 + 32'd1);

assign add_ln361_fu_1251_p2 = (sX_5_load_reg_1545 + 32'd1);

assign and_ln326_11_fu_800_p2 = (icmp_ln326_18_fu_788_p2 & icmp_ln326_17_fu_768_p2);

assign and_ln326_12_fu_806_p2 = (and_ln326_fu_794_p2 & and_ln326_11_fu_800_p2);

assign and_ln326_fu_794_p2 = (icmp_ln326_fu_738_p2 & icmp_ln326_16_fu_748_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state3 = ((icmp_ln315_fu_717_p2 == 1'd0) & (data_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state3_ignore_call0 = ((icmp_ln315_fu_717_p2 == 1'd0) & (data_V_V_empty_n == 1'b0));
end

assign ap_block_state5_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_320 = (((icmp_ln350_fu_1281_p2 == 1'd0) & (1'd0 == and_ln326_12_reg_1577) & (icmp_ln346_fu_1235_p2 == 1'd1)) | ((icmp_ln350_fu_1281_p2 == 1'd0) & (icmp_ln346_fu_1235_p2 == 1'd1) & (icmp_ln338_fu_1218_p2 == 1'd1)));
end

always @ (*) begin
    ap_condition_439 = (((1'd0 == and_ln326_12_reg_1577) & (icmp_ln350_fu_1281_p2 == 1'd1) & (icmp_ln346_fu_1235_p2 == 1'd1)) | ((icmp_ln350_fu_1281_p2 == 1'd1) & (icmp_ln346_fu_1235_p2 == 1'd1) & (icmp_ln338_fu_1218_p2 == 1'd1)));
end

always @ (*) begin
    ap_condition_485 = (((icmp_ln346_fu_1235_p2 == 1'd0) & (1'd0 == and_ln326_12_reg_1577)) | ((icmp_ln346_fu_1235_p2 == 1'd0) & (icmp_ln338_fu_1218_p2 == 1'd1)));
end

always @ (*) begin
    ap_condition_487 = (((1'd0 == and_ln326_12_reg_1577) & (icmp_ln346_fu_1235_p2 == 1'd1)) | ((icmp_ln346_fu_1235_p2 == 1'd1) & (icmp_ln338_fu_1218_p2 == 1'd1)));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config22_s_fu_696_ap_start = grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config22_s_fu_696_ap_start_reg;

assign grp_fu_1321_p1 = sext_ln1116_fu_834_p1;

assign grp_fu_1329_p1 = sext_ln1116_fu_834_p1;

assign grp_fu_1337_p1 = sext_ln1116_fu_834_p1;

assign grp_fu_1345_p1 = sext_ln1116_fu_834_p1;

assign grp_fu_1353_p1 = sext_ln1116_fu_834_p1;

assign grp_fu_1361_p1 = sext_ln1116_fu_834_p1;

assign grp_fu_1369_p1 = sext_ln1116_fu_834_p1;

assign grp_fu_1377_p1 = sext_ln1116_fu_834_p1;

assign grp_fu_1385_p1 = sext_ln1116_fu_834_p1;

assign grp_fu_1393_p1 = sext_ln1116_fu_834_p1;

assign grp_fu_1401_p1 = sext_ln1116_fu_834_p1;

assign grp_fu_1409_p1 = sext_ln1116_fu_834_p1;

assign grp_fu_1417_p1 = sext_ln1116_fu_834_p1;

assign grp_fu_1425_p1 = sext_ln1116_fu_834_p1;

assign grp_fu_1433_p1 = sext_ln1116_fu_834_p1;

assign i1_fu_723_p2 = (i1_0_i_reg_460 + 5'd1);

assign i_fu_711_p2 = (i_0_i_reg_449 + 9'd1);

assign i_ic_fu_1224_p2 = (i_ic_0_i_reg_674 + 5'd1);

assign icmp_ln313_fu_705_p2 = ((i_0_i_reg_449 == 9'd324) ? 1'b1 : 1'b0);

assign icmp_ln315_fu_717_p2 = ((i1_0_i_reg_460 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln324_fu_812_p2 = ((in_index_reg_663 == 8'd144) ? 1'b1 : 1'b0);

assign icmp_ln326_16_fu_748_p2 = ((sY_5 == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln326_17_fu_768_p2 = (($signed(tmp_13_fu_758_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln326_18_fu_788_p2 = (($signed(tmp_14_fu_778_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln326_fu_738_p2 = ((sX_5 == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln338_fu_1218_p2 = ((i_ic_0_i_reg_674 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln346_fu_1235_p2 = ((pX_5_load_reg_1571 == 32'd17) ? 1'b1 : 1'b0);

assign icmp_ln350_fu_1281_p2 = ((pY_5_load_reg_1565 == 32'd17) ? 1'b1 : 1'b0);

assign ir_fu_818_p2 = (in_index_reg_663 + 8'd1);

assign res_V_V_din = layer_out_i_q0;

assign select_ln356_fu_1302_p3 = ((icmp_ln326_16_reg_1560[0:0] === 1'b1) ? 32'd2 : add_ln356_fu_1297_p2);

assign select_ln361_fu_1256_p3 = ((icmp_ln326_reg_1550[0:0] === 1'b1) ? 32'd2 : add_ln361_fu_1251_p2);

assign sext_ln1116_fu_834_p0 = layer_in_V_9_q0;

assign sext_ln1116_fu_834_p1 = sext_ln1116_fu_834_p0;

assign tmp_13_fu_758_p4 = {{pY_5[31:1]}};

assign tmp_14_fu_778_p4 = {{pX_5[31:1]}};

assign tmp_23_fu_1042_p4 = {{w22_V_q0[125:120]}};

assign tmp_456_fu_846_p4 = {{w22_V_q0[15:8]}};

assign tmp_457_fu_860_p4 = {{w22_V_q0[23:16]}};

assign tmp_458_fu_874_p4 = {{w22_V_q0[31:24]}};

assign tmp_459_fu_888_p4 = {{w22_V_q0[39:32]}};

assign tmp_460_fu_902_p4 = {{w22_V_q0[47:40]}};

assign tmp_461_fu_916_p4 = {{w22_V_q0[55:48]}};

assign tmp_462_fu_930_p4 = {{w22_V_q0[63:56]}};

assign tmp_463_fu_944_p4 = {{w22_V_q0[71:64]}};

assign tmp_464_fu_958_p4 = {{w22_V_q0[79:72]}};

assign tmp_465_fu_972_p4 = {{w22_V_q0[87:80]}};

assign tmp_466_fu_986_p4 = {{w22_V_q0[95:88]}};

assign tmp_467_fu_1000_p4 = {{w22_V_q0[103:96]}};

assign tmp_468_fu_1014_p4 = {{w22_V_q0[111:104]}};

assign tmp_469_fu_1028_p4 = {{w22_V_q0[119:112]}};

assign trunc_ln332_fu_830_p1 = w22_V_q0[7:0];

assign w22_V_address0 = zext_ln332_fu_824_p1;

assign zext_ln317_fu_729_p1 = i1_0_i_reg_460;

assign zext_ln332_fu_824_p1 = in_index_reg_663;

assign zext_ln340_fu_1230_p1 = i_ic_0_i_reg_674;

endmodule //conv_2d_cl_ss_ap_fixed_ap_fixed_16_5_5_3_0_config22_s
