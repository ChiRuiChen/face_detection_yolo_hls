// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config22_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        data_V_address0,
        data_V_ce0,
        data_V_q0,
        output_V_address0,
        output_V_ce0,
        output_V_we0,
        output_V_d0,
        output_V_q0
);

parameter    ap_ST_fsm_state1 = 14'd1;
parameter    ap_ST_fsm_state2 = 14'd2;
parameter    ap_ST_fsm_state3 = 14'd4;
parameter    ap_ST_fsm_state4 = 14'd8;
parameter    ap_ST_fsm_state5 = 14'd16;
parameter    ap_ST_fsm_state6 = 14'd32;
parameter    ap_ST_fsm_state7 = 14'd64;
parameter    ap_ST_fsm_state8 = 14'd128;
parameter    ap_ST_fsm_state9 = 14'd256;
parameter    ap_ST_fsm_state10 = 14'd512;
parameter    ap_ST_fsm_state11 = 14'd1024;
parameter    ap_ST_fsm_state12 = 14'd2048;
parameter    ap_ST_fsm_state13 = 14'd4096;
parameter    ap_ST_fsm_state14 = 14'd8192;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] data_V_address0;
output   data_V_ce0;
input  [15:0] data_V_q0;
output  [7:0] output_V_address0;
output   output_V_ce0;
output   output_V_we0;
output  [15:0] output_V_d0;
input  [15:0] output_V_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg data_V_ce0;
reg[7:0] output_V_address0;
reg output_V_ce0;
reg output_V_we0;
reg[15:0] output_V_d0;

(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [9:0] linebuffer_V_9_address0;
reg    linebuffer_V_9_ce0;
reg    linebuffer_V_9_we0;
reg   [15:0] linebuffer_V_9_d0;
wire   [15:0] linebuffer_V_9_q0;
wire   [4:0] i0_fu_291_p2;
reg   [4:0] i0_reg_751;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln246_fu_285_p2;
wire   [10:0] zext_ln203_63_fu_302_p1;
reg   [10:0] zext_ln203_63_reg_761;
wire    ap_CS_fsm_state3;
wire   [9:0] zext_ln203_64_fu_306_p1;
reg   [9:0] zext_ln203_64_reg_767;
wire   [6:0] zext_ln203_65_fu_310_p1;
reg   [6:0] zext_ln203_65_reg_772;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln250_fu_323_p2;
wire   [1:0] add_ln255_fu_357_p2;
reg   [1:0] add_ln255_reg_787;
wire   [9:0] add_ln203_39_fu_395_p2;
reg   [9:0] add_ln203_39_reg_797;
wire   [15:0] tmpinput_V_q0;
reg   [15:0] tmp1_V_reg_802;
wire    ap_CS_fsm_state5;
wire   [6:0] zext_ln255_fu_400_p1;
reg   [6:0] zext_ln255_reg_807;
reg   [9:0] linebuffer_V_9_addr_1_reg_813;
reg   [15:0] tmp_V_reg_818;
wire   [4:0] i2_fu_413_p2;
reg   [4:0] i2_reg_826;
wire    ap_CS_fsm_state6;
wire   [10:0] add_ln203_42_fu_444_p2;
reg   [10:0] add_ln203_42_reg_831;
wire   [0:0] icmp_ln258_fu_407_p2;
wire   [1:0] i1_fu_512_p2;
wire   [1:0] i0_6_fu_528_p2;
reg   [1:0] i0_6_reg_849;
wire    ap_CS_fsm_state8;
wire   [5:0] zext_ln192_25_fu_546_p1;
reg   [5:0] zext_ln192_25_reg_854;
wire   [0:0] icmp_ln188_fu_522_p2;
wire   [5:0] add_ln192_fu_550_p2;
reg   [5:0] add_ln192_reg_859;
wire   [1:0] i1_11_fu_562_p2;
reg   [1:0] i1_11_reg_867;
wire    ap_CS_fsm_state9;
wire   [8:0] sub_ln192_fu_592_p2;
reg   [8:0] sub_ln192_reg_872;
wire   [0:0] icmp_ln190_fu_556_p2;
wire   [4:0] i2_12_fu_608_p2;
reg   [4:0] i2_12_reg_881;
wire    ap_CS_fsm_state10;
wire   [8:0] add_ln192_21_fu_623_p2;
reg   [8:0] add_ln192_21_reg_886;
wire   [0:0] icmp_ln191_fu_602_p2;
wire   [1:0] i1_12_fu_665_p2;
reg   [1:0] i1_12_reg_899;
wire    ap_CS_fsm_state12;
wire   [7:0] sub_ln203_fu_691_p2;
reg   [7:0] sub_ln203_reg_904;
wire   [0:0] icmp_ln200_fu_659_p2;
wire   [6:0] zext_ln202_fu_697_p1;
reg   [6:0] zext_ln202_reg_909;
wire   [4:0] i2_11_fu_707_p2;
reg   [4:0] i2_11_reg_917;
wire    ap_CS_fsm_state13;
wire   [7:0] add_ln203_fu_725_p2;
reg   [7:0] add_ln203_reg_922;
wire   [0:0] icmp_ln202_fu_701_p2;
reg   [5:0] tmpinput_V_address0;
reg    tmpinput_V_ce0;
reg    tmpinput_V_we0;
reg   [15:0] tmpinput_V_d0;
reg   [4:0] i0_0_reg_195;
reg   [1:0] i1_0_reg_207;
reg   [4:0] i2_0_reg_219;
wire    ap_CS_fsm_state7;
reg   [1:0] i0_0_i_reg_230;
reg   [1:0] i1_0_i_reg_241;
reg   [4:0] i2_0_i_reg_252;
wire    ap_CS_fsm_state11;
reg   [1:0] i11_0_i_reg_263;
reg   [4:0] i22_0_i_reg_274;
wire    ap_CS_fsm_state14;
wire   [63:0] zext_ln248_fu_297_p1;
wire   [63:0] tmp_82_fu_314_p3;
wire   [63:0] zext_ln252_5_fu_352_p1;
wire   [63:0] zext_ln255_15_fu_384_p1;
wire   [63:0] zext_ln203_66_fu_403_p1;
wire   [63:0] zext_ln203_72_fu_479_p1;
wire   [63:0] zext_ln203_68_fu_507_p1;
wire   [63:0] zext_ln203_70_fu_518_p1;
wire   [63:0] zext_ln192_6_fu_646_p1;
wire   [63:0] zext_ln192_fu_654_p1;
wire   [63:0] zext_ln203_74_fu_739_p1;
wire   [63:0] zext_ln203_fu_744_p1;
wire   [1:0] xor_ln252_fu_329_p2;
wire   [5:0] tmp_84_fu_335_p3;
wire   [6:0] zext_ln252_fu_343_p1;
wire   [6:0] add_ln252_fu_347_p2;
wire   [5:0] tmp_85_fu_363_p3;
wire   [6:0] zext_ln255_14_fu_375_p1;
wire   [6:0] add_ln255_6_fu_379_p2;
wire   [9:0] zext_ln255_13_fu_371_p1;
wire   [9:0] add_ln203_38_fu_389_p2;
wire   [5:0] tmp_88_fu_419_p3;
wire   [6:0] zext_ln203_69_fu_427_p1;
wire   [6:0] add_ln203_41_fu_431_p2;
wire   [10:0] tmp_90_cast_fu_436_p3;
wire   [5:0] tmp_91_fu_449_p3;
wire   [6:0] zext_ln203_71_fu_457_p1;
wire   [6:0] add_ln203_43_fu_461_p2;
wire   [10:0] tmp_93_cast_fu_466_p3;
wire   [10:0] add_ln203_44_fu_474_p2;
wire   [1:0] sub_ln265_fu_484_p2;
wire   [5:0] tmp_87_fu_490_p3;
wire   [6:0] zext_ln203_67_fu_498_p1;
wire   [6:0] add_ln203_40_fu_502_p2;
wire   [0:0] trunc_ln192_fu_534_p1;
wire   [4:0] shl_ln_fu_538_p3;
wire   [7:0] shl_ln192_s_fu_568_p3;
wire   [5:0] shl_ln192_1_fu_580_p3;
wire   [8:0] zext_ln192_26_fu_576_p1;
wire   [8:0] zext_ln192_27_fu_588_p1;
wire   [5:0] zext_ln191_fu_598_p1;
wire   [5:0] add_ln192_22_fu_614_p2;
wire   [8:0] zext_ln192_28_fu_619_p1;
wire   [5:0] add_ln192_23_fu_628_p2;
wire   [8:0] zext_ln192_29_fu_633_p1;
wire   [8:0] add_ln192_24_fu_637_p2;
wire  signed [31:0] sext_ln192_7_fu_642_p1;
wire  signed [31:0] sext_ln192_fu_651_p1;
wire   [5:0] shl_ln203_5_fu_679_p3;
wire   [7:0] shl_ln6_fu_671_p3;
wire   [7:0] zext_ln203_15_fu_687_p1;
wire   [5:0] or_ln_fu_713_p3;
wire   [7:0] zext_ln203_16_fu_721_p1;
wire   [6:0] zext_ln203_73_fu_730_p1;
wire   [6:0] add_ln203_45_fu_734_p2;
reg   [13:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 14'd1;
end

cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config22_s_lineocq #(
    .DataWidth( 16 ),
    .AddressRange( 576 ),
    .AddressWidth( 10 ))
linebuffer_V_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_9_address0),
    .ce0(linebuffer_V_9_ce0),
    .we0(linebuffer_V_9_we0),
    .d0(linebuffer_V_9_d0),
    .q0(linebuffer_V_9_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config13_s_tmpikbM #(
    .DataWidth( 16 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
tmpinput_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tmpinput_V_address0),
    .ce0(tmpinput_V_ce0),
    .we0(tmpinput_V_we0),
    .d0(tmpinput_V_d0),
    .q0(tmpinput_V_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln246_fu_285_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i0_0_i_reg_230 <= 2'd0;
    end else if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln190_fu_556_p2 == 1'd1))) begin
        i0_0_i_reg_230 <= i0_6_reg_849;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i0_0_reg_195 <= 5'd0;
    end else if (((icmp_ln250_fu_323_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        i0_0_reg_195 <= i0_reg_751;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln188_fu_522_p2 == 1'd1))) begin
        i11_0_i_reg_263 <= 2'd0;
    end else if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln202_fu_701_p2 == 1'd1))) begin
        i11_0_i_reg_263 <= i1_12_reg_899;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln191_fu_602_p2 == 1'd1))) begin
        i1_0_i_reg_241 <= i1_11_reg_867;
    end else if (((icmp_ln188_fu_522_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        i1_0_i_reg_241 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln258_fu_407_p2 == 1'd1))) begin
        i1_0_reg_207 <= i1_fu_512_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        i1_0_reg_207 <= 2'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        i22_0_i_reg_274 <= i2_11_reg_917;
    end else if (((icmp_ln200_fu_659_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        i22_0_i_reg_274 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln190_fu_556_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        i2_0_i_reg_252 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        i2_0_i_reg_252 <= i2_12_reg_881;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        i2_0_reg_219 <= i2_reg_826;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        i2_0_reg_219 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln191_fu_602_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        add_ln192_21_reg_886 <= add_ln192_21_fu_623_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln188_fu_522_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        add_ln192_reg_859[5 : 4] <= add_ln192_fu_550_p2[5 : 4];
        zext_ln192_25_reg_854[4] <= zext_ln192_25_fu_546_p1[4];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln250_fu_323_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        add_ln203_39_reg_797 <= add_ln203_39_fu_395_p2;
        add_ln255_reg_787 <= add_ln255_fu_357_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln258_fu_407_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        add_ln203_42_reg_831 <= add_ln203_42_fu_444_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln202_fu_701_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        add_ln203_reg_922 <= add_ln203_fu_725_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        i0_6_reg_849 <= i0_6_fu_528_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i0_reg_751 <= i0_fu_291_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        i1_11_reg_867 <= i1_11_fu_562_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        i1_12_reg_899 <= i1_12_fu_665_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        i2_11_reg_917 <= i2_11_fu_707_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        i2_12_reg_881 <= i2_12_fu_608_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        i2_reg_826 <= i2_fu_413_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        linebuffer_V_9_addr_1_reg_813 <= zext_ln203_66_fu_403_p1;
        tmp1_V_reg_802 <= tmpinput_V_q0;
        tmp_V_reg_818 <= linebuffer_V_9_q0;
        zext_ln255_reg_807[1 : 0] <= zext_ln255_fu_400_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln190_fu_556_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        sub_ln192_reg_872[8 : 4] <= sub_ln192_fu_592_p2[8 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln200_fu_659_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        sub_ln203_reg_904[7 : 4] <= sub_ln203_fu_691_p2[7 : 4];
        zext_ln202_reg_909[5 : 4] <= zext_ln202_fu_697_p1[5 : 4];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        zext_ln203_63_reg_761[4 : 0] <= zext_ln203_63_fu_302_p1[4 : 0];
        zext_ln203_64_reg_767[4 : 0] <= zext_ln203_64_fu_306_p1[4 : 0];
        zext_ln203_65_reg_772[4 : 0] <= zext_ln203_65_fu_310_p1[4 : 0];
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state12) & (icmp_ln200_fu_659_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln200_fu_659_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        data_V_ce0 = 1'b1;
    end else begin
        data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        linebuffer_V_9_address0 = zext_ln203_70_fu_518_p1;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln258_fu_407_p2 == 1'd1))) begin
        linebuffer_V_9_address0 = linebuffer_V_9_addr_1_reg_813;
    end else if (((icmp_ln258_fu_407_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_9_address0 = zext_ln203_72_fu_479_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        linebuffer_V_9_address0 = zext_ln255_15_fu_384_p1;
    end else begin
        linebuffer_V_9_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state7) | ((1'b1 == ap_CS_fsm_state6) & (icmp_ln258_fu_407_p2 == 1'd1)) | ((icmp_ln258_fu_407_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6)))) begin
        linebuffer_V_9_ce0 = 1'b1;
    end else begin
        linebuffer_V_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        linebuffer_V_9_d0 = linebuffer_V_9_q0;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln258_fu_407_p2 == 1'd1))) begin
        linebuffer_V_9_d0 = tmp1_V_reg_802;
    end else begin
        linebuffer_V_9_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((1'b1 == ap_CS_fsm_state6) & (icmp_ln258_fu_407_p2 == 1'd1)))) begin
        linebuffer_V_9_we0 = 1'b1;
    end else begin
        linebuffer_V_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        output_V_address0 = zext_ln203_fu_744_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        output_V_address0 = zext_ln192_fu_654_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        output_V_address0 = zext_ln192_6_fu_646_p1;
    end else begin
        output_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        output_V_ce0 = 1'b1;
    end else begin
        output_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        output_V_d0 = tmpinput_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        output_V_d0 = output_V_q0;
    end else begin
        output_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state11))) begin
        output_V_we0 = 1'b1;
    end else begin
        output_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        tmpinput_V_address0 = zext_ln203_74_fu_739_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        tmpinput_V_address0 = zext_ln203_68_fu_507_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmpinput_V_address0 = zext_ln252_5_fu_352_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        tmpinput_V_address0 = tmp_82_fu_314_p3;
    end else begin
        tmpinput_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state6))) begin
        tmpinput_V_ce0 = 1'b1;
    end else begin
        tmpinput_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        tmpinput_V_d0 = tmp_V_reg_818;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        tmpinput_V_d0 = data_V_q0;
    end else begin
        tmpinput_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b1 == ap_CS_fsm_state6) & (icmp_ln258_fu_407_p2 == 1'd1)))) begin
        tmpinput_V_we0 = 1'b1;
    end else begin
        tmpinput_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln246_fu_285_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln250_fu_323_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln258_fu_407_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln188_fu_522_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln190_fu_556_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln191_fu_602_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state12 : begin
            if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln200_fu_659_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln202_fu_701_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln192_21_fu_623_p2 = (zext_ln192_28_fu_619_p1 + sub_ln192_reg_872);

assign add_ln192_22_fu_614_p2 = (zext_ln192_25_reg_854 + zext_ln191_fu_598_p1);

assign add_ln192_23_fu_628_p2 = (add_ln192_reg_859 + zext_ln191_fu_598_p1);

assign add_ln192_24_fu_637_p2 = (zext_ln192_29_fu_633_p1 + sub_ln192_reg_872);

assign add_ln192_fu_550_p2 = (6'd16 + zext_ln192_25_fu_546_p1);

assign add_ln203_38_fu_389_p2 = ($signed(zext_ln255_13_fu_371_p1) + $signed(10'd544));

assign add_ln203_39_fu_395_p2 = (zext_ln203_64_reg_767 + add_ln203_38_fu_389_p2);

assign add_ln203_40_fu_502_p2 = (zext_ln203_65_reg_772 + zext_ln203_67_fu_498_p1);

assign add_ln203_41_fu_431_p2 = (zext_ln255_reg_807 + zext_ln203_69_fu_427_p1);

assign add_ln203_42_fu_444_p2 = (zext_ln203_63_reg_761 + tmp_90_cast_fu_436_p3);

assign add_ln203_43_fu_461_p2 = (zext_ln255_reg_807 + zext_ln203_71_fu_457_p1);

assign add_ln203_44_fu_474_p2 = (zext_ln203_63_reg_761 + tmp_93_cast_fu_466_p3);

assign add_ln203_45_fu_734_p2 = (zext_ln202_reg_909 + zext_ln203_73_fu_730_p1);

assign add_ln203_fu_725_p2 = (sub_ln203_reg_904 + zext_ln203_16_fu_721_p1);

assign add_ln252_fu_347_p2 = (zext_ln203_65_reg_772 + zext_ln252_fu_343_p1);

assign add_ln255_6_fu_379_p2 = (zext_ln203_65_reg_772 + zext_ln255_14_fu_375_p1);

assign add_ln255_fu_357_p2 = ($signed(i1_0_reg_207) + $signed(2'd3));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign data_V_address0 = zext_ln248_fu_297_p1;

assign i0_6_fu_528_p2 = (i0_0_i_reg_230 + 2'd1);

assign i0_fu_291_p2 = (i0_0_reg_195 + 5'd1);

assign i1_11_fu_562_p2 = (i1_0_i_reg_241 + 2'd1);

assign i1_12_fu_665_p2 = (i11_0_i_reg_263 + 2'd1);

assign i1_fu_512_p2 = (i1_0_reg_207 + 2'd1);

assign i2_11_fu_707_p2 = (i22_0_i_reg_274 + 5'd1);

assign i2_12_fu_608_p2 = (i2_0_i_reg_252 + 5'd1);

assign i2_fu_413_p2 = (i2_0_reg_219 + 5'd1);

assign icmp_ln188_fu_522_p2 = ((i0_0_i_reg_230 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln190_fu_556_p2 = ((i1_0_i_reg_241 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln191_fu_602_p2 = ((i2_0_i_reg_252 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln200_fu_659_p2 = ((i11_0_i_reg_263 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln202_fu_701_p2 = ((i22_0_i_reg_274 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln246_fu_285_p2 = ((i0_0_reg_195 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln250_fu_323_p2 = ((i1_0_reg_207 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln258_fu_407_p2 = ((i2_0_reg_219 == 5'd17) ? 1'b1 : 1'b0);

assign or_ln_fu_713_p3 = {{1'd1}, {i22_0_i_reg_274}};

assign sext_ln192_7_fu_642_p1 = $signed(add_ln192_24_fu_637_p2);

assign sext_ln192_fu_651_p1 = $signed(add_ln192_21_reg_886);

assign shl_ln192_1_fu_580_p3 = {{i1_0_i_reg_241}, {4'd0}};

assign shl_ln192_s_fu_568_p3 = {{i1_0_i_reg_241}, {6'd0}};

assign shl_ln203_5_fu_679_p3 = {{i11_0_i_reg_263}, {4'd0}};

assign shl_ln6_fu_671_p3 = {{i11_0_i_reg_263}, {6'd0}};

assign shl_ln_fu_538_p3 = {{trunc_ln192_fu_534_p1}, {4'd0}};

assign sub_ln192_fu_592_p2 = (zext_ln192_26_fu_576_p1 - zext_ln192_27_fu_588_p1);

assign sub_ln203_fu_691_p2 = (shl_ln6_fu_671_p3 - zext_ln203_15_fu_687_p1);

assign sub_ln265_fu_484_p2 = ($signed(2'd2) - $signed(i1_0_reg_207));

assign tmp_82_fu_314_p3 = {{59'd1}, {i0_0_reg_195}};

assign tmp_84_fu_335_p3 = {{xor_ln252_fu_329_p2}, {4'd0}};

assign tmp_85_fu_363_p3 = {{add_ln255_fu_357_p2}, {4'd0}};

assign tmp_87_fu_490_p3 = {{sub_ln265_fu_484_p2}, {4'd0}};

assign tmp_88_fu_419_p3 = {{i2_0_reg_219}, {1'd0}};

assign tmp_90_cast_fu_436_p3 = {{add_ln203_41_fu_431_p2}, {4'd0}};

assign tmp_91_fu_449_p3 = {{i2_fu_413_p2}, {1'd0}};

assign tmp_93_cast_fu_466_p3 = {{add_ln203_43_fu_461_p2}, {4'd0}};

assign trunc_ln192_fu_534_p1 = i0_0_i_reg_230[0:0];

assign xor_ln252_fu_329_p2 = (i1_0_reg_207 ^ 2'd3);

assign zext_ln191_fu_598_p1 = i2_0_i_reg_252;

assign zext_ln192_25_fu_546_p1 = shl_ln_fu_538_p3;

assign zext_ln192_26_fu_576_p1 = shl_ln192_s_fu_568_p3;

assign zext_ln192_27_fu_588_p1 = shl_ln192_1_fu_580_p3;

assign zext_ln192_28_fu_619_p1 = add_ln192_22_fu_614_p2;

assign zext_ln192_29_fu_633_p1 = add_ln192_23_fu_628_p2;

assign zext_ln192_6_fu_646_p1 = $unsigned(sext_ln192_7_fu_642_p1);

assign zext_ln192_fu_654_p1 = $unsigned(sext_ln192_fu_651_p1);

assign zext_ln202_fu_697_p1 = shl_ln203_5_fu_679_p3;

assign zext_ln203_15_fu_687_p1 = shl_ln203_5_fu_679_p3;

assign zext_ln203_16_fu_721_p1 = or_ln_fu_713_p3;

assign zext_ln203_63_fu_302_p1 = i0_0_reg_195;

assign zext_ln203_64_fu_306_p1 = i0_0_reg_195;

assign zext_ln203_65_fu_310_p1 = i0_0_reg_195;

assign zext_ln203_66_fu_403_p1 = add_ln203_39_reg_797;

assign zext_ln203_67_fu_498_p1 = tmp_87_fu_490_p3;

assign zext_ln203_68_fu_507_p1 = add_ln203_40_fu_502_p2;

assign zext_ln203_69_fu_427_p1 = tmp_88_fu_419_p3;

assign zext_ln203_70_fu_518_p1 = add_ln203_42_reg_831;

assign zext_ln203_71_fu_457_p1 = tmp_91_fu_449_p3;

assign zext_ln203_72_fu_479_p1 = add_ln203_44_fu_474_p2;

assign zext_ln203_73_fu_730_p1 = i22_0_i_reg_274;

assign zext_ln203_74_fu_739_p1 = add_ln203_45_fu_734_p2;

assign zext_ln203_fu_744_p1 = add_ln203_reg_922;

assign zext_ln248_fu_297_p1 = i0_0_reg_195;

assign zext_ln252_5_fu_352_p1 = add_ln252_fu_347_p2;

assign zext_ln252_fu_343_p1 = tmp_84_fu_335_p3;

assign zext_ln255_13_fu_371_p1 = tmp_85_fu_363_p3;

assign zext_ln255_14_fu_375_p1 = tmp_85_fu_363_p3;

assign zext_ln255_15_fu_384_p1 = add_ln255_6_fu_379_p2;

assign zext_ln255_fu_400_p1 = add_ln255_reg_787;

always @ (posedge ap_clk) begin
    zext_ln203_63_reg_761[10:5] <= 6'b000000;
    zext_ln203_64_reg_767[9:5] <= 5'b00000;
    zext_ln203_65_reg_772[6:5] <= 2'b00;
    zext_ln255_reg_807[6:2] <= 5'b00000;
    zext_ln192_25_reg_854[3:0] <= 4'b0000;
    zext_ln192_25_reg_854[5] <= 1'b0;
    add_ln192_reg_859[3:0] <= 4'b0000;
    sub_ln192_reg_872[3:0] <= 4'b0000;
    sub_ln203_reg_904[3:0] <= 4'b0000;
    zext_ln202_reg_909[3:0] <= 4'b0000;
    zext_ln202_reg_909[6] <= 1'b0;
end

endmodule //cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config22_s
