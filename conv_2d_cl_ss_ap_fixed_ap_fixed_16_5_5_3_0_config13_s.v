// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conv_2d_cl_ss_ap_fixed_ap_fixed_16_5_5_3_0_config13_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        data_V_V_dout,
        data_V_V_empty_n,
        data_V_V_read,
        res_V_V_din,
        res_V_V_full_n,
        res_V_V_write
);

parameter    ap_ST_fsm_state1 = 16'd1;
parameter    ap_ST_fsm_state2 = 16'd2;
parameter    ap_ST_fsm_state3 = 16'd4;
parameter    ap_ST_fsm_state4 = 16'd8;
parameter    ap_ST_fsm_pp0_stage0 = 16'd16;
parameter    ap_ST_fsm_state7 = 16'd32;
parameter    ap_ST_fsm_state8 = 16'd64;
parameter    ap_ST_fsm_state9 = 16'd128;
parameter    ap_ST_fsm_state10 = 16'd256;
parameter    ap_ST_fsm_state11 = 16'd512;
parameter    ap_ST_fsm_state12 = 16'd1024;
parameter    ap_ST_fsm_state13 = 16'd2048;
parameter    ap_ST_fsm_state14 = 16'd4096;
parameter    ap_ST_fsm_state15 = 16'd8192;
parameter    ap_ST_fsm_state16 = 16'd16384;
parameter    ap_ST_fsm_state17 = 16'd32768;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [15:0] data_V_V_dout;
input   data_V_V_empty_n;
output   data_V_V_read;
output  [15:0] res_V_V_din;
input   res_V_V_full_n;
output   res_V_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg data_V_V_read;
reg res_V_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [15:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg   [7:0] layer_in_V_address0;
reg    layer_in_V_ce0;
reg    layer_in_V_we0;
wire  signed [15:0] layer_in_V_q0;
reg   [31:0] sX_6;
reg   [31:0] sY_6;
reg   [31:0] pY_6;
reg   [31:0] pX_6;
wire   [7:0] w13_V_address0;
reg    w13_V_ce0;
wire   [125:0] w13_V_q0;
reg    data_V_V_blk_n;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln315_fu_695_p2;
reg    res_V_V_blk_n;
wire    ap_CS_fsm_state16;
reg   [23:0] acc_V_15_0_reg_449;
reg   [23:0] acc_V_14_0_reg_461;
reg   [23:0] acc_V_13_0_reg_473;
reg   [23:0] acc_V_12_0_reg_485;
reg   [23:0] acc_V_11_0_reg_497;
reg   [23:0] acc_V_10_0_reg_509;
reg   [23:0] acc_V_9_0_reg_521;
reg   [23:0] acc_V_8_0_reg_533;
reg   [23:0] acc_V_7_0_reg_545;
reg   [23:0] acc_V_6_0_reg_557;
reg   [23:0] acc_V_5_0_reg_569;
reg   [23:0] acc_V_4_0_reg_581;
reg   [23:0] acc_V_3_0_reg_593;
reg   [23:0] acc_V_2_0_reg_605;
reg   [23:0] acc_V_1_0_reg_617;
reg   [23:0] acc_V_0_0_reg_629;
reg   [7:0] in_index_reg_641;
reg    ap_block_state1;
wire   [10:0] i_fu_689_p2;
reg   [10:0] i_reg_1510;
wire    ap_CS_fsm_state2;
wire   [4:0] i1_fu_701_p2;
reg    ap_block_state3;
reg   [31:0] sX_6_load_reg_1523;
wire    ap_CS_fsm_state4;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config13_s_fu_674_ap_ready;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config13_s_fu_674_ap_done;
wire   [0:0] icmp_ln326_fu_716_p2;
reg   [0:0] icmp_ln326_reg_1528;
reg   [31:0] sY_6_load_reg_1533;
wire   [0:0] icmp_ln326_19_fu_726_p2;
reg   [0:0] icmp_ln326_19_reg_1538;
reg   [31:0] pY_6_load_reg_1543;
reg   [31:0] pX_6_load_reg_1549;
wire   [0:0] and_ln326_14_fu_784_p2;
reg   [0:0] and_ln326_14_reg_1555;
wire   [0:0] icmp_ln324_fu_790_p2;
reg   [0:0] icmp_ln324_reg_1559;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state5_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [7:0] ir_fu_796_p2;
reg    ap_enable_reg_pp0_iter0;
wire  signed [23:0] grp_fu_1299_p3;
reg    ap_enable_reg_pp0_iter1;
wire  signed [23:0] grp_fu_1307_p3;
wire  signed [23:0] grp_fu_1315_p3;
wire  signed [23:0] grp_fu_1323_p3;
wire  signed [23:0] grp_fu_1331_p3;
wire  signed [23:0] grp_fu_1339_p3;
wire  signed [23:0] grp_fu_1347_p3;
wire  signed [23:0] grp_fu_1355_p3;
wire  signed [23:0] grp_fu_1363_p3;
wire  signed [23:0] grp_fu_1371_p3;
wire  signed [23:0] grp_fu_1379_p3;
wire  signed [23:0] grp_fu_1387_p3;
wire  signed [23:0] grp_fu_1395_p3;
wire  signed [23:0] grp_fu_1403_p3;
wire  signed [23:0] grp_fu_1411_p3;
wire  signed [23:0] grp_fu_1419_p3;
reg   [15:0] trunc_ln708_318_reg_1658;
wire    ap_CS_fsm_state7;
reg   [15:0] trunc_ln708_319_reg_1663;
reg   [15:0] trunc_ln708_320_reg_1668;
reg   [15:0] trunc_ln708_321_reg_1673;
reg   [15:0] trunc_ln708_322_reg_1678;
reg   [15:0] trunc_ln708_323_reg_1683;
reg   [15:0] trunc_ln708_324_reg_1688;
reg   [15:0] trunc_ln708_325_reg_1693;
reg   [15:0] trunc_ln708_326_reg_1698;
reg   [15:0] trunc_ln708_327_reg_1703;
reg   [15:0] trunc_ln708_328_reg_1708;
reg   [15:0] trunc_ln708_329_reg_1713;
reg   [15:0] trunc_ln708_330_reg_1718;
reg   [15:0] trunc_ln708_331_reg_1723;
wire   [4:0] i_ic_fu_1202_p2;
reg   [4:0] i_ic_reg_1731;
wire    ap_CS_fsm_state15;
wire   [0:0] icmp_ln338_fu_1196_p2;
wire   [0:0] icmp_ln346_fu_1213_p2;
reg   [0:0] icmp_ln346_reg_1741;
wire   [31:0] select_ln356_fu_1280_p3;
wire   [0:0] icmp_ln350_fu_1259_p2;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state5;
reg   [3:0] tmpdata_V_address0;
reg    tmpdata_V_ce0;
reg    tmpdata_V_we0;
wire   [15:0] tmpdata_V_q0;
reg   [3:0] layer_out_i_address0;
reg    layer_out_i_ce0;
reg    layer_out_i_we0;
reg   [15:0] layer_out_i_d0;
wire   [15:0] layer_out_i_q0;
reg   [3:0] layer_out_i_address1;
reg    layer_out_i_ce1;
reg    layer_out_i_we1;
reg   [15:0] layer_out_i_d1;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config13_s_fu_674_ap_start;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config13_s_fu_674_ap_idle;
wire   [3:0] grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config13_s_fu_674_data_V_address0;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config13_s_fu_674_data_V_ce0;
wire   [7:0] grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config13_s_fu_674_output_V_address0;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config13_s_fu_674_output_V_ce0;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config13_s_fu_674_output_V_we0;
wire   [15:0] grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config13_s_fu_674_output_V_d0;
reg   [10:0] i_0_i_reg_427;
wire    ap_CS_fsm_state17;
reg   [4:0] i1_0_i_reg_438;
wire   [0:0] icmp_ln313_fu_683_p2;
wire    ap_block_pp0_stage0;
reg   [4:0] i_ic_0_i_reg_652;
wire    ap_CS_fsm_state14;
reg   [31:0] storemerge_i_reg_663;
reg    grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config13_s_fu_674_ap_start_reg;
reg    ap_block_state3_ignore_call0;
wire   [63:0] zext_ln317_fu_707_p1;
wire   [63:0] zext_ln332_fu_802_p1;
wire   [63:0] zext_ln340_fu_1208_p1;
wire   [31:0] select_ln361_fu_1234_p3;
wire   [31:0] add_ln354_fu_1264_p2;
wire   [31:0] add_ln359_fu_1218_p2;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire   [30:0] tmp_15_fu_736_p4;
wire   [30:0] tmp_16_fu_756_p4;
wire   [0:0] icmp_ln326_20_fu_746_p2;
wire   [0:0] icmp_ln326_21_fu_766_p2;
wire   [0:0] and_ln326_13_fu_778_p2;
wire   [0:0] and_ln326_fu_772_p2;
wire  signed [15:0] sext_ln1116_fu_812_p0;
wire  signed [7:0] trunc_ln332_fu_808_p1;
wire  signed [7:0] tmp_471_fu_824_p4;
wire  signed [7:0] tmp_472_fu_838_p4;
wire  signed [7:0] tmp_473_fu_852_p4;
wire  signed [7:0] tmp_474_fu_866_p4;
wire  signed [7:0] tmp_475_fu_880_p4;
wire  signed [7:0] tmp_476_fu_894_p4;
wire  signed [7:0] tmp_477_fu_908_p4;
wire  signed [7:0] tmp_478_fu_922_p4;
wire  signed [7:0] tmp_479_fu_936_p4;
wire  signed [7:0] tmp_480_fu_950_p4;
wire  signed [7:0] tmp_481_fu_964_p4;
wire  signed [7:0] tmp_482_fu_978_p4;
wire  signed [7:0] tmp_483_fu_992_p4;
wire  signed [7:0] tmp_484_fu_1006_p4;
wire  signed [5:0] tmp_24_fu_1020_p4;
wire   [31:0] add_ln361_fu_1229_p2;
wire   [31:0] add_ln356_fu_1275_p2;
wire  signed [15:0] grp_fu_1299_p1;
wire  signed [23:0] sext_ln1116_fu_812_p1;
wire  signed [15:0] grp_fu_1307_p1;
wire  signed [15:0] grp_fu_1315_p1;
wire  signed [15:0] grp_fu_1323_p1;
wire  signed [15:0] grp_fu_1331_p1;
wire  signed [15:0] grp_fu_1339_p1;
wire  signed [15:0] grp_fu_1347_p1;
wire  signed [15:0] grp_fu_1355_p1;
wire  signed [15:0] grp_fu_1363_p1;
wire  signed [15:0] grp_fu_1371_p1;
wire  signed [15:0] grp_fu_1379_p1;
wire  signed [15:0] grp_fu_1387_p1;
wire  signed [15:0] grp_fu_1395_p1;
wire  signed [15:0] grp_fu_1403_p1;
wire  signed [15:0] grp_fu_1411_p1;
reg   [15:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_489;
reg    ap_condition_491;
reg    ap_condition_334;
reg    ap_condition_443;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 16'd1;
#0 sX_6 = 32'd0;
#0 sY_6 = 32'd0;
#0 pY_6 = 32'd0;
#0 pX_6 = 32'd0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config13_s_fu_674_ap_start_reg = 1'b0;
end

conv_2d_cl_ss_ap_fixed_ap_fixed_16_5_5_3_0_config13_s_laylbW #(
    .DataWidth( 16 ),
    .AddressRange( 144 ),
    .AddressWidth( 8 ))
layer_in_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer_in_V_address0),
    .ce0(layer_in_V_ce0),
    .we0(layer_in_V_we0),
    .d0(grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config13_s_fu_674_output_V_d0),
    .q0(layer_in_V_q0)
);

conv_2d_cl_ss_ap_fixed_ap_fixed_16_5_5_3_0_config13_s_w13_V #(
    .DataWidth( 126 ),
    .AddressRange( 144 ),
    .AddressWidth( 8 ))
w13_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w13_V_address0),
    .ce0(w13_V_ce0),
    .q0(w13_V_q0)
);

pooling2d_cl_ss_ap_fixed_ap_fixed_16_5_5_3_0_config6_s_meibs #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
tmpdata_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tmpdata_V_address0),
    .ce0(tmpdata_V_ce0),
    .we0(tmpdata_V_we0),
    .d0(data_V_V_dout),
    .q0(tmpdata_V_q0)
);

conv_2d_cl_ss_ap_fixed_ap_fixed_16_5_5_3_0_config3_s_layefYi #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
layer_out_i_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer_out_i_address0),
    .ce0(layer_out_i_ce0),
    .we0(layer_out_i_we0),
    .d0(layer_out_i_d0),
    .q0(layer_out_i_q0),
    .address1(layer_out_i_address1),
    .ce1(layer_out_i_ce1),
    .we1(layer_out_i_we1),
    .d1(layer_out_i_d1)
);

cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config13_s grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config13_s_fu_674(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config13_s_fu_674_ap_start),
    .ap_done(grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config13_s_fu_674_ap_done),
    .ap_idle(grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config13_s_fu_674_ap_idle),
    .ap_ready(grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config13_s_fu_674_ap_ready),
    .data_V_address0(grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config13_s_fu_674_data_V_address0),
    .data_V_ce0(grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config13_s_fu_674_data_V_ce0),
    .data_V_q0(tmpdata_V_q0),
    .output_V_address0(grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config13_s_fu_674_output_V_address0),
    .output_V_ce0(grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config13_s_fu_674_output_V_ce0),
    .output_V_we0(grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config13_s_fu_674_output_V_we0),
    .output_V_d0(grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config13_s_fu_674_output_V_d0),
    .output_V_q0(layer_in_V_q0)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U52(
    .din0(trunc_ln332_fu_808_p1),
    .din1(grp_fu_1299_p1),
    .din2(acc_V_0_0_reg_629),
    .dout(grp_fu_1299_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U53(
    .din0(tmp_471_fu_824_p4),
    .din1(grp_fu_1307_p1),
    .din2(acc_V_1_0_reg_617),
    .dout(grp_fu_1307_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U54(
    .din0(tmp_472_fu_838_p4),
    .din1(grp_fu_1315_p1),
    .din2(acc_V_2_0_reg_605),
    .dout(grp_fu_1315_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U55(
    .din0(tmp_473_fu_852_p4),
    .din1(grp_fu_1323_p1),
    .din2(acc_V_3_0_reg_593),
    .dout(grp_fu_1323_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U56(
    .din0(tmp_474_fu_866_p4),
    .din1(grp_fu_1331_p1),
    .din2(acc_V_4_0_reg_581),
    .dout(grp_fu_1331_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U57(
    .din0(tmp_475_fu_880_p4),
    .din1(grp_fu_1339_p1),
    .din2(acc_V_5_0_reg_569),
    .dout(grp_fu_1339_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U58(
    .din0(tmp_476_fu_894_p4),
    .din1(grp_fu_1347_p1),
    .din2(acc_V_6_0_reg_557),
    .dout(grp_fu_1347_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U59(
    .din0(tmp_477_fu_908_p4),
    .din1(grp_fu_1355_p1),
    .din2(acc_V_7_0_reg_545),
    .dout(grp_fu_1355_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U60(
    .din0(tmp_478_fu_922_p4),
    .din1(grp_fu_1363_p1),
    .din2(acc_V_8_0_reg_533),
    .dout(grp_fu_1363_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U61(
    .din0(tmp_479_fu_936_p4),
    .din1(grp_fu_1371_p1),
    .din2(acc_V_9_0_reg_521),
    .dout(grp_fu_1371_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U62(
    .din0(tmp_480_fu_950_p4),
    .din1(grp_fu_1379_p1),
    .din2(acc_V_10_0_reg_509),
    .dout(grp_fu_1379_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U63(
    .din0(tmp_481_fu_964_p4),
    .din1(grp_fu_1387_p1),
    .din2(acc_V_11_0_reg_497),
    .dout(grp_fu_1387_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U64(
    .din0(tmp_482_fu_978_p4),
    .din1(grp_fu_1395_p1),
    .din2(acc_V_12_0_reg_485),
    .dout(grp_fu_1395_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U65(
    .din0(tmp_483_fu_992_p4),
    .din1(grp_fu_1403_p1),
    .din2(acc_V_13_0_reg_473),
    .dout(grp_fu_1403_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U66(
    .din0(tmp_484_fu_1006_p4),
    .din1(grp_fu_1411_p1),
    .din2(acc_V_14_0_reg_461),
    .dout(grp_fu_1411_p3)
);

myproject_mac_muladd_6s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_6s_16s_24ns_24_1_1_U67(
    .din0(tmp_24_fu_1020_p4),
    .din1(layer_in_V_q0),
    .din2(acc_V_15_0_reg_449),
    .dout(grp_fu_1419_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((icmp_ln313_fu_683_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state5) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'd1 == and_ln326_14_fu_784_p2) & (1'b1 == ap_CS_fsm_state4) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config13_s_fu_674_ap_done == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state5))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state5);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'd1 == and_ln326_14_fu_784_p2) & (1'b1 == ap_CS_fsm_state4) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config13_s_fu_674_ap_done == 1'b1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config13_s_fu_674_ap_start_reg <= 1'b0;
    end else begin
        if ((~((icmp_ln315_fu_695_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln315_fu_695_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
            grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config13_s_fu_674_ap_start_reg <= 1'b1;
        end else if ((grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config13_s_fu_674_ap_ready == 1'b1)) begin
            grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config13_s_fu_674_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_1559 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_0_0_reg_629 <= grp_fu_1299_p3;
    end else if (((1'd1 == and_ln326_14_fu_784_p2) & (1'b1 == ap_CS_fsm_state4) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config13_s_fu_674_ap_done == 1'b1))) begin
        acc_V_0_0_reg_629 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_1559 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_10_0_reg_509 <= grp_fu_1379_p3;
    end else if (((1'd1 == and_ln326_14_fu_784_p2) & (1'b1 == ap_CS_fsm_state4) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config13_s_fu_674_ap_done == 1'b1))) begin
        acc_V_10_0_reg_509 <= 24'd4096;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_1559 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_11_0_reg_497 <= grp_fu_1387_p3;
    end else if (((1'd1 == and_ln326_14_fu_784_p2) & (1'b1 == ap_CS_fsm_state4) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config13_s_fu_674_ap_done == 1'b1))) begin
        acc_V_11_0_reg_497 <= 24'd16775168;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_1559 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_12_0_reg_485 <= grp_fu_1395_p3;
    end else if (((1'd1 == and_ln326_14_fu_784_p2) & (1'b1 == ap_CS_fsm_state4) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config13_s_fu_674_ap_done == 1'b1))) begin
        acc_V_12_0_reg_485 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_1559 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_13_0_reg_473 <= grp_fu_1403_p3;
    end else if (((1'd1 == and_ln326_14_fu_784_p2) & (1'b1 == ap_CS_fsm_state4) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config13_s_fu_674_ap_done == 1'b1))) begin
        acc_V_13_0_reg_473 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_1559 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_14_0_reg_461 <= grp_fu_1411_p3;
    end else if (((1'd1 == and_ln326_14_fu_784_p2) & (1'b1 == ap_CS_fsm_state4) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config13_s_fu_674_ap_done == 1'b1))) begin
        acc_V_14_0_reg_461 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_1559 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_15_0_reg_449 <= grp_fu_1419_p3;
    end else if (((1'd1 == and_ln326_14_fu_784_p2) & (1'b1 == ap_CS_fsm_state4) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config13_s_fu_674_ap_done == 1'b1))) begin
        acc_V_15_0_reg_449 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_1559 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_1_0_reg_617 <= grp_fu_1307_p3;
    end else if (((1'd1 == and_ln326_14_fu_784_p2) & (1'b1 == ap_CS_fsm_state4) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config13_s_fu_674_ap_done == 1'b1))) begin
        acc_V_1_0_reg_617 <= 24'd2048;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_1559 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_2_0_reg_605 <= grp_fu_1315_p3;
    end else if (((1'd1 == and_ln326_14_fu_784_p2) & (1'b1 == ap_CS_fsm_state4) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config13_s_fu_674_ap_done == 1'b1))) begin
        acc_V_2_0_reg_605 <= 24'd16773120;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_1559 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_3_0_reg_593 <= grp_fu_1323_p3;
    end else if (((1'd1 == and_ln326_14_fu_784_p2) & (1'b1 == ap_CS_fsm_state4) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config13_s_fu_674_ap_done == 1'b1))) begin
        acc_V_3_0_reg_593 <= 24'd2048;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_1559 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_4_0_reg_581 <= grp_fu_1331_p3;
    end else if (((1'd1 == and_ln326_14_fu_784_p2) & (1'b1 == ap_CS_fsm_state4) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config13_s_fu_674_ap_done == 1'b1))) begin
        acc_V_4_0_reg_581 <= 24'd16775168;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_1559 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_5_0_reg_569 <= grp_fu_1339_p3;
    end else if (((1'd1 == and_ln326_14_fu_784_p2) & (1'b1 == ap_CS_fsm_state4) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config13_s_fu_674_ap_done == 1'b1))) begin
        acc_V_5_0_reg_569 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_1559 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_6_0_reg_557 <= grp_fu_1347_p3;
    end else if (((1'd1 == and_ln326_14_fu_784_p2) & (1'b1 == ap_CS_fsm_state4) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config13_s_fu_674_ap_done == 1'b1))) begin
        acc_V_6_0_reg_557 <= 24'd16775168;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_1559 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_7_0_reg_545 <= grp_fu_1355_p3;
    end else if (((1'd1 == and_ln326_14_fu_784_p2) & (1'b1 == ap_CS_fsm_state4) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config13_s_fu_674_ap_done == 1'b1))) begin
        acc_V_7_0_reg_545 <= 24'd2048;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_1559 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_8_0_reg_533 <= grp_fu_1363_p3;
    end else if (((1'd1 == and_ln326_14_fu_784_p2) & (1'b1 == ap_CS_fsm_state4) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config13_s_fu_674_ap_done == 1'b1))) begin
        acc_V_8_0_reg_533 <= 24'd2048;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_1559 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_9_0_reg_521 <= grp_fu_1371_p3;
    end else if (((1'd1 == and_ln326_14_fu_784_p2) & (1'b1 == ap_CS_fsm_state4) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config13_s_fu_674_ap_done == 1'b1))) begin
        acc_V_9_0_reg_521 <= 24'd16775168;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln315_fu_695_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln315_fu_695_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        i1_0_i_reg_438 <= i1_fu_701_p2;
    end else if (((icmp_ln313_fu_683_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i1_0_i_reg_438 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        i_0_i_reg_427 <= i_reg_1510;
    end else if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_i_reg_427 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((res_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
        i_ic_0_i_reg_652 <= i_ic_reg_1731;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        i_ic_0_i_reg_652 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_fu_790_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_index_reg_641 <= ir_fu_796_p2;
    end else if (((1'd1 == and_ln326_14_fu_784_p2) & (1'b1 == ap_CS_fsm_state4) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config13_s_fu_674_ap_done == 1'b1))) begin
        in_index_reg_641 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        if ((1'b1 == ap_condition_491)) begin
            pX_6 <= 32'd0;
        end else if ((1'b1 == ap_condition_489)) begin
            pX_6 <= add_ln359_fu_1218_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        if ((1'b1 == ap_condition_443)) begin
            pY_6 <= 32'd0;
        end else if ((1'b1 == ap_condition_334)) begin
            pY_6 <= add_ln354_fu_1264_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        if ((1'b1 == ap_condition_491)) begin
            sX_6 <= 32'd0;
        end else if ((1'b1 == ap_condition_489)) begin
            sX_6 <= select_ln361_fu_1234_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        if ((1'b1 == ap_condition_443)) begin
            storemerge_i_reg_663 <= 32'd0;
        end else if ((1'b1 == ap_condition_334)) begin
            storemerge_i_reg_663 <= select_ln356_fu_1280_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config13_s_fu_674_ap_done == 1'b1))) begin
        and_ln326_14_reg_1555 <= and_ln326_14_fu_784_p2;
        icmp_ln326_19_reg_1538 <= icmp_ln326_19_fu_726_p2;
        icmp_ln326_reg_1528 <= icmp_ln326_fu_716_p2;
        pX_6_load_reg_1549 <= pX_6;
        pY_6_load_reg_1543 <= pY_6;
        sX_6_load_reg_1523 <= sX_6;
        sY_6_load_reg_1533 <= sY_6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln326_14_reg_1555) & (1'b1 == ap_CS_fsm_state15))) begin
        i_ic_reg_1731 <= i_ic_fu_1202_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_1510 <= i_fu_689_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln324_reg_1559 <= icmp_ln324_fu_790_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & ((1'd0 == and_ln326_14_reg_1555) | (icmp_ln338_fu_1196_p2 == 1'd1)))) begin
        icmp_ln346_reg_1741 <= icmp_ln346_fu_1213_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln346_reg_1741 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
        sY_6 <= storemerge_i_reg_663;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        trunc_ln708_318_reg_1658 <= {{acc_V_2_0_reg_605[22:7]}};
        trunc_ln708_319_reg_1663 <= {{acc_V_3_0_reg_593[22:7]}};
        trunc_ln708_320_reg_1668 <= {{acc_V_4_0_reg_581[22:7]}};
        trunc_ln708_321_reg_1673 <= {{acc_V_5_0_reg_569[22:7]}};
        trunc_ln708_322_reg_1678 <= {{acc_V_6_0_reg_557[22:7]}};
        trunc_ln708_323_reg_1683 <= {{acc_V_7_0_reg_545[22:7]}};
        trunc_ln708_324_reg_1688 <= {{acc_V_8_0_reg_533[22:7]}};
        trunc_ln708_325_reg_1693 <= {{acc_V_9_0_reg_521[22:7]}};
        trunc_ln708_326_reg_1698 <= {{acc_V_10_0_reg_509[22:7]}};
        trunc_ln708_327_reg_1703 <= {{acc_V_11_0_reg_497[22:7]}};
        trunc_ln708_328_reg_1708 <= {{acc_V_12_0_reg_485[22:7]}};
        trunc_ln708_329_reg_1713 <= {{acc_V_13_0_reg_473[22:7]}};
        trunc_ln708_330_reg_1718 <= {{acc_V_14_0_reg_461[22:7]}};
        trunc_ln708_331_reg_1723 <= {{acc_V_15_0_reg_449[22:7]}};
    end
end

always @ (*) begin
    if ((icmp_ln324_fu_790_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state5 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state5 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln313_fu_683_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln315_fu_695_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        data_V_V_blk_n = data_V_V_empty_n;
    end else begin
        data_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((icmp_ln315_fu_695_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln315_fu_695_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        data_V_V_read = 1'b1;
    end else begin
        data_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln313_fu_683_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer_in_V_address0 = zext_ln332_fu_802_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        layer_in_V_address0 = grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config13_s_fu_674_output_V_address0;
    end else begin
        layer_in_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer_in_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        layer_in_V_ce0 = grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config13_s_fu_674_output_V_ce0;
    end else begin
        layer_in_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        layer_in_V_we0 = grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config13_s_fu_674_output_V_we0;
    end else begin
        layer_in_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        layer_out_i_address0 = zext_ln340_fu_1208_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        layer_out_i_address0 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        layer_out_i_address0 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        layer_out_i_address0 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        layer_out_i_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        layer_out_i_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        layer_out_i_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        layer_out_i_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        layer_out_i_address0 = 64'd0;
    end else begin
        layer_out_i_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        layer_out_i_address1 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        layer_out_i_address1 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        layer_out_i_address1 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        layer_out_i_address1 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        layer_out_i_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        layer_out_i_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        layer_out_i_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        layer_out_i_address1 = 64'd1;
    end else begin
        layer_out_i_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state7))) begin
        layer_out_i_ce0 = 1'b1;
    end else begin
        layer_out_i_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state7))) begin
        layer_out_i_ce1 = 1'b1;
    end else begin
        layer_out_i_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        layer_out_i_d0 = trunc_ln708_330_reg_1718;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        layer_out_i_d0 = trunc_ln708_328_reg_1708;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        layer_out_i_d0 = trunc_ln708_326_reg_1698;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        layer_out_i_d0 = trunc_ln708_324_reg_1688;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        layer_out_i_d0 = trunc_ln708_322_reg_1678;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        layer_out_i_d0 = trunc_ln708_320_reg_1668;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        layer_out_i_d0 = trunc_ln708_318_reg_1658;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        layer_out_i_d0 = {{acc_V_0_0_reg_629[22:7]}};
    end else begin
        layer_out_i_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        layer_out_i_d1 = trunc_ln708_331_reg_1723;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        layer_out_i_d1 = trunc_ln708_329_reg_1713;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        layer_out_i_d1 = trunc_ln708_327_reg_1703;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        layer_out_i_d1 = trunc_ln708_325_reg_1693;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        layer_out_i_d1 = trunc_ln708_323_reg_1683;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        layer_out_i_d1 = trunc_ln708_321_reg_1673;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        layer_out_i_d1 = trunc_ln708_319_reg_1663;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        layer_out_i_d1 = {{acc_V_1_0_reg_617[22:7]}};
    end else begin
        layer_out_i_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state7))) begin
        layer_out_i_we0 = 1'b1;
    end else begin
        layer_out_i_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state7))) begin
        layer_out_i_we1 = 1'b1;
    end else begin
        layer_out_i_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        res_V_V_blk_n = res_V_V_full_n;
    end else begin
        res_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((res_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
        res_V_V_write = 1'b1;
    end else begin
        res_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln315_fu_695_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        tmpdata_V_address0 = zext_ln317_fu_707_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmpdata_V_address0 = grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config13_s_fu_674_data_V_address0;
    end else begin
        tmpdata_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((~((icmp_ln315_fu_695_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln315_fu_695_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        tmpdata_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmpdata_V_ce0 = grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config13_s_fu_674_data_V_ce0;
    end else begin
        tmpdata_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln315_fu_695_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln315_fu_695_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        tmpdata_V_we0 = 1'b1;
    end else begin
        tmpdata_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w13_V_ce0 = 1'b1;
    end else begin
        w13_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln313_fu_683_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if ((~((icmp_ln315_fu_695_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln315_fu_695_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if ((~((icmp_ln315_fu_695_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln315_fu_695_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'd1 == and_ln326_14_fu_784_p2) & (1'b1 == ap_CS_fsm_state4) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config13_s_fu_674_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'd0 == and_ln326_14_fu_784_p2) & (1'b1 == ap_CS_fsm_state4) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config13_s_fu_674_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln324_fu_790_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln324_fu_790_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & ((1'd0 == and_ln326_14_reg_1555) | (icmp_ln338_fu_1196_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((res_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln354_fu_1264_p2 = (pY_6_load_reg_1543 + 32'd1);

assign add_ln356_fu_1275_p2 = (sY_6_load_reg_1533 + 32'd1);

assign add_ln359_fu_1218_p2 = (pX_6_load_reg_1549 + 32'd1);

assign add_ln361_fu_1229_p2 = (sX_6_load_reg_1523 + 32'd1);

assign and_ln326_13_fu_778_p2 = (icmp_ln326_21_fu_766_p2 & icmp_ln326_20_fu_746_p2);

assign and_ln326_14_fu_784_p2 = (and_ln326_fu_772_p2 & and_ln326_13_fu_778_p2);

assign and_ln326_fu_772_p2 = (icmp_ln326_fu_716_p2 & icmp_ln326_19_fu_726_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (real_start == 1'b0));
end

always @ (*) begin
    ap_block_state3 = ((icmp_ln315_fu_695_p2 == 1'd0) & (data_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state3_ignore_call0 = ((icmp_ln315_fu_695_p2 == 1'd0) & (data_V_V_empty_n == 1'b0));
end

assign ap_block_state5_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_334 = (((icmp_ln350_fu_1259_p2 == 1'd0) & (1'd0 == and_ln326_14_reg_1555) & (icmp_ln346_fu_1213_p2 == 1'd1)) | ((icmp_ln350_fu_1259_p2 == 1'd0) & (icmp_ln346_fu_1213_p2 == 1'd1) & (icmp_ln338_fu_1196_p2 == 1'd1)));
end

always @ (*) begin
    ap_condition_443 = (((1'd0 == and_ln326_14_reg_1555) & (icmp_ln350_fu_1259_p2 == 1'd1) & (icmp_ln346_fu_1213_p2 == 1'd1)) | ((icmp_ln350_fu_1259_p2 == 1'd1) & (icmp_ln346_fu_1213_p2 == 1'd1) & (icmp_ln338_fu_1196_p2 == 1'd1)));
end

always @ (*) begin
    ap_condition_489 = (((icmp_ln346_fu_1213_p2 == 1'd0) & (1'd0 == and_ln326_14_reg_1555)) | ((icmp_ln346_fu_1213_p2 == 1'd0) & (icmp_ln338_fu_1196_p2 == 1'd1)));
end

always @ (*) begin
    ap_condition_491 = (((1'd0 == and_ln326_14_reg_1555) & (icmp_ln346_fu_1213_p2 == 1'd1)) | ((icmp_ln346_fu_1213_p2 == 1'd1) & (icmp_ln338_fu_1196_p2 == 1'd1)));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config13_s_fu_674_ap_start = grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config13_s_fu_674_ap_start_reg;

assign grp_fu_1299_p1 = sext_ln1116_fu_812_p1;

assign grp_fu_1307_p1 = sext_ln1116_fu_812_p1;

assign grp_fu_1315_p1 = sext_ln1116_fu_812_p1;

assign grp_fu_1323_p1 = sext_ln1116_fu_812_p1;

assign grp_fu_1331_p1 = sext_ln1116_fu_812_p1;

assign grp_fu_1339_p1 = sext_ln1116_fu_812_p1;

assign grp_fu_1347_p1 = sext_ln1116_fu_812_p1;

assign grp_fu_1355_p1 = sext_ln1116_fu_812_p1;

assign grp_fu_1363_p1 = sext_ln1116_fu_812_p1;

assign grp_fu_1371_p1 = sext_ln1116_fu_812_p1;

assign grp_fu_1379_p1 = sext_ln1116_fu_812_p1;

assign grp_fu_1387_p1 = sext_ln1116_fu_812_p1;

assign grp_fu_1395_p1 = sext_ln1116_fu_812_p1;

assign grp_fu_1403_p1 = sext_ln1116_fu_812_p1;

assign grp_fu_1411_p1 = sext_ln1116_fu_812_p1;

assign i1_fu_701_p2 = (i1_0_i_reg_438 + 5'd1);

assign i_fu_689_p2 = (i_0_i_reg_427 + 11'd1);

assign i_ic_fu_1202_p2 = (i_ic_0_i_reg_652 + 5'd1);

assign icmp_ln313_fu_683_p2 = ((i_0_i_reg_427 == 11'd1089) ? 1'b1 : 1'b0);

assign icmp_ln315_fu_695_p2 = ((i1_0_i_reg_438 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln324_fu_790_p2 = ((in_index_reg_641 == 8'd144) ? 1'b1 : 1'b0);

assign icmp_ln326_19_fu_726_p2 = ((sY_6 == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln326_20_fu_746_p2 = (($signed(tmp_15_fu_736_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln326_21_fu_766_p2 = (($signed(tmp_16_fu_756_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln326_fu_716_p2 = ((sX_6 == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln338_fu_1196_p2 = ((i_ic_0_i_reg_652 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln346_fu_1213_p2 = ((pX_6_load_reg_1549 == 32'd32) ? 1'b1 : 1'b0);

assign icmp_ln350_fu_1259_p2 = ((pY_6_load_reg_1543 == 32'd32) ? 1'b1 : 1'b0);

assign ir_fu_796_p2 = (in_index_reg_641 + 8'd1);

assign res_V_V_din = layer_out_i_q0;

assign select_ln356_fu_1280_p3 = ((icmp_ln326_19_reg_1538[0:0] === 1'b1) ? 32'd1 : add_ln356_fu_1275_p2);

assign select_ln361_fu_1234_p3 = ((icmp_ln326_reg_1528[0:0] === 1'b1) ? 32'd1 : add_ln361_fu_1229_p2);

assign sext_ln1116_fu_812_p0 = layer_in_V_q0;

assign sext_ln1116_fu_812_p1 = sext_ln1116_fu_812_p0;

assign start_out = real_start;

assign tmp_15_fu_736_p4 = {{pY_6[31:1]}};

assign tmp_16_fu_756_p4 = {{pX_6[31:1]}};

assign tmp_24_fu_1020_p4 = {{w13_V_q0[125:120]}};

assign tmp_471_fu_824_p4 = {{w13_V_q0[15:8]}};

assign tmp_472_fu_838_p4 = {{w13_V_q0[23:16]}};

assign tmp_473_fu_852_p4 = {{w13_V_q0[31:24]}};

assign tmp_474_fu_866_p4 = {{w13_V_q0[39:32]}};

assign tmp_475_fu_880_p4 = {{w13_V_q0[47:40]}};

assign tmp_476_fu_894_p4 = {{w13_V_q0[55:48]}};

assign tmp_477_fu_908_p4 = {{w13_V_q0[63:56]}};

assign tmp_478_fu_922_p4 = {{w13_V_q0[71:64]}};

assign tmp_479_fu_936_p4 = {{w13_V_q0[79:72]}};

assign tmp_480_fu_950_p4 = {{w13_V_q0[87:80]}};

assign tmp_481_fu_964_p4 = {{w13_V_q0[95:88]}};

assign tmp_482_fu_978_p4 = {{w13_V_q0[103:96]}};

assign tmp_483_fu_992_p4 = {{w13_V_q0[111:104]}};

assign tmp_484_fu_1006_p4 = {{w13_V_q0[119:112]}};

assign trunc_ln332_fu_808_p1 = w13_V_q0[7:0];

assign w13_V_address0 = zext_ln332_fu_802_p1;

assign zext_ln317_fu_707_p1 = i1_0_i_reg_438;

assign zext_ln332_fu_802_p1 = in_index_reg_641;

assign zext_ln340_fu_1208_p1 = i_ic_0_i_reg_652;

endmodule //conv_2d_cl_ss_ap_fixed_ap_fixed_16_5_5_3_0_config13_s
