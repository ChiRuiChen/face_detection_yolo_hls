// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conv_2d_cl_ss_ap_fixed_ap_fixed_16_5_5_3_0_config3_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        data_V_V_dout,
        data_V_V_empty_n,
        data_V_V_read,
        res_V_V_din,
        res_V_V_full_n,
        res_V_V_write
);

parameter    ap_ST_fsm_state1 = 16'd1;
parameter    ap_ST_fsm_state2 = 16'd2;
parameter    ap_ST_fsm_state3 = 16'd4;
parameter    ap_ST_fsm_state4 = 16'd8;
parameter    ap_ST_fsm_pp0_stage0 = 16'd16;
parameter    ap_ST_fsm_state7 = 16'd32;
parameter    ap_ST_fsm_state8 = 16'd64;
parameter    ap_ST_fsm_state9 = 16'd128;
parameter    ap_ST_fsm_state10 = 16'd256;
parameter    ap_ST_fsm_state11 = 16'd512;
parameter    ap_ST_fsm_state12 = 16'd1024;
parameter    ap_ST_fsm_state13 = 16'd2048;
parameter    ap_ST_fsm_state14 = 16'd4096;
parameter    ap_ST_fsm_state15 = 16'd8192;
parameter    ap_ST_fsm_state16 = 16'd16384;
parameter    ap_ST_fsm_state17 = 16'd32768;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [15:0] data_V_V_dout;
input   data_V_V_empty_n;
output   data_V_V_read;
output  [15:0] res_V_V_din;
input   res_V_V_full_n;
output   res_V_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg data_V_V_read;
reg res_V_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [15:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg   [6:0] layer_in_V_7_address0;
reg    layer_in_V_7_ce0;
reg    layer_in_V_7_we0;
wire   [15:0] layer_in_V_7_q0;
reg   [31:0] sX_3;
reg   [31:0] sY_3;
reg   [31:0] pY_3;
reg   [31:0] pX_3;
wire   [6:0] w3_V_address0;
reg    w3_V_ce0;
wire   [127:0] w3_V_q0;
reg    data_V_V_blk_n;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln315_fu_725_p2;
reg    res_V_V_blk_n;
wire    ap_CS_fsm_state16;
reg   [23:0] acc_V_15_0_reg_479;
reg   [23:0] acc_V_14_0_reg_491;
reg   [23:0] acc_V_13_0_reg_503;
reg   [23:0] acc_V_12_0_reg_515;
reg   [23:0] acc_V_11_0_reg_527;
reg   [23:0] acc_V_10_0_reg_539;
reg   [23:0] acc_V_9_0_reg_551;
reg   [23:0] acc_V_8_0_reg_563;
reg   [23:0] acc_V_7_0_reg_575;
reg   [23:0] acc_V_6_0_reg_587;
reg   [23:0] acc_V_5_0_reg_599;
reg   [23:0] acc_V_4_0_reg_611;
reg   [23:0] acc_V_3_0_reg_623;
reg   [23:0] acc_V_2_0_reg_635;
reg   [23:0] acc_V_1_0_reg_647;
reg   [23:0] acc_V_0_0_reg_659;
reg   [6:0] in_index_reg_671;
reg    ap_block_state1;
wire   [14:0] i_fu_719_p2;
reg   [14:0] i_reg_1536;
wire    ap_CS_fsm_state2;
wire   [1:0] i1_fu_731_p2;
reg    ap_block_state3;
reg   [31:0] sX_3_load_reg_1549;
wire    ap_CS_fsm_state4;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config3_s_fu_704_ap_ready;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config3_s_fu_704_ap_done;
wire   [0:0] icmp_ln326_fu_746_p2;
reg   [0:0] icmp_ln326_reg_1554;
reg   [31:0] sY_3_load_reg_1559;
wire   [0:0] icmp_ln326_10_fu_756_p2;
reg   [0:0] icmp_ln326_10_reg_1564;
reg   [31:0] pY_3_load_reg_1569;
reg   [31:0] pX_3_load_reg_1575;
wire   [0:0] and_ln326_8_fu_814_p2;
reg   [0:0] and_ln326_8_reg_1581;
wire   [0:0] icmp_ln324_fu_820_p2;
reg   [0:0] icmp_ln324_reg_1585;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state5_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [6:0] ir_fu_826_p2;
reg    ap_enable_reg_pp0_iter0;
wire  signed [23:0] grp_fu_1325_p3;
reg    ap_enable_reg_pp0_iter1;
wire  signed [23:0] grp_fu_1333_p3;
wire  signed [23:0] grp_fu_1341_p3;
wire  signed [23:0] grp_fu_1349_p3;
wire  signed [23:0] grp_fu_1357_p3;
wire  signed [23:0] grp_fu_1365_p3;
wire  signed [23:0] grp_fu_1373_p3;
wire  signed [23:0] grp_fu_1381_p3;
wire  signed [23:0] grp_fu_1389_p3;
wire  signed [23:0] grp_fu_1397_p3;
wire  signed [23:0] grp_fu_1405_p3;
wire  signed [23:0] grp_fu_1413_p3;
wire  signed [23:0] grp_fu_1421_p3;
wire  signed [23:0] grp_fu_1429_p3;
wire  signed [23:0] grp_fu_1437_p3;
wire  signed [23:0] grp_fu_1445_p3;
reg   [15:0] trunc_ln708_260_reg_1684;
wire    ap_CS_fsm_state7;
reg   [15:0] trunc_ln708_261_reg_1689;
reg   [15:0] trunc_ln708_262_reg_1694;
reg   [15:0] trunc_ln708_263_reg_1699;
reg   [15:0] trunc_ln708_264_reg_1704;
reg   [15:0] trunc_ln708_265_reg_1709;
reg   [15:0] trunc_ln708_266_reg_1714;
reg   [15:0] trunc_ln708_267_reg_1719;
reg   [15:0] trunc_ln708_268_reg_1724;
reg   [15:0] trunc_ln708_269_reg_1729;
reg   [15:0] trunc_ln708_270_reg_1734;
reg   [15:0] trunc_ln708_271_reg_1739;
reg   [15:0] trunc_ln708_272_reg_1744;
reg   [15:0] trunc_ln708_273_reg_1749;
wire   [4:0] i_ic_fu_1228_p2;
reg   [4:0] i_ic_reg_1757;
wire    ap_CS_fsm_state15;
wire   [0:0] icmp_ln338_fu_1222_p2;
wire   [0:0] icmp_ln346_fu_1239_p2;
reg   [0:0] icmp_ln346_reg_1767;
wire   [31:0] select_ln356_fu_1306_p3;
wire   [0:0] icmp_ln350_fu_1285_p2;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state5;
reg   [1:0] tmpdata_V_address0;
reg    tmpdata_V_ce0;
reg    tmpdata_V_we0;
wire   [15:0] tmpdata_V_q0;
reg   [3:0] layer_out_i_address0;
reg    layer_out_i_ce0;
reg    layer_out_i_we0;
reg   [15:0] layer_out_i_d0;
wire   [15:0] layer_out_i_q0;
reg   [3:0] layer_out_i_address1;
reg    layer_out_i_ce1;
reg    layer_out_i_we1;
reg   [15:0] layer_out_i_d1;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config3_s_fu_704_ap_start;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config3_s_fu_704_ap_idle;
wire   [1:0] grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config3_s_fu_704_data_V_address0;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config3_s_fu_704_data_V_ce0;
wire   [6:0] grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config3_s_fu_704_output_V_address0;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config3_s_fu_704_output_V_ce0;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config3_s_fu_704_output_V_we0;
wire   [15:0] grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config3_s_fu_704_output_V_d0;
reg   [14:0] i_0_i_reg_457;
wire    ap_CS_fsm_state17;
reg   [1:0] i1_0_i_reg_468;
wire   [0:0] icmp_ln313_fu_713_p2;
wire    ap_block_pp0_stage0;
reg   [4:0] i_ic_0_i_reg_682;
wire    ap_CS_fsm_state14;
reg   [31:0] storemerge_i_reg_693;
reg    grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config3_s_fu_704_ap_start_reg;
reg    ap_block_state3_ignore_call0;
wire   [63:0] zext_ln317_fu_737_p1;
wire   [63:0] zext_ln332_fu_832_p1;
wire   [63:0] zext_ln340_fu_1234_p1;
wire   [31:0] select_ln361_fu_1260_p3;
wire   [31:0] add_ln354_fu_1290_p2;
wire   [31:0] add_ln359_fu_1244_p2;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire   [29:0] tmp_9_fu_766_p4;
wire   [29:0] tmp_10_fu_786_p4;
wire   [0:0] icmp_ln326_11_fu_776_p2;
wire   [0:0] icmp_ln326_12_fu_796_p2;
wire   [0:0] and_ln326_7_fu_808_p2;
wire   [0:0] and_ln326_fu_802_p2;
wire  signed [7:0] trunc_ln332_fu_838_p1;
wire  signed [7:0] tmp_409_fu_850_p4;
wire  signed [7:0] tmp_410_fu_864_p4;
wire  signed [7:0] tmp_411_fu_878_p4;
wire  signed [7:0] tmp_412_fu_892_p4;
wire  signed [7:0] tmp_413_fu_906_p4;
wire  signed [7:0] tmp_414_fu_920_p4;
wire  signed [7:0] tmp_415_fu_934_p4;
wire  signed [7:0] tmp_416_fu_948_p4;
wire  signed [7:0] tmp_417_fu_962_p4;
wire  signed [7:0] tmp_418_fu_976_p4;
wire  signed [7:0] tmp_419_fu_990_p4;
wire  signed [7:0] tmp_420_fu_1004_p4;
wire  signed [7:0] tmp_421_fu_1018_p4;
wire  signed [7:0] tmp_422_fu_1032_p4;
wire  signed [7:0] tmp_423_fu_1046_p4;
wire   [31:0] add_ln361_fu_1255_p2;
wire   [31:0] add_ln356_fu_1301_p2;
wire  signed [15:0] grp_fu_1325_p1;
wire  signed [23:0] sext_ln1116_fu_842_p1;
wire  signed [15:0] grp_fu_1333_p1;
wire  signed [15:0] grp_fu_1341_p1;
wire  signed [15:0] grp_fu_1349_p1;
wire  signed [15:0] grp_fu_1357_p1;
wire  signed [15:0] grp_fu_1365_p1;
wire  signed [15:0] grp_fu_1373_p1;
wire  signed [15:0] grp_fu_1381_p1;
wire  signed [15:0] grp_fu_1389_p1;
wire  signed [15:0] grp_fu_1397_p1;
wire  signed [15:0] grp_fu_1405_p1;
wire  signed [15:0] grp_fu_1413_p1;
wire  signed [15:0] grp_fu_1421_p1;
wire  signed [15:0] grp_fu_1429_p1;
wire  signed [15:0] grp_fu_1437_p1;
wire  signed [15:0] grp_fu_1445_p1;
reg   [15:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_500;
reg    ap_condition_502;
reg    ap_condition_334;
reg    ap_condition_454;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 16'd1;
#0 sX_3 = 32'd0;
#0 sY_3 = 32'd0;
#0 pY_3 = 32'd0;
#0 pX_3 = 32'd0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config3_s_fu_704_ap_start_reg = 1'b0;
end

conv_2d_cl_ss_ap_fixed_ap_fixed_16_5_5_3_0_config3_s_layedEe #(
    .DataWidth( 16 ),
    .AddressRange( 75 ),
    .AddressWidth( 7 ))
layer_in_V_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer_in_V_7_address0),
    .ce0(layer_in_V_7_ce0),
    .we0(layer_in_V_7_we0),
    .d0(grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config3_s_fu_704_output_V_d0),
    .q0(layer_in_V_7_q0)
);

conv_2d_cl_ss_ap_fixed_ap_fixed_16_5_5_3_0_config3_s_w3_V #(
    .DataWidth( 128 ),
    .AddressRange( 75 ),
    .AddressWidth( 7 ))
w3_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w3_V_address0),
    .ce0(w3_V_ce0),
    .q0(w3_V_q0)
);

conv_2d_cl_ss_ap_fixed_ap_fixed_16_5_5_3_0_config3_s_tmpdeOg #(
    .DataWidth( 16 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
tmpdata_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tmpdata_V_address0),
    .ce0(tmpdata_V_ce0),
    .we0(tmpdata_V_we0),
    .d0(data_V_V_dout),
    .q0(tmpdata_V_q0)
);

conv_2d_cl_ss_ap_fixed_ap_fixed_16_5_5_3_0_config3_s_layefYi #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
layer_out_i_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer_out_i_address0),
    .ce0(layer_out_i_ce0),
    .we0(layer_out_i_we0),
    .d0(layer_out_i_d0),
    .q0(layer_out_i_q0),
    .address1(layer_out_i_address1),
    .ce1(layer_out_i_ce1),
    .we1(layer_out_i_we1),
    .d1(layer_out_i_d1)
);

cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config3_s grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config3_s_fu_704(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config3_s_fu_704_ap_start),
    .ap_done(grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config3_s_fu_704_ap_done),
    .ap_idle(grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config3_s_fu_704_ap_idle),
    .ap_ready(grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config3_s_fu_704_ap_ready),
    .data_V_address0(grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config3_s_fu_704_data_V_address0),
    .data_V_ce0(grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config3_s_fu_704_data_V_ce0),
    .data_V_q0(tmpdata_V_q0),
    .output_V_address0(grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config3_s_fu_704_output_V_address0),
    .output_V_ce0(grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config3_s_fu_704_output_V_ce0),
    .output_V_we0(grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config3_s_fu_704_output_V_we0),
    .output_V_d0(grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config3_s_fu_704_output_V_d0),
    .output_V_q0(layer_in_V_7_q0)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U8(
    .din0(trunc_ln332_fu_838_p1),
    .din1(grp_fu_1325_p1),
    .din2(acc_V_0_0_reg_659),
    .dout(grp_fu_1325_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U9(
    .din0(tmp_409_fu_850_p4),
    .din1(grp_fu_1333_p1),
    .din2(acc_V_1_0_reg_647),
    .dout(grp_fu_1333_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U10(
    .din0(tmp_410_fu_864_p4),
    .din1(grp_fu_1341_p1),
    .din2(acc_V_2_0_reg_635),
    .dout(grp_fu_1341_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U11(
    .din0(tmp_411_fu_878_p4),
    .din1(grp_fu_1349_p1),
    .din2(acc_V_3_0_reg_623),
    .dout(grp_fu_1349_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U12(
    .din0(tmp_412_fu_892_p4),
    .din1(grp_fu_1357_p1),
    .din2(acc_V_4_0_reg_611),
    .dout(grp_fu_1357_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U13(
    .din0(tmp_413_fu_906_p4),
    .din1(grp_fu_1365_p1),
    .din2(acc_V_5_0_reg_599),
    .dout(grp_fu_1365_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U14(
    .din0(tmp_414_fu_920_p4),
    .din1(grp_fu_1373_p1),
    .din2(acc_V_6_0_reg_587),
    .dout(grp_fu_1373_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U15(
    .din0(tmp_415_fu_934_p4),
    .din1(grp_fu_1381_p1),
    .din2(acc_V_7_0_reg_575),
    .dout(grp_fu_1381_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U16(
    .din0(tmp_416_fu_948_p4),
    .din1(grp_fu_1389_p1),
    .din2(acc_V_8_0_reg_563),
    .dout(grp_fu_1389_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U17(
    .din0(tmp_417_fu_962_p4),
    .din1(grp_fu_1397_p1),
    .din2(acc_V_9_0_reg_551),
    .dout(grp_fu_1397_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U18(
    .din0(tmp_418_fu_976_p4),
    .din1(grp_fu_1405_p1),
    .din2(acc_V_10_0_reg_539),
    .dout(grp_fu_1405_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U19(
    .din0(tmp_419_fu_990_p4),
    .din1(grp_fu_1413_p1),
    .din2(acc_V_11_0_reg_527),
    .dout(grp_fu_1413_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U20(
    .din0(tmp_420_fu_1004_p4),
    .din1(grp_fu_1421_p1),
    .din2(acc_V_12_0_reg_515),
    .dout(grp_fu_1421_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U21(
    .din0(tmp_421_fu_1018_p4),
    .din1(grp_fu_1429_p1),
    .din2(acc_V_13_0_reg_503),
    .dout(grp_fu_1429_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U22(
    .din0(tmp_422_fu_1032_p4),
    .din1(grp_fu_1437_p1),
    .din2(acc_V_14_0_reg_491),
    .dout(grp_fu_1437_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U23(
    .din0(tmp_423_fu_1046_p4),
    .din1(grp_fu_1445_p1),
    .din2(acc_V_15_0_reg_479),
    .dout(grp_fu_1445_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((icmp_ln313_fu_713_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state5) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'd1 == and_ln326_8_fu_814_p2) & (1'b1 == ap_CS_fsm_state4) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config3_s_fu_704_ap_done == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state5))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state5);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'd1 == and_ln326_8_fu_814_p2) & (1'b1 == ap_CS_fsm_state4) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config3_s_fu_704_ap_done == 1'b1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config3_s_fu_704_ap_start_reg <= 1'b0;
    end else begin
        if ((~((icmp_ln315_fu_725_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln315_fu_725_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
            grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config3_s_fu_704_ap_start_reg <= 1'b1;
        end else if ((grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config3_s_fu_704_ap_ready == 1'b1)) begin
            grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config3_s_fu_704_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_1585 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_0_0_reg_659 <= grp_fu_1325_p3;
    end else if (((1'd1 == and_ln326_8_fu_814_p2) & (1'b1 == ap_CS_fsm_state4) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config3_s_fu_704_ap_done == 1'b1))) begin
        acc_V_0_0_reg_659 <= 24'd88064;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_1585 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_10_0_reg_539 <= grp_fu_1405_p3;
    end else if (((1'd1 == and_ln326_8_fu_814_p2) & (1'b1 == ap_CS_fsm_state4) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config3_s_fu_704_ap_done == 1'b1))) begin
        acc_V_10_0_reg_539 <= 24'd57344;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_1585 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_11_0_reg_527 <= grp_fu_1413_p3;
    end else if (((1'd1 == and_ln326_8_fu_814_p2) & (1'b1 == ap_CS_fsm_state4) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config3_s_fu_704_ap_done == 1'b1))) begin
        acc_V_11_0_reg_527 <= 24'd16680960;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_1585 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_12_0_reg_515 <= grp_fu_1421_p3;
    end else if (((1'd1 == and_ln326_8_fu_814_p2) & (1'b1 == ap_CS_fsm_state4) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config3_s_fu_704_ap_done == 1'b1))) begin
        acc_V_12_0_reg_515 <= 24'd16611328;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_1585 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_13_0_reg_503 <= grp_fu_1429_p3;
    end else if (((1'd1 == and_ln326_8_fu_814_p2) & (1'b1 == ap_CS_fsm_state4) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config3_s_fu_704_ap_done == 1'b1))) begin
        acc_V_13_0_reg_503 <= 24'd16644096;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_1585 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_14_0_reg_491 <= grp_fu_1437_p3;
    end else if (((1'd1 == and_ln326_8_fu_814_p2) & (1'b1 == ap_CS_fsm_state4) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config3_s_fu_704_ap_done == 1'b1))) begin
        acc_V_14_0_reg_491 <= 24'd16738304;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_1585 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_15_0_reg_479 <= grp_fu_1445_p3;
    end else if (((1'd1 == and_ln326_8_fu_814_p2) & (1'b1 == ap_CS_fsm_state4) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config3_s_fu_704_ap_done == 1'b1))) begin
        acc_V_15_0_reg_479 <= 24'd16709632;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_1585 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_1_0_reg_647 <= grp_fu_1333_p3;
    end else if (((1'd1 == and_ln326_8_fu_814_p2) & (1'b1 == ap_CS_fsm_state4) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config3_s_fu_704_ap_done == 1'b1))) begin
        acc_V_1_0_reg_647 <= 24'd36864;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_1585 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_2_0_reg_635 <= grp_fu_1341_p3;
    end else if (((1'd1 == and_ln326_8_fu_814_p2) & (1'b1 == ap_CS_fsm_state4) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config3_s_fu_704_ap_done == 1'b1))) begin
        acc_V_2_0_reg_635 <= 24'd73728;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_1585 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_3_0_reg_623 <= grp_fu_1349_p3;
    end else if (((1'd1 == and_ln326_8_fu_814_p2) & (1'b1 == ap_CS_fsm_state4) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config3_s_fu_704_ap_done == 1'b1))) begin
        acc_V_3_0_reg_623 <= 24'd16574464;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_1585 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_4_0_reg_611 <= grp_fu_1357_p3;
    end else if (((1'd1 == and_ln326_8_fu_814_p2) & (1'b1 == ap_CS_fsm_state4) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config3_s_fu_704_ap_done == 1'b1))) begin
        acc_V_4_0_reg_611 <= 24'd16680960;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_1585 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_5_0_reg_599 <= grp_fu_1365_p3;
    end else if (((1'd1 == and_ln326_8_fu_814_p2) & (1'b1 == ap_CS_fsm_state4) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config3_s_fu_704_ap_done == 1'b1))) begin
        acc_V_5_0_reg_599 <= 24'd16711680;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_1585 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_6_0_reg_587 <= grp_fu_1373_p3;
    end else if (((1'd1 == and_ln326_8_fu_814_p2) & (1'b1 == ap_CS_fsm_state4) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config3_s_fu_704_ap_done == 1'b1))) begin
        acc_V_6_0_reg_587 <= 24'd16721920;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_1585 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_7_0_reg_575 <= grp_fu_1381_p3;
    end else if (((1'd1 == and_ln326_8_fu_814_p2) & (1'b1 == ap_CS_fsm_state4) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config3_s_fu_704_ap_done == 1'b1))) begin
        acc_V_7_0_reg_575 <= 24'd16736256;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_1585 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_8_0_reg_563 <= grp_fu_1389_p3;
    end else if (((1'd1 == and_ln326_8_fu_814_p2) & (1'b1 == ap_CS_fsm_state4) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config3_s_fu_704_ap_done == 1'b1))) begin
        acc_V_8_0_reg_563 <= 24'd47104;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_1585 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_9_0_reg_551 <= grp_fu_1397_p3;
    end else if (((1'd1 == and_ln326_8_fu_814_p2) & (1'b1 == ap_CS_fsm_state4) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config3_s_fu_704_ap_done == 1'b1))) begin
        acc_V_9_0_reg_551 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln315_fu_725_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln315_fu_725_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        i1_0_i_reg_468 <= i1_fu_731_p2;
    end else if (((icmp_ln313_fu_713_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i1_0_i_reg_468 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        i_0_i_reg_457 <= i_reg_1536;
    end else if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_i_reg_457 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((res_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
        i_ic_0_i_reg_682 <= i_ic_reg_1757;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        i_ic_0_i_reg_682 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_fu_820_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_index_reg_671 <= ir_fu_826_p2;
    end else if (((1'd1 == and_ln326_8_fu_814_p2) & (1'b1 == ap_CS_fsm_state4) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config3_s_fu_704_ap_done == 1'b1))) begin
        in_index_reg_671 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        if ((1'b1 == ap_condition_502)) begin
            pX_3 <= 32'd0;
        end else if ((1'b1 == ap_condition_500)) begin
            pX_3 <= add_ln359_fu_1244_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        if ((1'b1 == ap_condition_454)) begin
            pY_3 <= 32'd0;
        end else if ((1'b1 == ap_condition_334)) begin
            pY_3 <= add_ln354_fu_1290_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        if ((1'b1 == ap_condition_502)) begin
            sX_3 <= 32'd0;
        end else if ((1'b1 == ap_condition_500)) begin
            sX_3 <= select_ln361_fu_1260_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        if ((1'b1 == ap_condition_454)) begin
            storemerge_i_reg_693 <= 32'd0;
        end else if ((1'b1 == ap_condition_334)) begin
            storemerge_i_reg_693 <= select_ln356_fu_1306_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config3_s_fu_704_ap_done == 1'b1))) begin
        and_ln326_8_reg_1581 <= and_ln326_8_fu_814_p2;
        icmp_ln326_10_reg_1564 <= icmp_ln326_10_fu_756_p2;
        icmp_ln326_reg_1554 <= icmp_ln326_fu_746_p2;
        pX_3_load_reg_1575 <= pX_3;
        pY_3_load_reg_1569 <= pY_3;
        sX_3_load_reg_1549 <= sX_3;
        sY_3_load_reg_1559 <= sY_3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln326_8_reg_1581) & (1'b1 == ap_CS_fsm_state15))) begin
        i_ic_reg_1757 <= i_ic_fu_1228_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_1536 <= i_fu_719_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln324_reg_1585 <= icmp_ln324_fu_820_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & ((1'd0 == and_ln326_8_reg_1581) | (icmp_ln338_fu_1222_p2 == 1'd1)))) begin
        icmp_ln346_reg_1767 <= icmp_ln346_fu_1239_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln346_reg_1767 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
        sY_3 <= storemerge_i_reg_693;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        trunc_ln708_260_reg_1684 <= {{acc_V_2_0_reg_635[22:7]}};
        trunc_ln708_261_reg_1689 <= {{acc_V_3_0_reg_623[22:7]}};
        trunc_ln708_262_reg_1694 <= {{acc_V_4_0_reg_611[22:7]}};
        trunc_ln708_263_reg_1699 <= {{acc_V_5_0_reg_599[22:7]}};
        trunc_ln708_264_reg_1704 <= {{acc_V_6_0_reg_587[22:7]}};
        trunc_ln708_265_reg_1709 <= {{acc_V_7_0_reg_575[22:7]}};
        trunc_ln708_266_reg_1714 <= {{acc_V_8_0_reg_563[22:7]}};
        trunc_ln708_267_reg_1719 <= {{acc_V_9_0_reg_551[22:7]}};
        trunc_ln708_268_reg_1724 <= {{acc_V_10_0_reg_539[22:7]}};
        trunc_ln708_269_reg_1729 <= {{acc_V_11_0_reg_527[22:7]}};
        trunc_ln708_270_reg_1734 <= {{acc_V_12_0_reg_515[22:7]}};
        trunc_ln708_271_reg_1739 <= {{acc_V_13_0_reg_503[22:7]}};
        trunc_ln708_272_reg_1744 <= {{acc_V_14_0_reg_491[22:7]}};
        trunc_ln708_273_reg_1749 <= {{acc_V_15_0_reg_479[22:7]}};
    end
end

always @ (*) begin
    if ((icmp_ln324_fu_820_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state5 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state5 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln313_fu_713_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln315_fu_725_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        data_V_V_blk_n = data_V_V_empty_n;
    end else begin
        data_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((icmp_ln315_fu_725_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln315_fu_725_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        data_V_V_read = 1'b1;
    end else begin
        data_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln313_fu_713_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer_in_V_7_address0 = zext_ln332_fu_832_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        layer_in_V_7_address0 = grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config3_s_fu_704_output_V_address0;
    end else begin
        layer_in_V_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer_in_V_7_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        layer_in_V_7_ce0 = grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config3_s_fu_704_output_V_ce0;
    end else begin
        layer_in_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        layer_in_V_7_we0 = grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config3_s_fu_704_output_V_we0;
    end else begin
        layer_in_V_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        layer_out_i_address0 = zext_ln340_fu_1234_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        layer_out_i_address0 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        layer_out_i_address0 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        layer_out_i_address0 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        layer_out_i_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        layer_out_i_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        layer_out_i_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        layer_out_i_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        layer_out_i_address0 = 64'd0;
    end else begin
        layer_out_i_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        layer_out_i_address1 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        layer_out_i_address1 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        layer_out_i_address1 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        layer_out_i_address1 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        layer_out_i_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        layer_out_i_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        layer_out_i_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        layer_out_i_address1 = 64'd1;
    end else begin
        layer_out_i_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state7))) begin
        layer_out_i_ce0 = 1'b1;
    end else begin
        layer_out_i_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state7))) begin
        layer_out_i_ce1 = 1'b1;
    end else begin
        layer_out_i_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        layer_out_i_d0 = trunc_ln708_272_reg_1744;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        layer_out_i_d0 = trunc_ln708_270_reg_1734;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        layer_out_i_d0 = trunc_ln708_268_reg_1724;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        layer_out_i_d0 = trunc_ln708_266_reg_1714;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        layer_out_i_d0 = trunc_ln708_264_reg_1704;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        layer_out_i_d0 = trunc_ln708_262_reg_1694;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        layer_out_i_d0 = trunc_ln708_260_reg_1684;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        layer_out_i_d0 = {{acc_V_0_0_reg_659[22:7]}};
    end else begin
        layer_out_i_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        layer_out_i_d1 = trunc_ln708_273_reg_1749;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        layer_out_i_d1 = trunc_ln708_271_reg_1739;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        layer_out_i_d1 = trunc_ln708_269_reg_1729;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        layer_out_i_d1 = trunc_ln708_267_reg_1719;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        layer_out_i_d1 = trunc_ln708_265_reg_1709;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        layer_out_i_d1 = trunc_ln708_263_reg_1699;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        layer_out_i_d1 = trunc_ln708_261_reg_1689;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        layer_out_i_d1 = {{acc_V_1_0_reg_647[22:7]}};
    end else begin
        layer_out_i_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state7))) begin
        layer_out_i_we0 = 1'b1;
    end else begin
        layer_out_i_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state7))) begin
        layer_out_i_we1 = 1'b1;
    end else begin
        layer_out_i_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        res_V_V_blk_n = res_V_V_full_n;
    end else begin
        res_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((res_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
        res_V_V_write = 1'b1;
    end else begin
        res_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln315_fu_725_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        tmpdata_V_address0 = zext_ln317_fu_737_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmpdata_V_address0 = grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config3_s_fu_704_data_V_address0;
    end else begin
        tmpdata_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((~((icmp_ln315_fu_725_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln315_fu_725_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        tmpdata_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmpdata_V_ce0 = grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config3_s_fu_704_data_V_ce0;
    end else begin
        tmpdata_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln315_fu_725_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln315_fu_725_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        tmpdata_V_we0 = 1'b1;
    end else begin
        tmpdata_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w3_V_ce0 = 1'b1;
    end else begin
        w3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln313_fu_713_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if ((~((icmp_ln315_fu_725_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln315_fu_725_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if ((~((icmp_ln315_fu_725_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln315_fu_725_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'd1 == and_ln326_8_fu_814_p2) & (1'b1 == ap_CS_fsm_state4) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config3_s_fu_704_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'd0 == and_ln326_8_fu_814_p2) & (1'b1 == ap_CS_fsm_state4) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config3_s_fu_704_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln324_fu_820_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln324_fu_820_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & ((1'd0 == and_ln326_8_reg_1581) | (icmp_ln338_fu_1222_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((res_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln354_fu_1290_p2 = (pY_3_load_reg_1569 + 32'd1);

assign add_ln356_fu_1301_p2 = (sY_3_load_reg_1559 + 32'd1);

assign add_ln359_fu_1244_p2 = (pX_3_load_reg_1575 + 32'd1);

assign add_ln361_fu_1255_p2 = (sX_3_load_reg_1549 + 32'd1);

assign and_ln326_7_fu_808_p2 = (icmp_ln326_12_fu_796_p2 & icmp_ln326_11_fu_776_p2);

assign and_ln326_8_fu_814_p2 = (and_ln326_fu_802_p2 & and_ln326_7_fu_808_p2);

assign and_ln326_fu_802_p2 = (icmp_ln326_fu_746_p2 & icmp_ln326_10_fu_756_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (real_start == 1'b0));
end

always @ (*) begin
    ap_block_state3 = ((icmp_ln315_fu_725_p2 == 1'd0) & (data_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state3_ignore_call0 = ((icmp_ln315_fu_725_p2 == 1'd0) & (data_V_V_empty_n == 1'b0));
end

assign ap_block_state5_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_334 = (((icmp_ln350_fu_1285_p2 == 1'd0) & (1'd0 == and_ln326_8_reg_1581) & (icmp_ln346_fu_1239_p2 == 1'd1)) | ((icmp_ln350_fu_1285_p2 == 1'd0) & (icmp_ln346_fu_1239_p2 == 1'd1) & (icmp_ln338_fu_1222_p2 == 1'd1)));
end

always @ (*) begin
    ap_condition_454 = (((1'd0 == and_ln326_8_reg_1581) & (icmp_ln350_fu_1285_p2 == 1'd1) & (icmp_ln346_fu_1239_p2 == 1'd1)) | ((icmp_ln350_fu_1285_p2 == 1'd1) & (icmp_ln346_fu_1239_p2 == 1'd1) & (icmp_ln338_fu_1222_p2 == 1'd1)));
end

always @ (*) begin
    ap_condition_500 = (((icmp_ln346_fu_1239_p2 == 1'd0) & (1'd0 == and_ln326_8_reg_1581)) | ((icmp_ln346_fu_1239_p2 == 1'd0) & (icmp_ln338_fu_1222_p2 == 1'd1)));
end

always @ (*) begin
    ap_condition_502 = (((1'd0 == and_ln326_8_reg_1581) & (icmp_ln346_fu_1239_p2 == 1'd1)) | ((icmp_ln346_fu_1239_p2 == 1'd1) & (icmp_ln338_fu_1222_p2 == 1'd1)));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config3_s_fu_704_ap_start = grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config3_s_fu_704_ap_start_reg;

assign grp_fu_1325_p1 = sext_ln1116_fu_842_p1;

assign grp_fu_1333_p1 = sext_ln1116_fu_842_p1;

assign grp_fu_1341_p1 = sext_ln1116_fu_842_p1;

assign grp_fu_1349_p1 = sext_ln1116_fu_842_p1;

assign grp_fu_1357_p1 = sext_ln1116_fu_842_p1;

assign grp_fu_1365_p1 = sext_ln1116_fu_842_p1;

assign grp_fu_1373_p1 = sext_ln1116_fu_842_p1;

assign grp_fu_1381_p1 = sext_ln1116_fu_842_p1;

assign grp_fu_1389_p1 = sext_ln1116_fu_842_p1;

assign grp_fu_1397_p1 = sext_ln1116_fu_842_p1;

assign grp_fu_1405_p1 = sext_ln1116_fu_842_p1;

assign grp_fu_1413_p1 = sext_ln1116_fu_842_p1;

assign grp_fu_1421_p1 = sext_ln1116_fu_842_p1;

assign grp_fu_1429_p1 = sext_ln1116_fu_842_p1;

assign grp_fu_1437_p1 = sext_ln1116_fu_842_p1;

assign grp_fu_1445_p1 = sext_ln1116_fu_842_p1;

assign i1_fu_731_p2 = (i1_0_i_reg_468 + 2'd1);

assign i_fu_719_p2 = (i_0_i_reg_457 + 15'd1);

assign i_ic_fu_1228_p2 = (i_ic_0_i_reg_682 + 5'd1);

assign icmp_ln313_fu_713_p2 = ((i_0_i_reg_457 == 15'd17161) ? 1'b1 : 1'b0);

assign icmp_ln315_fu_725_p2 = ((i1_0_i_reg_468 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln324_fu_820_p2 = ((in_index_reg_671 == 7'd75) ? 1'b1 : 1'b0);

assign icmp_ln326_10_fu_756_p2 = ((sY_3 == 32'd4) ? 1'b1 : 1'b0);

assign icmp_ln326_11_fu_776_p2 = (($signed(tmp_9_fu_766_p4) > $signed(30'd0)) ? 1'b1 : 1'b0);

assign icmp_ln326_12_fu_796_p2 = (($signed(tmp_10_fu_786_p4) > $signed(30'd0)) ? 1'b1 : 1'b0);

assign icmp_ln326_fu_746_p2 = ((sX_3 == 32'd4) ? 1'b1 : 1'b0);

assign icmp_ln338_fu_1222_p2 = ((i_ic_0_i_reg_682 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln346_fu_1239_p2 = ((pX_3_load_reg_1575 == 32'd130) ? 1'b1 : 1'b0);

assign icmp_ln350_fu_1285_p2 = ((pY_3_load_reg_1569 == 32'd130) ? 1'b1 : 1'b0);

assign ir_fu_826_p2 = (in_index_reg_671 + 7'd1);

assign res_V_V_din = layer_out_i_q0;

assign select_ln356_fu_1306_p3 = ((icmp_ln326_10_reg_1564[0:0] === 1'b1) ? 32'd3 : add_ln356_fu_1301_p2);

assign select_ln361_fu_1260_p3 = ((icmp_ln326_reg_1554[0:0] === 1'b1) ? 32'd3 : add_ln361_fu_1255_p2);

assign sext_ln1116_fu_842_p1 = $signed(layer_in_V_7_q0);

assign start_out = real_start;

assign tmp_10_fu_786_p4 = {{pX_3[31:2]}};

assign tmp_409_fu_850_p4 = {{w3_V_q0[15:8]}};

assign tmp_410_fu_864_p4 = {{w3_V_q0[23:16]}};

assign tmp_411_fu_878_p4 = {{w3_V_q0[31:24]}};

assign tmp_412_fu_892_p4 = {{w3_V_q0[39:32]}};

assign tmp_413_fu_906_p4 = {{w3_V_q0[47:40]}};

assign tmp_414_fu_920_p4 = {{w3_V_q0[55:48]}};

assign tmp_415_fu_934_p4 = {{w3_V_q0[63:56]}};

assign tmp_416_fu_948_p4 = {{w3_V_q0[71:64]}};

assign tmp_417_fu_962_p4 = {{w3_V_q0[79:72]}};

assign tmp_418_fu_976_p4 = {{w3_V_q0[87:80]}};

assign tmp_419_fu_990_p4 = {{w3_V_q0[95:88]}};

assign tmp_420_fu_1004_p4 = {{w3_V_q0[103:96]}};

assign tmp_421_fu_1018_p4 = {{w3_V_q0[111:104]}};

assign tmp_422_fu_1032_p4 = {{w3_V_q0[119:112]}};

assign tmp_423_fu_1046_p4 = {{w3_V_q0[127:120]}};

assign tmp_9_fu_766_p4 = {{pY_3[31:2]}};

assign trunc_ln332_fu_838_p1 = w3_V_q0[7:0];

assign w3_V_address0 = zext_ln332_fu_832_p1;

assign zext_ln317_fu_737_p1 = i1_0_i_reg_468;

assign zext_ln332_fu_832_p1 = in_index_reg_671;

assign zext_ln340_fu_1234_p1 = i_ic_0_i_reg_682;

endmodule //conv_2d_cl_ss_ap_fixed_ap_fixed_16_5_5_3_0_config3_s
