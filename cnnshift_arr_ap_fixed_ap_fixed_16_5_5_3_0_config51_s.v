// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config51_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        data_V_address0,
        data_V_ce0,
        data_V_q0,
        output_V_address0,
        output_V_ce0,
        output_V_we0,
        output_V_d0,
        output_V_q0
);

parameter    ap_ST_fsm_state1 = 14'd1;
parameter    ap_ST_fsm_state2 = 14'd2;
parameter    ap_ST_fsm_state3 = 14'd4;
parameter    ap_ST_fsm_state4 = 14'd8;
parameter    ap_ST_fsm_state5 = 14'd16;
parameter    ap_ST_fsm_state6 = 14'd32;
parameter    ap_ST_fsm_state7 = 14'd64;
parameter    ap_ST_fsm_state8 = 14'd128;
parameter    ap_ST_fsm_state9 = 14'd256;
parameter    ap_ST_fsm_state10 = 14'd512;
parameter    ap_ST_fsm_state11 = 14'd1024;
parameter    ap_ST_fsm_state12 = 14'd2048;
parameter    ap_ST_fsm_state13 = 14'd4096;
parameter    ap_ST_fsm_state14 = 14'd8192;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] data_V_address0;
output   data_V_ce0;
input  [15:0] data_V_q0;
output  [8:0] output_V_address0;
output   output_V_ce0;
output   output_V_we0;
output  [15:0] output_V_d0;
input  [15:0] output_V_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg data_V_ce0;
reg[8:0] output_V_address0;
reg output_V_ce0;
reg output_V_we0;
reg[15:0] output_V_d0;

(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [9:0] linebuffer_V_11_address0;
reg    linebuffer_V_11_ce0;
reg    linebuffer_V_11_we0;
reg   [15:0] linebuffer_V_11_d0;
wire   [15:0] linebuffer_V_11_q0;
wire   [5:0] i0_fu_297_p2;
reg   [5:0] i0_reg_753;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln246_fu_291_p2;
wire   [10:0] zext_ln203_16_fu_308_p1;
reg   [10:0] zext_ln203_16_reg_763;
wire    ap_CS_fsm_state3;
wire   [7:0] zext_ln203_17_fu_312_p1;
reg   [7:0] zext_ln203_17_reg_770;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln250_fu_325_p2;
wire   [1:0] add_ln255_fu_359_p2;
reg   [1:0] add_ln255_reg_785;
wire   [15:0] tmpinput_V_q0;
reg   [15:0] tmp1_V_reg_796;
wire    ap_CS_fsm_state5;
wire   [5:0] zext_ln255_fu_387_p1;
reg   [5:0] zext_ln255_reg_801;
reg   [9:0] linebuffer_V_11_addr_1_reg_807;
reg   [15:0] tmp_V_reg_812;
wire   [3:0] i2_fu_415_p2;
reg   [3:0] i2_reg_820;
wire    ap_CS_fsm_state6;
wire   [10:0] add_ln203_12_fu_446_p2;
reg   [10:0] add_ln203_12_reg_825;
wire   [0:0] icmp_ln258_fu_409_p2;
wire   [1:0] i1_fu_514_p2;
wire   [1:0] i0_2_fu_530_p2;
reg   [1:0] i0_2_reg_843;
wire    ap_CS_fsm_state8;
wire   [6:0] zext_ln192_7_fu_548_p1;
reg   [6:0] zext_ln192_7_reg_848;
wire   [0:0] icmp_ln188_fu_524_p2;
wire   [6:0] add_ln192_fu_552_p2;
reg   [6:0] add_ln192_reg_853;
wire   [1:0] i1_3_fu_564_p2;
reg   [1:0] i1_3_reg_861;
wire    ap_CS_fsm_state9;
wire   [9:0] sub_ln192_fu_594_p2;
reg   [9:0] sub_ln192_reg_866;
wire   [0:0] icmp_ln190_fu_558_p2;
wire   [5:0] i2_4_fu_610_p2;
reg   [5:0] i2_4_reg_875;
wire    ap_CS_fsm_state10;
wire   [9:0] add_ln192_5_fu_625_p2;
reg   [9:0] add_ln192_5_reg_880;
wire   [0:0] icmp_ln191_fu_604_p2;
wire   [1:0] i1_4_fu_667_p2;
reg   [1:0] i1_4_reg_893;
wire    ap_CS_fsm_state12;
wire   [8:0] sub_ln203_fu_693_p2;
reg   [8:0] sub_ln203_reg_898;
wire   [0:0] icmp_ln200_fu_661_p2;
wire   [7:0] zext_ln202_fu_699_p1;
reg   [7:0] zext_ln202_reg_903;
wire   [5:0] i2_3_fu_709_p2;
reg   [5:0] i2_3_reg_911;
wire    ap_CS_fsm_state13;
wire   [8:0] add_ln203_fu_727_p2;
reg   [8:0] add_ln203_reg_916;
wire   [0:0] icmp_ln202_fu_703_p2;
reg   [6:0] tmpinput_V_address0;
reg    tmpinput_V_ce0;
reg    tmpinput_V_we0;
reg   [15:0] tmpinput_V_d0;
reg   [5:0] i0_0_reg_201;
reg   [1:0] i1_0_reg_213;
reg   [3:0] i2_0_reg_225;
wire    ap_CS_fsm_state7;
reg   [1:0] i0_0_i_reg_236;
reg   [1:0] i1_0_i_reg_247;
reg   [5:0] i2_0_i_reg_258;
wire    ap_CS_fsm_state11;
reg   [1:0] i11_0_i_reg_269;
reg   [5:0] i22_0_i_reg_280;
wire    ap_CS_fsm_state14;
wire   [63:0] zext_ln248_fu_303_p1;
wire   [63:0] tmp_33_fu_316_p3;
wire   [63:0] zext_ln252_2_fu_354_p1;
wire   [63:0] zext_ln255_5_fu_382_p1;
wire   [63:0] zext_ln203_18_fu_404_p1;
wire   [63:0] zext_ln203_24_fu_481_p1;
wire   [63:0] zext_ln203_20_fu_509_p1;
wire   [63:0] zext_ln203_22_fu_520_p1;
wire   [63:0] zext_ln192_2_fu_648_p1;
wire   [63:0] zext_ln192_fu_656_p1;
wire   [63:0] zext_ln203_26_fu_741_p1;
wire   [63:0] zext_ln203_fu_746_p1;
wire   [1:0] xor_ln252_fu_331_p2;
wire   [6:0] tmp_35_fu_337_p3;
wire   [7:0] zext_ln252_fu_345_p1;
wire   [7:0] add_ln252_fu_349_p2;
wire   [6:0] tmp_36_fu_365_p3;
wire   [7:0] zext_ln255_4_fu_373_p1;
wire   [7:0] add_ln255_2_fu_377_p2;
wire   [10:0] tmp_37_cast_fu_390_p4;
wire   [10:0] add_ln203_9_fu_399_p2;
wire   [4:0] tmp_40_fu_421_p3;
wire   [5:0] zext_ln203_21_fu_429_p1;
wire   [5:0] add_ln203_11_fu_433_p2;
wire   [10:0] tmp_42_cast_fu_438_p3;
wire   [4:0] tmp_43_fu_451_p3;
wire   [5:0] zext_ln203_23_fu_459_p1;
wire   [5:0] add_ln203_13_fu_463_p2;
wire   [10:0] tmp_45_cast_fu_468_p3;
wire   [10:0] add_ln203_14_fu_476_p2;
wire   [1:0] sub_ln265_fu_486_p2;
wire   [6:0] tmp_39_fu_492_p3;
wire   [7:0] zext_ln203_19_fu_500_p1;
wire   [7:0] add_ln203_10_fu_504_p2;
wire   [0:0] trunc_ln192_fu_536_p1;
wire   [5:0] shl_ln_fu_540_p3;
wire   [8:0] shl_ln192_3_fu_570_p3;
wire   [6:0] shl_ln192_4_fu_582_p3;
wire   [9:0] zext_ln192_8_fu_578_p1;
wire   [9:0] zext_ln192_9_fu_590_p1;
wire   [6:0] zext_ln191_fu_600_p1;
wire   [6:0] add_ln192_6_fu_616_p2;
wire   [9:0] zext_ln192_10_fu_621_p1;
wire   [6:0] add_ln192_7_fu_630_p2;
wire   [9:0] zext_ln192_11_fu_635_p1;
wire   [9:0] add_ln192_8_fu_639_p2;
wire  signed [31:0] sext_ln192_2_fu_644_p1;
wire  signed [31:0] sext_ln192_fu_653_p1;
wire   [6:0] shl_ln203_2_fu_681_p3;
wire   [8:0] shl_ln2_fu_673_p3;
wire   [8:0] zext_ln203_7_fu_689_p1;
wire   [6:0] or_ln_fu_715_p3;
wire   [8:0] zext_ln203_8_fu_723_p1;
wire   [7:0] zext_ln203_25_fu_732_p1;
wire   [7:0] add_ln203_15_fu_736_p2;
reg   [13:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 14'd1;
end

cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config22_s_lineocq #(
    .DataWidth( 16 ),
    .AddressRange( 576 ),
    .AddressWidth( 10 ))
linebuffer_V_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_11_address0),
    .ce0(linebuffer_V_11_ce0),
    .we0(linebuffer_V_11_we0),
    .d0(linebuffer_V_11_d0),
    .q0(linebuffer_V_11_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config41_s_tmpizec #(
    .DataWidth( 16 ),
    .AddressRange( 96 ),
    .AddressWidth( 7 ))
tmpinput_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tmpinput_V_address0),
    .ce0(tmpinput_V_ce0),
    .we0(tmpinput_V_we0),
    .d0(tmpinput_V_d0),
    .q0(tmpinput_V_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln246_fu_291_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i0_0_i_reg_236 <= 2'd0;
    end else if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln190_fu_558_p2 == 1'd1))) begin
        i0_0_i_reg_236 <= i0_2_reg_843;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i0_0_reg_201 <= 6'd0;
    end else if (((icmp_ln250_fu_325_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        i0_0_reg_201 <= i0_reg_753;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln188_fu_524_p2 == 1'd1))) begin
        i11_0_i_reg_269 <= 2'd0;
    end else if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln202_fu_703_p2 == 1'd1))) begin
        i11_0_i_reg_269 <= i1_4_reg_893;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln191_fu_604_p2 == 1'd1))) begin
        i1_0_i_reg_247 <= i1_3_reg_861;
    end else if (((icmp_ln188_fu_524_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        i1_0_i_reg_247 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln258_fu_409_p2 == 1'd1))) begin
        i1_0_reg_213 <= i1_fu_514_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        i1_0_reg_213 <= 2'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        i22_0_i_reg_280 <= i2_3_reg_911;
    end else if (((icmp_ln200_fu_661_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        i22_0_i_reg_280 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln190_fu_558_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        i2_0_i_reg_258 <= 6'd0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        i2_0_i_reg_258 <= i2_4_reg_875;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        i2_0_reg_225 <= i2_reg_820;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        i2_0_reg_225 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln191_fu_604_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        add_ln192_5_reg_880 <= add_ln192_5_fu_625_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln188_fu_524_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        add_ln192_reg_853[6 : 5] <= add_ln192_fu_552_p2[6 : 5];
        zext_ln192_7_reg_848[5] <= zext_ln192_7_fu_548_p1[5];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln258_fu_409_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        add_ln203_12_reg_825 <= add_ln203_12_fu_446_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln202_fu_703_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        add_ln203_reg_916 <= add_ln203_fu_727_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln250_fu_325_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        add_ln255_reg_785 <= add_ln255_fu_359_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        i0_2_reg_843 <= i0_2_fu_530_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i0_reg_753 <= i0_fu_297_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        i1_3_reg_861 <= i1_3_fu_564_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        i1_4_reg_893 <= i1_4_fu_667_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        i2_3_reg_911 <= i2_3_fu_709_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        i2_4_reg_875 <= i2_4_fu_610_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        i2_reg_820 <= i2_fu_415_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        linebuffer_V_11_addr_1_reg_807 <= zext_ln203_18_fu_404_p1;
        tmp1_V_reg_796 <= tmpinput_V_q0;
        tmp_V_reg_812 <= linebuffer_V_11_q0;
        zext_ln255_reg_801[1 : 0] <= zext_ln255_fu_387_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln190_fu_558_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        sub_ln192_reg_866[9 : 5] <= sub_ln192_fu_594_p2[9 : 5];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln200_fu_661_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        sub_ln203_reg_898[8 : 5] <= sub_ln203_fu_693_p2[8 : 5];
        zext_ln202_reg_903[6 : 5] <= zext_ln202_fu_699_p1[6 : 5];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        zext_ln203_16_reg_763[5 : 0] <= zext_ln203_16_fu_308_p1[5 : 0];
        zext_ln203_17_reg_770[5 : 0] <= zext_ln203_17_fu_312_p1[5 : 0];
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state12) & (icmp_ln200_fu_661_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln200_fu_661_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        data_V_ce0 = 1'b1;
    end else begin
        data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        linebuffer_V_11_address0 = zext_ln203_22_fu_520_p1;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln258_fu_409_p2 == 1'd1))) begin
        linebuffer_V_11_address0 = linebuffer_V_11_addr_1_reg_807;
    end else if (((icmp_ln258_fu_409_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_11_address0 = zext_ln203_24_fu_481_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        linebuffer_V_11_address0 = zext_ln255_5_fu_382_p1;
    end else begin
        linebuffer_V_11_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state7) | ((1'b1 == ap_CS_fsm_state6) & (icmp_ln258_fu_409_p2 == 1'd1)) | ((icmp_ln258_fu_409_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6)))) begin
        linebuffer_V_11_ce0 = 1'b1;
    end else begin
        linebuffer_V_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        linebuffer_V_11_d0 = linebuffer_V_11_q0;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln258_fu_409_p2 == 1'd1))) begin
        linebuffer_V_11_d0 = tmp1_V_reg_796;
    end else begin
        linebuffer_V_11_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((1'b1 == ap_CS_fsm_state6) & (icmp_ln258_fu_409_p2 == 1'd1)))) begin
        linebuffer_V_11_we0 = 1'b1;
    end else begin
        linebuffer_V_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        output_V_address0 = zext_ln203_fu_746_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        output_V_address0 = zext_ln192_fu_656_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        output_V_address0 = zext_ln192_2_fu_648_p1;
    end else begin
        output_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        output_V_ce0 = 1'b1;
    end else begin
        output_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        output_V_d0 = tmpinput_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        output_V_d0 = output_V_q0;
    end else begin
        output_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state11))) begin
        output_V_we0 = 1'b1;
    end else begin
        output_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        tmpinput_V_address0 = zext_ln203_26_fu_741_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        tmpinput_V_address0 = zext_ln203_20_fu_509_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmpinput_V_address0 = zext_ln252_2_fu_354_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        tmpinput_V_address0 = tmp_33_fu_316_p3;
    end else begin
        tmpinput_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state6))) begin
        tmpinput_V_ce0 = 1'b1;
    end else begin
        tmpinput_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        tmpinput_V_d0 = tmp_V_reg_812;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        tmpinput_V_d0 = data_V_q0;
    end else begin
        tmpinput_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b1 == ap_CS_fsm_state6) & (icmp_ln258_fu_409_p2 == 1'd1)))) begin
        tmpinput_V_we0 = 1'b1;
    end else begin
        tmpinput_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln246_fu_291_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln250_fu_325_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln258_fu_409_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln188_fu_524_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln190_fu_558_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln191_fu_604_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state12 : begin
            if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln200_fu_661_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln202_fu_703_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln192_5_fu_625_p2 = (zext_ln192_10_fu_621_p1 + sub_ln192_reg_866);

assign add_ln192_6_fu_616_p2 = (zext_ln192_7_reg_848 + zext_ln191_fu_600_p1);

assign add_ln192_7_fu_630_p2 = (add_ln192_reg_853 + zext_ln191_fu_600_p1);

assign add_ln192_8_fu_639_p2 = (zext_ln192_11_fu_635_p1 + sub_ln192_reg_866);

assign add_ln192_fu_552_p2 = (7'd32 + zext_ln192_7_fu_548_p1);

assign add_ln203_10_fu_504_p2 = (zext_ln203_17_reg_770 + zext_ln203_19_fu_500_p1);

assign add_ln203_11_fu_433_p2 = (zext_ln255_reg_801 + zext_ln203_21_fu_429_p1);

assign add_ln203_12_fu_446_p2 = (zext_ln203_16_reg_763 + tmp_42_cast_fu_438_p3);

assign add_ln203_13_fu_463_p2 = (zext_ln255_reg_801 + zext_ln203_23_fu_459_p1);

assign add_ln203_14_fu_476_p2 = (zext_ln203_16_reg_763 + tmp_45_cast_fu_468_p3);

assign add_ln203_15_fu_736_p2 = (zext_ln202_reg_903 + zext_ln203_25_fu_732_p1);

assign add_ln203_9_fu_399_p2 = (tmp_37_cast_fu_390_p4 + zext_ln203_16_reg_763);

assign add_ln203_fu_727_p2 = (sub_ln203_reg_898 + zext_ln203_8_fu_723_p1);

assign add_ln252_fu_349_p2 = (zext_ln252_fu_345_p1 + zext_ln203_17_reg_770);

assign add_ln255_2_fu_377_p2 = (zext_ln255_4_fu_373_p1 + zext_ln203_17_reg_770);

assign add_ln255_fu_359_p2 = ($signed(i1_0_reg_213) + $signed(2'd3));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign data_V_address0 = zext_ln248_fu_303_p1;

assign i0_2_fu_530_p2 = (i0_0_i_reg_236 + 2'd1);

assign i0_fu_297_p2 = (i0_0_reg_201 + 6'd1);

assign i1_3_fu_564_p2 = (i1_0_i_reg_247 + 2'd1);

assign i1_4_fu_667_p2 = (i11_0_i_reg_269 + 2'd1);

assign i1_fu_514_p2 = (i1_0_reg_213 + 2'd1);

assign i2_3_fu_709_p2 = (i22_0_i_reg_280 + 6'd1);

assign i2_4_fu_610_p2 = (i2_0_i_reg_258 + 6'd1);

assign i2_fu_415_p2 = (i2_0_reg_225 + 4'd1);

assign icmp_ln188_fu_524_p2 = ((i0_0_i_reg_236 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln190_fu_558_p2 = ((i1_0_i_reg_247 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln191_fu_604_p2 = ((i2_0_i_reg_258 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln200_fu_661_p2 = ((i11_0_i_reg_269 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln202_fu_703_p2 = ((i22_0_i_reg_280 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln246_fu_291_p2 = ((i0_0_reg_201 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln250_fu_325_p2 = ((i1_0_reg_213 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln258_fu_409_p2 = ((i2_0_reg_225 == 4'd8) ? 1'b1 : 1'b0);

assign or_ln_fu_715_p3 = {{1'd1}, {i22_0_i_reg_280}};

assign sext_ln192_2_fu_644_p1 = $signed(add_ln192_8_fu_639_p2);

assign sext_ln192_fu_653_p1 = $signed(add_ln192_5_reg_880);

assign shl_ln192_3_fu_570_p3 = {{i1_0_i_reg_247}, {7'd0}};

assign shl_ln192_4_fu_582_p3 = {{i1_0_i_reg_247}, {5'd0}};

assign shl_ln203_2_fu_681_p3 = {{i11_0_i_reg_269}, {5'd0}};

assign shl_ln2_fu_673_p3 = {{i11_0_i_reg_269}, {7'd0}};

assign shl_ln_fu_540_p3 = {{trunc_ln192_fu_536_p1}, {5'd0}};

assign sub_ln192_fu_594_p2 = (zext_ln192_8_fu_578_p1 - zext_ln192_9_fu_590_p1);

assign sub_ln203_fu_693_p2 = (shl_ln2_fu_673_p3 - zext_ln203_7_fu_689_p1);

assign sub_ln265_fu_486_p2 = ($signed(2'd2) - $signed(i1_0_reg_213));

assign tmp_33_fu_316_p3 = {{58'd1}, {i0_0_reg_201}};

assign tmp_35_fu_337_p3 = {{xor_ln252_fu_331_p2}, {5'd0}};

assign tmp_36_fu_365_p3 = {{add_ln255_fu_359_p2}, {5'd0}};

assign tmp_37_cast_fu_390_p4 = {{{{4'd4}, {add_ln255_reg_785}}}, {5'd0}};

assign tmp_39_fu_492_p3 = {{sub_ln265_fu_486_p2}, {5'd0}};

assign tmp_40_fu_421_p3 = {{i2_0_reg_225}, {1'd0}};

assign tmp_42_cast_fu_438_p3 = {{add_ln203_11_fu_433_p2}, {5'd0}};

assign tmp_43_fu_451_p3 = {{i2_fu_415_p2}, {1'd0}};

assign tmp_45_cast_fu_468_p3 = {{add_ln203_13_fu_463_p2}, {5'd0}};

assign trunc_ln192_fu_536_p1 = i0_0_i_reg_236[0:0];

assign xor_ln252_fu_331_p2 = (i1_0_reg_213 ^ 2'd3);

assign zext_ln191_fu_600_p1 = i2_0_i_reg_258;

assign zext_ln192_10_fu_621_p1 = add_ln192_6_fu_616_p2;

assign zext_ln192_11_fu_635_p1 = add_ln192_7_fu_630_p2;

assign zext_ln192_2_fu_648_p1 = $unsigned(sext_ln192_2_fu_644_p1);

assign zext_ln192_7_fu_548_p1 = shl_ln_fu_540_p3;

assign zext_ln192_8_fu_578_p1 = shl_ln192_3_fu_570_p3;

assign zext_ln192_9_fu_590_p1 = shl_ln192_4_fu_582_p3;

assign zext_ln192_fu_656_p1 = $unsigned(sext_ln192_fu_653_p1);

assign zext_ln202_fu_699_p1 = shl_ln203_2_fu_681_p3;

assign zext_ln203_16_fu_308_p1 = i0_0_reg_201;

assign zext_ln203_17_fu_312_p1 = i0_0_reg_201;

assign zext_ln203_18_fu_404_p1 = add_ln203_9_fu_399_p2;

assign zext_ln203_19_fu_500_p1 = tmp_39_fu_492_p3;

assign zext_ln203_20_fu_509_p1 = add_ln203_10_fu_504_p2;

assign zext_ln203_21_fu_429_p1 = tmp_40_fu_421_p3;

assign zext_ln203_22_fu_520_p1 = add_ln203_12_reg_825;

assign zext_ln203_23_fu_459_p1 = tmp_43_fu_451_p3;

assign zext_ln203_24_fu_481_p1 = add_ln203_14_fu_476_p2;

assign zext_ln203_25_fu_732_p1 = i22_0_i_reg_280;

assign zext_ln203_26_fu_741_p1 = add_ln203_15_fu_736_p2;

assign zext_ln203_7_fu_689_p1 = shl_ln203_2_fu_681_p3;

assign zext_ln203_8_fu_723_p1 = or_ln_fu_715_p3;

assign zext_ln203_fu_746_p1 = add_ln203_reg_916;

assign zext_ln248_fu_303_p1 = i0_0_reg_201;

assign zext_ln252_2_fu_354_p1 = add_ln252_fu_349_p2;

assign zext_ln252_fu_345_p1 = tmp_35_fu_337_p3;

assign zext_ln255_4_fu_373_p1 = tmp_36_fu_365_p3;

assign zext_ln255_5_fu_382_p1 = add_ln255_2_fu_377_p2;

assign zext_ln255_fu_387_p1 = add_ln255_reg_785;

always @ (posedge ap_clk) begin
    zext_ln203_16_reg_763[10:6] <= 5'b00000;
    zext_ln203_17_reg_770[7:6] <= 2'b00;
    zext_ln255_reg_801[5:2] <= 4'b0000;
    zext_ln192_7_reg_848[4:0] <= 5'b00000;
    zext_ln192_7_reg_848[6] <= 1'b0;
    add_ln192_reg_853[4:0] <= 5'b00000;
    sub_ln192_reg_866[4:0] <= 5'b00000;
    sub_ln203_reg_898[4:0] <= 5'b00000;
    zext_ln202_reg_903[4:0] <= 5'b00000;
    zext_ln202_reg_903[7] <= 1'b0;
end

endmodule //cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config51_s
