// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conv_2d_cl_ss_ap_fixed_ap_fixed_16_5_5_3_0_config32_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        data_V_V_dout,
        data_V_V_empty_n,
        data_V_V_read,
        res_V_V_din,
        res_V_V_full_n,
        res_V_V_write
);

parameter    ap_ST_fsm_state1 = 24'd1;
parameter    ap_ST_fsm_state2 = 24'd2;
parameter    ap_ST_fsm_state3 = 24'd4;
parameter    ap_ST_fsm_state4 = 24'd8;
parameter    ap_ST_fsm_pp0_stage0 = 24'd16;
parameter    ap_ST_fsm_state7 = 24'd32;
parameter    ap_ST_fsm_state8 = 24'd64;
parameter    ap_ST_fsm_state9 = 24'd128;
parameter    ap_ST_fsm_state10 = 24'd256;
parameter    ap_ST_fsm_state11 = 24'd512;
parameter    ap_ST_fsm_state12 = 24'd1024;
parameter    ap_ST_fsm_state13 = 24'd2048;
parameter    ap_ST_fsm_state14 = 24'd4096;
parameter    ap_ST_fsm_state15 = 24'd8192;
parameter    ap_ST_fsm_state16 = 24'd16384;
parameter    ap_ST_fsm_state17 = 24'd32768;
parameter    ap_ST_fsm_state18 = 24'd65536;
parameter    ap_ST_fsm_state19 = 24'd131072;
parameter    ap_ST_fsm_state20 = 24'd262144;
parameter    ap_ST_fsm_state21 = 24'd524288;
parameter    ap_ST_fsm_state22 = 24'd1048576;
parameter    ap_ST_fsm_state23 = 24'd2097152;
parameter    ap_ST_fsm_state24 = 24'd4194304;
parameter    ap_ST_fsm_state25 = 24'd8388608;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [15:0] data_V_V_dout;
input   data_V_V_empty_n;
output   data_V_V_read;
output  [15:0] res_V_V_din;
input   res_V_V_full_n;
output   res_V_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg data_V_V_read;
reg res_V_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [23:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg   [7:0] layer_in_V_8_address0;
reg    layer_in_V_8_ce0;
reg    layer_in_V_8_we0;
wire  signed [15:0] layer_in_V_8_q0;
reg   [31:0] sX_4;
reg   [31:0] sY_4;
reg   [31:0] pY_4;
reg   [31:0] pX_4;
wire   [7:0] w32_V_address0;
reg    w32_V_ce0;
wire   [252:0] w32_V_q0;
reg    data_V_V_blk_n;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln315_fu_1115_p2;
reg    res_V_V_blk_n;
wire    ap_CS_fsm_state24;
reg   [23:0] acc_V_31_0_reg_677;
reg   [23:0] acc_V_30_0_reg_689;
reg   [23:0] acc_V_29_0_reg_701;
reg   [23:0] acc_V_28_0_reg_713;
reg   [23:0] acc_V_27_0_reg_725;
reg   [23:0] acc_V_26_0_reg_737;
reg   [23:0] acc_V_25_0_reg_749;
reg   [23:0] acc_V_24_0_reg_761;
reg   [23:0] acc_V_23_0_reg_773;
reg   [23:0] acc_V_22_0_reg_785;
reg   [23:0] acc_V_21_0_reg_797;
reg   [23:0] acc_V_20_0_reg_809;
reg   [23:0] acc_V_19_0_reg_821;
reg   [23:0] acc_V_18_0_reg_833;
reg   [23:0] acc_V_17_0_reg_845;
reg   [23:0] acc_V_16_0_reg_857;
reg   [23:0] acc_V_15_0_reg_869;
reg   [23:0] acc_V_14_0_reg_881;
reg   [23:0] acc_V_13_0_reg_893;
reg   [23:0] acc_V_12_0_reg_905;
reg   [23:0] acc_V_11_0_reg_917;
reg   [23:0] acc_V_10_0_reg_929;
reg   [23:0] acc_V_9_0_reg_941;
reg   [23:0] acc_V_8_0_reg_953;
reg   [23:0] acc_V_7_0_reg_965;
reg   [23:0] acc_V_6_0_reg_977;
reg   [23:0] acc_V_5_0_reg_989;
reg   [23:0] acc_V_4_0_reg_1001;
reg   [23:0] acc_V_3_0_reg_1013;
reg   [23:0] acc_V_2_0_reg_1025;
reg   [23:0] acc_V_1_0_reg_1037;
reg   [23:0] acc_V_0_0_reg_1049;
reg   [7:0] in_index_reg_1061;
reg    ap_block_state1;
wire   [8:0] i_fu_1109_p2;
reg   [8:0] i_reg_2522;
wire    ap_CS_fsm_state2;
wire   [4:0] i1_fu_1121_p2;
reg    ap_block_state3;
reg   [31:0] sX_4_load_reg_2535;
wire    ap_CS_fsm_state4;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_ap_ready;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_ap_done;
wire   [0:0] icmp_ln326_fu_1136_p2;
reg   [0:0] icmp_ln326_reg_2540;
reg   [31:0] sY_4_load_reg_2545;
wire   [0:0] icmp_ln326_13_fu_1146_p2;
reg   [0:0] icmp_ln326_13_reg_2550;
reg   [31:0] pY_4_load_reg_2555;
reg   [31:0] pX_4_load_reg_2561;
wire   [0:0] and_ln326_10_fu_1204_p2;
reg   [0:0] and_ln326_10_reg_2567;
wire   [0:0] icmp_ln324_fu_1210_p2;
reg   [0:0] icmp_ln324_reg_2571;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state5_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [7:0] ir_fu_1216_p2;
reg    ap_enable_reg_pp0_iter0;
wire  signed [23:0] grp_fu_2103_p3;
reg    ap_enable_reg_pp0_iter1;
wire  signed [23:0] grp_fu_2111_p3;
wire  signed [23:0] grp_fu_2119_p3;
wire  signed [23:0] grp_fu_2127_p3;
wire  signed [23:0] grp_fu_2135_p3;
wire  signed [23:0] grp_fu_2143_p3;
wire  signed [23:0] grp_fu_2151_p3;
wire  signed [23:0] grp_fu_2159_p3;
wire  signed [23:0] grp_fu_2167_p3;
wire  signed [23:0] grp_fu_2175_p3;
wire  signed [23:0] grp_fu_2183_p3;
wire  signed [23:0] grp_fu_2191_p3;
wire  signed [23:0] grp_fu_2199_p3;
wire  signed [23:0] grp_fu_2207_p3;
wire  signed [23:0] grp_fu_2215_p3;
wire  signed [23:0] grp_fu_2223_p3;
wire  signed [23:0] grp_fu_2231_p3;
wire  signed [23:0] grp_fu_2239_p3;
wire  signed [23:0] grp_fu_2247_p3;
wire  signed [23:0] grp_fu_2255_p3;
wire  signed [23:0] grp_fu_2263_p3;
wire  signed [23:0] grp_fu_2271_p3;
wire  signed [23:0] grp_fu_2279_p3;
wire  signed [23:0] grp_fu_2287_p3;
wire  signed [23:0] grp_fu_2295_p3;
wire  signed [23:0] grp_fu_2303_p3;
wire  signed [23:0] grp_fu_2311_p3;
wire  signed [23:0] grp_fu_2319_p3;
wire  signed [23:0] grp_fu_2327_p3;
wire  signed [23:0] grp_fu_2335_p3;
wire  signed [23:0] grp_fu_2343_p3;
wire  signed [23:0] grp_fu_2351_p3;
reg   [15:0] trunc_ln708_274_reg_2750;
wire    ap_CS_fsm_state7;
reg   [15:0] trunc_ln708_275_reg_2755;
reg   [15:0] trunc_ln708_276_reg_2760;
reg   [15:0] trunc_ln708_277_reg_2765;
reg   [15:0] trunc_ln708_278_reg_2770;
reg   [15:0] trunc_ln708_279_reg_2775;
reg   [15:0] trunc_ln708_280_reg_2780;
reg   [15:0] trunc_ln708_281_reg_2785;
reg   [15:0] trunc_ln708_282_reg_2790;
reg   [15:0] trunc_ln708_283_reg_2795;
reg   [15:0] trunc_ln708_284_reg_2800;
reg   [15:0] trunc_ln708_285_reg_2805;
reg   [15:0] trunc_ln708_286_reg_2810;
reg   [15:0] trunc_ln708_287_reg_2815;
reg   [15:0] trunc_ln708_288_reg_2820;
reg   [15:0] trunc_ln708_289_reg_2825;
reg   [15:0] trunc_ln708_290_reg_2830;
reg   [15:0] trunc_ln708_291_reg_2835;
reg   [15:0] trunc_ln708_292_reg_2840;
reg   [15:0] trunc_ln708_293_reg_2845;
reg   [15:0] trunc_ln708_294_reg_2850;
reg   [15:0] trunc_ln708_295_reg_2855;
reg   [15:0] trunc_ln708_296_reg_2860;
reg   [15:0] trunc_ln708_297_reg_2865;
reg   [15:0] trunc_ln708_298_reg_2870;
reg   [15:0] trunc_ln708_299_reg_2875;
reg   [15:0] trunc_ln708_300_reg_2880;
reg   [15:0] trunc_ln708_301_reg_2885;
reg   [15:0] trunc_ln708_302_reg_2890;
reg   [15:0] trunc_ln708_303_reg_2895;
wire   [5:0] i_ic_fu_2006_p2;
reg   [5:0] i_ic_reg_2903;
wire    ap_CS_fsm_state23;
wire   [0:0] icmp_ln338_fu_2000_p2;
wire   [0:0] icmp_ln346_fu_2017_p2;
reg   [0:0] icmp_ln346_reg_2913;
wire   [31:0] select_ln356_fu_2084_p3;
wire   [0:0] icmp_ln350_fu_2063_p2;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state5;
reg   [3:0] tmpdata_V_address0;
reg    tmpdata_V_ce0;
reg    tmpdata_V_we0;
wire   [15:0] tmpdata_V_q0;
reg   [4:0] layer_out_i_address0;
reg    layer_out_i_ce0;
reg    layer_out_i_we0;
reg   [15:0] layer_out_i_d0;
wire   [15:0] layer_out_i_q0;
reg   [4:0] layer_out_i_address1;
reg    layer_out_i_ce1;
reg    layer_out_i_we1;
reg   [15:0] layer_out_i_d1;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_ap_start;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_ap_idle;
wire   [3:0] grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_data_V_address0;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_data_V_ce0;
wire   [7:0] grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_output_V_address0;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_output_V_ce0;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_output_V_we0;
wire   [15:0] grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_output_V_d0;
reg   [8:0] i_0_i_reg_655;
wire    ap_CS_fsm_state25;
reg   [4:0] i1_0_i_reg_666;
wire   [0:0] icmp_ln313_fu_1103_p2;
wire    ap_block_pp0_stage0;
reg   [5:0] i_ic_0_i_reg_1072;
wire    ap_CS_fsm_state22;
reg   [31:0] storemerge_i_reg_1083;
reg    grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_ap_start_reg;
reg    ap_block_state3_ignore_call0;
wire   [63:0] zext_ln317_fu_1127_p1;
wire   [63:0] zext_ln332_fu_1222_p1;
wire   [63:0] zext_ln340_fu_2012_p1;
wire   [31:0] select_ln361_fu_2038_p3;
wire   [31:0] add_ln354_fu_2068_p2;
wire   [31:0] add_ln359_fu_2022_p2;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire   [30:0] tmp_11_fu_1156_p4;
wire   [30:0] tmp_12_fu_1176_p4;
wire   [0:0] icmp_ln326_14_fu_1166_p2;
wire   [0:0] icmp_ln326_15_fu_1186_p2;
wire   [0:0] and_ln326_9_fu_1198_p2;
wire   [0:0] and_ln326_fu_1192_p2;
wire  signed [15:0] sext_ln1116_fu_1232_p0;
wire  signed [7:0] trunc_ln332_fu_1228_p1;
wire  signed [7:0] tmp_425_fu_1244_p4;
wire  signed [7:0] tmp_426_fu_1258_p4;
wire  signed [7:0] tmp_427_fu_1272_p4;
wire  signed [7:0] tmp_428_fu_1286_p4;
wire  signed [7:0] tmp_429_fu_1300_p4;
wire  signed [7:0] tmp_430_fu_1314_p4;
wire  signed [7:0] tmp_431_fu_1328_p4;
wire  signed [7:0] tmp_432_fu_1342_p4;
wire  signed [7:0] tmp_433_fu_1356_p4;
wire  signed [7:0] tmp_434_fu_1370_p4;
wire  signed [7:0] tmp_435_fu_1384_p4;
wire  signed [7:0] tmp_436_fu_1398_p4;
wire  signed [7:0] tmp_437_fu_1412_p4;
wire  signed [7:0] tmp_438_fu_1426_p4;
wire  signed [7:0] tmp_439_fu_1440_p4;
wire  signed [7:0] tmp_440_fu_1454_p4;
wire  signed [7:0] tmp_441_fu_1468_p4;
wire  signed [7:0] tmp_442_fu_1482_p4;
wire  signed [7:0] tmp_443_fu_1496_p4;
wire  signed [7:0] tmp_444_fu_1510_p4;
wire  signed [7:0] tmp_445_fu_1524_p4;
wire  signed [7:0] tmp_446_fu_1538_p4;
wire  signed [7:0] tmp_447_fu_1552_p4;
wire  signed [7:0] tmp_448_fu_1566_p4;
wire  signed [7:0] tmp_449_fu_1580_p4;
wire  signed [7:0] tmp_450_fu_1594_p4;
wire  signed [7:0] tmp_451_fu_1608_p4;
wire  signed [7:0] tmp_452_fu_1622_p4;
wire  signed [7:0] tmp_453_fu_1636_p4;
wire  signed [7:0] tmp_454_fu_1650_p4;
wire  signed [4:0] tmp_22_fu_1664_p4;
wire   [31:0] add_ln361_fu_2033_p2;
wire   [31:0] add_ln356_fu_2079_p2;
wire  signed [15:0] grp_fu_2103_p1;
wire  signed [23:0] sext_ln1116_fu_1232_p1;
wire  signed [15:0] grp_fu_2111_p1;
wire  signed [15:0] grp_fu_2119_p1;
wire  signed [15:0] grp_fu_2127_p1;
wire  signed [15:0] grp_fu_2135_p1;
wire  signed [15:0] grp_fu_2143_p1;
wire  signed [15:0] grp_fu_2151_p1;
wire  signed [15:0] grp_fu_2159_p1;
wire  signed [15:0] grp_fu_2167_p1;
wire  signed [15:0] grp_fu_2175_p1;
wire  signed [15:0] grp_fu_2183_p1;
wire  signed [15:0] grp_fu_2191_p1;
wire  signed [15:0] grp_fu_2199_p1;
wire  signed [15:0] grp_fu_2207_p1;
wire  signed [15:0] grp_fu_2215_p1;
wire  signed [15:0] grp_fu_2223_p1;
wire  signed [15:0] grp_fu_2231_p1;
wire  signed [15:0] grp_fu_2239_p1;
wire  signed [15:0] grp_fu_2247_p1;
wire  signed [15:0] grp_fu_2255_p1;
wire  signed [15:0] grp_fu_2263_p1;
wire  signed [15:0] grp_fu_2271_p1;
wire  signed [15:0] grp_fu_2279_p1;
wire  signed [15:0] grp_fu_2287_p1;
wire  signed [15:0] grp_fu_2295_p1;
wire  signed [15:0] grp_fu_2303_p1;
wire  signed [15:0] grp_fu_2311_p1;
wire  signed [15:0] grp_fu_2319_p1;
wire  signed [15:0] grp_fu_2327_p1;
wire  signed [15:0] grp_fu_2335_p1;
wire  signed [15:0] grp_fu_2343_p1;
reg   [23:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_657;
reg    ap_condition_659;
reg    ap_condition_470;
reg    ap_condition_595;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 24'd1;
#0 sX_4 = 32'd0;
#0 sY_4 = 32'd0;
#0 pY_4 = 32'd0;
#0 pX_4 = 32'd0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_ap_start_reg = 1'b0;
end

conv_2d_cl_ss_ap_fixed_ap_fixed_16_5_5_3_0_config13_s_laylbW #(
    .DataWidth( 16 ),
    .AddressRange( 144 ),
    .AddressWidth( 8 ))
layer_in_V_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer_in_V_8_address0),
    .ce0(layer_in_V_8_ce0),
    .we0(layer_in_V_8_we0),
    .d0(grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_output_V_d0),
    .q0(layer_in_V_8_q0)
);

conv_2d_cl_ss_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_w32_V #(
    .DataWidth( 253 ),
    .AddressRange( 144 ),
    .AddressWidth( 8 ))
w32_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w32_V_address0),
    .ce0(w32_V_ce0),
    .q0(w32_V_q0)
);

pooling2d_cl_ss_ap_fixed_ap_fixed_16_5_5_3_0_config6_s_meibs #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
tmpdata_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tmpdata_V_address0),
    .ce0(tmpdata_V_ce0),
    .we0(tmpdata_V_we0),
    .d0(data_V_V_dout),
    .q0(tmpdata_V_q0)
);

conv_2d_cl_ss_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_layxdS #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
layer_out_i_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer_out_i_address0),
    .ce0(layer_out_i_ce0),
    .we0(layer_out_i_we0),
    .d0(layer_out_i_d0),
    .q0(layer_out_i_q0),
    .address1(layer_out_i_address1),
    .ce1(layer_out_i_ce1),
    .we1(layer_out_i_we1),
    .d1(layer_out_i_d1)
);

cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_ap_start),
    .ap_done(grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_ap_done),
    .ap_idle(grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_ap_idle),
    .ap_ready(grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_ap_ready),
    .data_V_address0(grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_data_V_address0),
    .data_V_ce0(grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_data_V_ce0),
    .data_V_q0(tmpdata_V_q0),
    .output_V_address0(grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_output_V_address0),
    .output_V_ce0(grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_output_V_ce0),
    .output_V_we0(grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_output_V_we0),
    .output_V_d0(grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_output_V_d0),
    .output_V_q0(layer_in_V_8_q0)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U145(
    .din0(trunc_ln332_fu_1228_p1),
    .din1(grp_fu_2103_p1),
    .din2(acc_V_0_0_reg_1049),
    .dout(grp_fu_2103_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U146(
    .din0(tmp_425_fu_1244_p4),
    .din1(grp_fu_2111_p1),
    .din2(acc_V_1_0_reg_1037),
    .dout(grp_fu_2111_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U147(
    .din0(tmp_426_fu_1258_p4),
    .din1(grp_fu_2119_p1),
    .din2(acc_V_2_0_reg_1025),
    .dout(grp_fu_2119_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U148(
    .din0(tmp_427_fu_1272_p4),
    .din1(grp_fu_2127_p1),
    .din2(acc_V_3_0_reg_1013),
    .dout(grp_fu_2127_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U149(
    .din0(tmp_428_fu_1286_p4),
    .din1(grp_fu_2135_p1),
    .din2(acc_V_4_0_reg_1001),
    .dout(grp_fu_2135_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U150(
    .din0(tmp_429_fu_1300_p4),
    .din1(grp_fu_2143_p1),
    .din2(acc_V_5_0_reg_989),
    .dout(grp_fu_2143_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U151(
    .din0(tmp_430_fu_1314_p4),
    .din1(grp_fu_2151_p1),
    .din2(acc_V_6_0_reg_977),
    .dout(grp_fu_2151_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U152(
    .din0(tmp_431_fu_1328_p4),
    .din1(grp_fu_2159_p1),
    .din2(acc_V_7_0_reg_965),
    .dout(grp_fu_2159_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U153(
    .din0(tmp_432_fu_1342_p4),
    .din1(grp_fu_2167_p1),
    .din2(acc_V_8_0_reg_953),
    .dout(grp_fu_2167_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U154(
    .din0(tmp_433_fu_1356_p4),
    .din1(grp_fu_2175_p1),
    .din2(acc_V_9_0_reg_941),
    .dout(grp_fu_2175_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U155(
    .din0(tmp_434_fu_1370_p4),
    .din1(grp_fu_2183_p1),
    .din2(acc_V_10_0_reg_929),
    .dout(grp_fu_2183_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U156(
    .din0(tmp_435_fu_1384_p4),
    .din1(grp_fu_2191_p1),
    .din2(acc_V_11_0_reg_917),
    .dout(grp_fu_2191_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U157(
    .din0(tmp_436_fu_1398_p4),
    .din1(grp_fu_2199_p1),
    .din2(acc_V_12_0_reg_905),
    .dout(grp_fu_2199_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U158(
    .din0(tmp_437_fu_1412_p4),
    .din1(grp_fu_2207_p1),
    .din2(acc_V_13_0_reg_893),
    .dout(grp_fu_2207_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U159(
    .din0(tmp_438_fu_1426_p4),
    .din1(grp_fu_2215_p1),
    .din2(acc_V_14_0_reg_881),
    .dout(grp_fu_2215_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U160(
    .din0(tmp_439_fu_1440_p4),
    .din1(grp_fu_2223_p1),
    .din2(acc_V_15_0_reg_869),
    .dout(grp_fu_2223_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U161(
    .din0(tmp_440_fu_1454_p4),
    .din1(grp_fu_2231_p1),
    .din2(acc_V_16_0_reg_857),
    .dout(grp_fu_2231_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U162(
    .din0(tmp_441_fu_1468_p4),
    .din1(grp_fu_2239_p1),
    .din2(acc_V_17_0_reg_845),
    .dout(grp_fu_2239_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U163(
    .din0(tmp_442_fu_1482_p4),
    .din1(grp_fu_2247_p1),
    .din2(acc_V_18_0_reg_833),
    .dout(grp_fu_2247_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U164(
    .din0(tmp_443_fu_1496_p4),
    .din1(grp_fu_2255_p1),
    .din2(acc_V_19_0_reg_821),
    .dout(grp_fu_2255_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U165(
    .din0(tmp_444_fu_1510_p4),
    .din1(grp_fu_2263_p1),
    .din2(acc_V_20_0_reg_809),
    .dout(grp_fu_2263_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U166(
    .din0(tmp_445_fu_1524_p4),
    .din1(grp_fu_2271_p1),
    .din2(acc_V_21_0_reg_797),
    .dout(grp_fu_2271_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U167(
    .din0(tmp_446_fu_1538_p4),
    .din1(grp_fu_2279_p1),
    .din2(acc_V_22_0_reg_785),
    .dout(grp_fu_2279_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U168(
    .din0(tmp_447_fu_1552_p4),
    .din1(grp_fu_2287_p1),
    .din2(acc_V_23_0_reg_773),
    .dout(grp_fu_2287_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U169(
    .din0(tmp_448_fu_1566_p4),
    .din1(grp_fu_2295_p1),
    .din2(acc_V_24_0_reg_761),
    .dout(grp_fu_2295_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U170(
    .din0(tmp_449_fu_1580_p4),
    .din1(grp_fu_2303_p1),
    .din2(acc_V_25_0_reg_749),
    .dout(grp_fu_2303_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U171(
    .din0(tmp_450_fu_1594_p4),
    .din1(grp_fu_2311_p1),
    .din2(acc_V_26_0_reg_737),
    .dout(grp_fu_2311_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U172(
    .din0(tmp_451_fu_1608_p4),
    .din1(grp_fu_2319_p1),
    .din2(acc_V_27_0_reg_725),
    .dout(grp_fu_2319_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U173(
    .din0(tmp_452_fu_1622_p4),
    .din1(grp_fu_2327_p1),
    .din2(acc_V_28_0_reg_713),
    .dout(grp_fu_2327_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U174(
    .din0(tmp_453_fu_1636_p4),
    .din1(grp_fu_2335_p1),
    .din2(acc_V_29_0_reg_701),
    .dout(grp_fu_2335_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U175(
    .din0(tmp_454_fu_1650_p4),
    .din1(grp_fu_2343_p1),
    .din2(acc_V_30_0_reg_689),
    .dout(grp_fu_2343_p3)
);

myproject_mac_muladd_5s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_5s_16s_24ns_24_1_1_U176(
    .din0(tmp_22_fu_1664_p4),
    .din1(layer_in_V_8_q0),
    .din2(acc_V_31_0_reg_677),
    .dout(grp_fu_2351_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((icmp_ln313_fu_1103_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state5) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'd1 == and_ln326_10_fu_1204_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state5))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state5);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'd1 == and_ln326_10_fu_1204_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_ap_start_reg <= 1'b0;
    end else begin
        if ((~((icmp_ln315_fu_1115_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln315_fu_1115_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
            grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_ap_start_reg <= 1'b1;
        end else if ((grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_ap_ready == 1'b1)) begin
            grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2571 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_0_0_reg_1049 <= grp_fu_2103_p3;
    end else if (((1'd1 == and_ln326_10_fu_1204_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_0_0_reg_1049 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2571 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_10_0_reg_929 <= grp_fu_2183_p3;
    end else if (((1'd1 == and_ln326_10_fu_1204_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_10_0_reg_929 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2571 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_11_0_reg_917 <= grp_fu_2191_p3;
    end else if (((1'd1 == and_ln326_10_fu_1204_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_11_0_reg_917 <= 24'd16773120;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2571 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_12_0_reg_905 <= grp_fu_2199_p3;
    end else if (((1'd1 == and_ln326_10_fu_1204_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_12_0_reg_905 <= 24'd16775168;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2571 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_13_0_reg_893 <= grp_fu_2207_p3;
    end else if (((1'd1 == and_ln326_10_fu_1204_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_13_0_reg_893 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2571 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_14_0_reg_881 <= grp_fu_2215_p3;
    end else if (((1'd1 == and_ln326_10_fu_1204_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_14_0_reg_881 <= 24'd16773120;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2571 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_15_0_reg_869 <= grp_fu_2223_p3;
    end else if (((1'd1 == and_ln326_10_fu_1204_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_15_0_reg_869 <= 24'd2048;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2571 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_16_0_reg_857 <= grp_fu_2231_p3;
    end else if (((1'd1 == and_ln326_10_fu_1204_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_16_0_reg_857 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2571 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_17_0_reg_845 <= grp_fu_2239_p3;
    end else if (((1'd1 == and_ln326_10_fu_1204_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_17_0_reg_845 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2571 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_18_0_reg_833 <= grp_fu_2247_p3;
    end else if (((1'd1 == and_ln326_10_fu_1204_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_18_0_reg_833 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2571 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_19_0_reg_821 <= grp_fu_2255_p3;
    end else if (((1'd1 == and_ln326_10_fu_1204_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_19_0_reg_821 <= 24'd2048;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2571 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_1_0_reg_1037 <= grp_fu_2111_p3;
    end else if (((1'd1 == and_ln326_10_fu_1204_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_1_0_reg_1037 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2571 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_20_0_reg_809 <= grp_fu_2263_p3;
    end else if (((1'd1 == and_ln326_10_fu_1204_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_20_0_reg_809 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2571 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_21_0_reg_797 <= grp_fu_2271_p3;
    end else if (((1'd1 == and_ln326_10_fu_1204_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_21_0_reg_797 <= 24'd2048;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2571 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_22_0_reg_785 <= grp_fu_2279_p3;
    end else if (((1'd1 == and_ln326_10_fu_1204_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_22_0_reg_785 <= 24'd16775168;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2571 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_23_0_reg_773 <= grp_fu_2287_p3;
    end else if (((1'd1 == and_ln326_10_fu_1204_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_23_0_reg_773 <= 24'd16775168;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2571 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_24_0_reg_761 <= grp_fu_2295_p3;
    end else if (((1'd1 == and_ln326_10_fu_1204_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_24_0_reg_761 <= 24'd2048;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2571 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_25_0_reg_749 <= grp_fu_2303_p3;
    end else if (((1'd1 == and_ln326_10_fu_1204_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_25_0_reg_749 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2571 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_26_0_reg_737 <= grp_fu_2311_p3;
    end else if (((1'd1 == and_ln326_10_fu_1204_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_26_0_reg_737 <= 24'd16775168;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2571 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_27_0_reg_725 <= grp_fu_2319_p3;
    end else if (((1'd1 == and_ln326_10_fu_1204_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_27_0_reg_725 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2571 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_28_0_reg_713 <= grp_fu_2327_p3;
    end else if (((1'd1 == and_ln326_10_fu_1204_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_28_0_reg_713 <= 24'd16775168;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2571 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_29_0_reg_701 <= grp_fu_2335_p3;
    end else if (((1'd1 == and_ln326_10_fu_1204_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_29_0_reg_701 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2571 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_2_0_reg_1025 <= grp_fu_2119_p3;
    end else if (((1'd1 == and_ln326_10_fu_1204_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_2_0_reg_1025 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2571 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_30_0_reg_689 <= grp_fu_2343_p3;
    end else if (((1'd1 == and_ln326_10_fu_1204_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_30_0_reg_689 <= 24'd16775168;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2571 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_31_0_reg_677 <= grp_fu_2351_p3;
    end else if (((1'd1 == and_ln326_10_fu_1204_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_31_0_reg_677 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2571 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_3_0_reg_1013 <= grp_fu_2127_p3;
    end else if (((1'd1 == and_ln326_10_fu_1204_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_3_0_reg_1013 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2571 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_4_0_reg_1001 <= grp_fu_2135_p3;
    end else if (((1'd1 == and_ln326_10_fu_1204_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_4_0_reg_1001 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2571 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_5_0_reg_989 <= grp_fu_2143_p3;
    end else if (((1'd1 == and_ln326_10_fu_1204_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_5_0_reg_989 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2571 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_6_0_reg_977 <= grp_fu_2151_p3;
    end else if (((1'd1 == and_ln326_10_fu_1204_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_6_0_reg_977 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2571 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_7_0_reg_965 <= grp_fu_2159_p3;
    end else if (((1'd1 == and_ln326_10_fu_1204_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_7_0_reg_965 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2571 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_8_0_reg_953 <= grp_fu_2167_p3;
    end else if (((1'd1 == and_ln326_10_fu_1204_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_8_0_reg_953 <= 24'd16775168;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2571 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_9_0_reg_941 <= grp_fu_2175_p3;
    end else if (((1'd1 == and_ln326_10_fu_1204_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_9_0_reg_941 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln315_fu_1115_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln315_fu_1115_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        i1_0_i_reg_666 <= i1_fu_1121_p2;
    end else if (((icmp_ln313_fu_1103_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i1_0_i_reg_666 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        i_0_i_reg_655 <= i_reg_2522;
    end else if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_i_reg_655 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((res_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state24))) begin
        i_ic_0_i_reg_1072 <= i_ic_reg_2903;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        i_ic_0_i_reg_1072 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_fu_1210_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_index_reg_1061 <= ir_fu_1216_p2;
    end else if (((1'd1 == and_ln326_10_fu_1204_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        in_index_reg_1061 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        if ((1'b1 == ap_condition_659)) begin
            pX_4 <= 32'd0;
        end else if ((1'b1 == ap_condition_657)) begin
            pX_4 <= add_ln359_fu_2022_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        if ((1'b1 == ap_condition_595)) begin
            pY_4 <= 32'd0;
        end else if ((1'b1 == ap_condition_470)) begin
            pY_4 <= add_ln354_fu_2068_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        if ((1'b1 == ap_condition_659)) begin
            sX_4 <= 32'd0;
        end else if ((1'b1 == ap_condition_657)) begin
            sX_4 <= select_ln361_fu_2038_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        if ((1'b1 == ap_condition_595)) begin
            storemerge_i_reg_1083 <= 32'd0;
        end else if ((1'b1 == ap_condition_470)) begin
            storemerge_i_reg_1083 <= select_ln356_fu_2084_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        and_ln326_10_reg_2567 <= and_ln326_10_fu_1204_p2;
        icmp_ln326_13_reg_2550 <= icmp_ln326_13_fu_1146_p2;
        icmp_ln326_reg_2540 <= icmp_ln326_fu_1136_p2;
        pX_4_load_reg_2561 <= pX_4;
        pY_4_load_reg_2555 <= pY_4;
        sX_4_load_reg_2535 <= sX_4;
        sY_4_load_reg_2545 <= sY_4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln326_10_reg_2567) & (1'b1 == ap_CS_fsm_state23))) begin
        i_ic_reg_2903 <= i_ic_fu_2006_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_2522 <= i_fu_1109_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln324_reg_2571 <= icmp_ln324_fu_1210_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state23) & ((1'd0 == and_ln326_10_reg_2567) | (icmp_ln338_fu_2000_p2 == 1'd1)))) begin
        icmp_ln346_reg_2913 <= icmp_ln346_fu_2017_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln346_reg_2913 == 1'd1) & (1'b1 == ap_CS_fsm_state25))) begin
        sY_4 <= storemerge_i_reg_1083;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        trunc_ln708_274_reg_2750 <= {{acc_V_2_0_reg_1025[22:7]}};
        trunc_ln708_275_reg_2755 <= {{acc_V_3_0_reg_1013[22:7]}};
        trunc_ln708_276_reg_2760 <= {{acc_V_4_0_reg_1001[22:7]}};
        trunc_ln708_277_reg_2765 <= {{acc_V_5_0_reg_989[22:7]}};
        trunc_ln708_278_reg_2770 <= {{acc_V_6_0_reg_977[22:7]}};
        trunc_ln708_279_reg_2775 <= {{acc_V_7_0_reg_965[22:7]}};
        trunc_ln708_280_reg_2780 <= {{acc_V_8_0_reg_953[22:7]}};
        trunc_ln708_281_reg_2785 <= {{acc_V_9_0_reg_941[22:7]}};
        trunc_ln708_282_reg_2790 <= {{acc_V_10_0_reg_929[22:7]}};
        trunc_ln708_283_reg_2795 <= {{acc_V_11_0_reg_917[22:7]}};
        trunc_ln708_284_reg_2800 <= {{acc_V_12_0_reg_905[22:7]}};
        trunc_ln708_285_reg_2805 <= {{acc_V_13_0_reg_893[22:7]}};
        trunc_ln708_286_reg_2810 <= {{acc_V_14_0_reg_881[22:7]}};
        trunc_ln708_287_reg_2815 <= {{acc_V_15_0_reg_869[22:7]}};
        trunc_ln708_288_reg_2820 <= {{acc_V_16_0_reg_857[22:7]}};
        trunc_ln708_289_reg_2825 <= {{acc_V_17_0_reg_845[22:7]}};
        trunc_ln708_290_reg_2830 <= {{acc_V_18_0_reg_833[22:7]}};
        trunc_ln708_291_reg_2835 <= {{acc_V_19_0_reg_821[22:7]}};
        trunc_ln708_292_reg_2840 <= {{acc_V_20_0_reg_809[22:7]}};
        trunc_ln708_293_reg_2845 <= {{acc_V_21_0_reg_797[22:7]}};
        trunc_ln708_294_reg_2850 <= {{acc_V_22_0_reg_785[22:7]}};
        trunc_ln708_295_reg_2855 <= {{acc_V_23_0_reg_773[22:7]}};
        trunc_ln708_296_reg_2860 <= {{acc_V_24_0_reg_761[22:7]}};
        trunc_ln708_297_reg_2865 <= {{acc_V_25_0_reg_749[22:7]}};
        trunc_ln708_298_reg_2870 <= {{acc_V_26_0_reg_737[22:7]}};
        trunc_ln708_299_reg_2875 <= {{acc_V_27_0_reg_725[22:7]}};
        trunc_ln708_300_reg_2880 <= {{acc_V_28_0_reg_713[22:7]}};
        trunc_ln708_301_reg_2885 <= {{acc_V_29_0_reg_701[22:7]}};
        trunc_ln708_302_reg_2890 <= {{acc_V_30_0_reg_689[22:7]}};
        trunc_ln708_303_reg_2895 <= {{acc_V_31_0_reg_677[22:7]}};
    end
end

always @ (*) begin
    if ((icmp_ln324_fu_1210_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state5 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state5 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln313_fu_1103_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln315_fu_1115_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        data_V_V_blk_n = data_V_V_empty_n;
    end else begin
        data_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((icmp_ln315_fu_1115_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln315_fu_1115_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        data_V_V_read = 1'b1;
    end else begin
        data_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln313_fu_1103_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer_in_V_8_address0 = zext_ln332_fu_1222_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        layer_in_V_8_address0 = grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_output_V_address0;
    end else begin
        layer_in_V_8_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer_in_V_8_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        layer_in_V_8_ce0 = grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_output_V_ce0;
    end else begin
        layer_in_V_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        layer_in_V_8_we0 = grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_output_V_we0;
    end else begin
        layer_in_V_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        layer_out_i_address0 = zext_ln340_fu_2012_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        layer_out_i_address0 = 64'd30;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        layer_out_i_address0 = 64'd28;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        layer_out_i_address0 = 64'd26;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        layer_out_i_address0 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        layer_out_i_address0 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        layer_out_i_address0 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        layer_out_i_address0 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        layer_out_i_address0 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        layer_out_i_address0 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        layer_out_i_address0 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        layer_out_i_address0 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        layer_out_i_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        layer_out_i_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        layer_out_i_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        layer_out_i_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        layer_out_i_address0 = 64'd0;
    end else begin
        layer_out_i_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        layer_out_i_address1 = 64'd31;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        layer_out_i_address1 = 64'd29;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        layer_out_i_address1 = 64'd27;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        layer_out_i_address1 = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        layer_out_i_address1 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        layer_out_i_address1 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        layer_out_i_address1 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        layer_out_i_address1 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        layer_out_i_address1 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        layer_out_i_address1 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        layer_out_i_address1 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        layer_out_i_address1 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        layer_out_i_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        layer_out_i_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        layer_out_i_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        layer_out_i_address1 = 64'd1;
    end else begin
        layer_out_i_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state7))) begin
        layer_out_i_ce0 = 1'b1;
    end else begin
        layer_out_i_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state7))) begin
        layer_out_i_ce1 = 1'b1;
    end else begin
        layer_out_i_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        layer_out_i_d0 = trunc_ln708_302_reg_2890;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        layer_out_i_d0 = trunc_ln708_300_reg_2880;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        layer_out_i_d0 = trunc_ln708_298_reg_2870;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        layer_out_i_d0 = trunc_ln708_296_reg_2860;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        layer_out_i_d0 = trunc_ln708_294_reg_2850;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        layer_out_i_d0 = trunc_ln708_292_reg_2840;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        layer_out_i_d0 = trunc_ln708_290_reg_2830;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        layer_out_i_d0 = trunc_ln708_288_reg_2820;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        layer_out_i_d0 = trunc_ln708_286_reg_2810;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        layer_out_i_d0 = trunc_ln708_284_reg_2800;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        layer_out_i_d0 = trunc_ln708_282_reg_2790;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        layer_out_i_d0 = trunc_ln708_280_reg_2780;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        layer_out_i_d0 = trunc_ln708_278_reg_2770;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        layer_out_i_d0 = trunc_ln708_276_reg_2760;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        layer_out_i_d0 = trunc_ln708_274_reg_2750;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        layer_out_i_d0 = {{acc_V_0_0_reg_1049[22:7]}};
    end else begin
        layer_out_i_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        layer_out_i_d1 = trunc_ln708_303_reg_2895;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        layer_out_i_d1 = trunc_ln708_301_reg_2885;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        layer_out_i_d1 = trunc_ln708_299_reg_2875;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        layer_out_i_d1 = trunc_ln708_297_reg_2865;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        layer_out_i_d1 = trunc_ln708_295_reg_2855;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        layer_out_i_d1 = trunc_ln708_293_reg_2845;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        layer_out_i_d1 = trunc_ln708_291_reg_2835;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        layer_out_i_d1 = trunc_ln708_289_reg_2825;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        layer_out_i_d1 = trunc_ln708_287_reg_2815;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        layer_out_i_d1 = trunc_ln708_285_reg_2805;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        layer_out_i_d1 = trunc_ln708_283_reg_2795;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        layer_out_i_d1 = trunc_ln708_281_reg_2785;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        layer_out_i_d1 = trunc_ln708_279_reg_2775;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        layer_out_i_d1 = trunc_ln708_277_reg_2765;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        layer_out_i_d1 = trunc_ln708_275_reg_2755;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        layer_out_i_d1 = {{acc_V_1_0_reg_1037[22:7]}};
    end else begin
        layer_out_i_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state7))) begin
        layer_out_i_we0 = 1'b1;
    end else begin
        layer_out_i_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state7))) begin
        layer_out_i_we1 = 1'b1;
    end else begin
        layer_out_i_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        res_V_V_blk_n = res_V_V_full_n;
    end else begin
        res_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((res_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state24))) begin
        res_V_V_write = 1'b1;
    end else begin
        res_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln315_fu_1115_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        tmpdata_V_address0 = zext_ln317_fu_1127_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmpdata_V_address0 = grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_data_V_address0;
    end else begin
        tmpdata_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((~((icmp_ln315_fu_1115_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln315_fu_1115_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        tmpdata_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmpdata_V_ce0 = grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_data_V_ce0;
    end else begin
        tmpdata_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln315_fu_1115_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln315_fu_1115_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        tmpdata_V_we0 = 1'b1;
    end else begin
        tmpdata_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w32_V_ce0 = 1'b1;
    end else begin
        w32_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln313_fu_1103_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if ((~((icmp_ln315_fu_1115_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln315_fu_1115_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if ((~((icmp_ln315_fu_1115_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln315_fu_1115_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'd1 == and_ln326_10_fu_1204_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'd0 == and_ln326_10_fu_1204_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln324_fu_1210_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln324_fu_1210_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            if (((1'b1 == ap_CS_fsm_state23) & ((1'd0 == and_ln326_10_reg_2567) | (icmp_ln338_fu_2000_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state24 : begin
            if (((res_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state24))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln354_fu_2068_p2 = (pY_4_load_reg_2555 + 32'd1);

assign add_ln356_fu_2079_p2 = (sY_4_load_reg_2545 + 32'd1);

assign add_ln359_fu_2022_p2 = (pX_4_load_reg_2561 + 32'd1);

assign add_ln361_fu_2033_p2 = (sX_4_load_reg_2535 + 32'd1);

assign and_ln326_10_fu_1204_p2 = (and_ln326_fu_1192_p2 & and_ln326_9_fu_1198_p2);

assign and_ln326_9_fu_1198_p2 = (icmp_ln326_15_fu_1186_p2 & icmp_ln326_14_fu_1166_p2);

assign and_ln326_fu_1192_p2 = (icmp_ln326_fu_1136_p2 & icmp_ln326_13_fu_1146_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (real_start == 1'b0));
end

always @ (*) begin
    ap_block_state3 = ((icmp_ln315_fu_1115_p2 == 1'd0) & (data_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state3_ignore_call0 = ((icmp_ln315_fu_1115_p2 == 1'd0) & (data_V_V_empty_n == 1'b0));
end

assign ap_block_state5_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_470 = (((icmp_ln350_fu_2063_p2 == 1'd0) & (1'd0 == and_ln326_10_reg_2567) & (icmp_ln346_fu_2017_p2 == 1'd1)) | ((icmp_ln350_fu_2063_p2 == 1'd0) & (icmp_ln346_fu_2017_p2 == 1'd1) & (icmp_ln338_fu_2000_p2 == 1'd1)));
end

always @ (*) begin
    ap_condition_595 = (((1'd0 == and_ln326_10_reg_2567) & (icmp_ln350_fu_2063_p2 == 1'd1) & (icmp_ln346_fu_2017_p2 == 1'd1)) | ((icmp_ln350_fu_2063_p2 == 1'd1) & (icmp_ln346_fu_2017_p2 == 1'd1) & (icmp_ln338_fu_2000_p2 == 1'd1)));
end

always @ (*) begin
    ap_condition_657 = (((icmp_ln346_fu_2017_p2 == 1'd0) & (1'd0 == and_ln326_10_reg_2567)) | ((icmp_ln346_fu_2017_p2 == 1'd0) & (icmp_ln338_fu_2000_p2 == 1'd1)));
end

always @ (*) begin
    ap_condition_659 = (((1'd0 == and_ln326_10_reg_2567) & (icmp_ln346_fu_2017_p2 == 1'd1)) | ((icmp_ln346_fu_2017_p2 == 1'd1) & (icmp_ln338_fu_2000_p2 == 1'd1)));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_ap_start = grp_cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config32_s_fu_1094_ap_start_reg;

assign grp_fu_2103_p1 = sext_ln1116_fu_1232_p1;

assign grp_fu_2111_p1 = sext_ln1116_fu_1232_p1;

assign grp_fu_2119_p1 = sext_ln1116_fu_1232_p1;

assign grp_fu_2127_p1 = sext_ln1116_fu_1232_p1;

assign grp_fu_2135_p1 = sext_ln1116_fu_1232_p1;

assign grp_fu_2143_p1 = sext_ln1116_fu_1232_p1;

assign grp_fu_2151_p1 = sext_ln1116_fu_1232_p1;

assign grp_fu_2159_p1 = sext_ln1116_fu_1232_p1;

assign grp_fu_2167_p1 = sext_ln1116_fu_1232_p1;

assign grp_fu_2175_p1 = sext_ln1116_fu_1232_p1;

assign grp_fu_2183_p1 = sext_ln1116_fu_1232_p1;

assign grp_fu_2191_p1 = sext_ln1116_fu_1232_p1;

assign grp_fu_2199_p1 = sext_ln1116_fu_1232_p1;

assign grp_fu_2207_p1 = sext_ln1116_fu_1232_p1;

assign grp_fu_2215_p1 = sext_ln1116_fu_1232_p1;

assign grp_fu_2223_p1 = sext_ln1116_fu_1232_p1;

assign grp_fu_2231_p1 = sext_ln1116_fu_1232_p1;

assign grp_fu_2239_p1 = sext_ln1116_fu_1232_p1;

assign grp_fu_2247_p1 = sext_ln1116_fu_1232_p1;

assign grp_fu_2255_p1 = sext_ln1116_fu_1232_p1;

assign grp_fu_2263_p1 = sext_ln1116_fu_1232_p1;

assign grp_fu_2271_p1 = sext_ln1116_fu_1232_p1;

assign grp_fu_2279_p1 = sext_ln1116_fu_1232_p1;

assign grp_fu_2287_p1 = sext_ln1116_fu_1232_p1;

assign grp_fu_2295_p1 = sext_ln1116_fu_1232_p1;

assign grp_fu_2303_p1 = sext_ln1116_fu_1232_p1;

assign grp_fu_2311_p1 = sext_ln1116_fu_1232_p1;

assign grp_fu_2319_p1 = sext_ln1116_fu_1232_p1;

assign grp_fu_2327_p1 = sext_ln1116_fu_1232_p1;

assign grp_fu_2335_p1 = sext_ln1116_fu_1232_p1;

assign grp_fu_2343_p1 = sext_ln1116_fu_1232_p1;

assign i1_fu_1121_p2 = (i1_0_i_reg_666 + 5'd1);

assign i_fu_1109_p2 = (i_0_i_reg_655 + 9'd1);

assign i_ic_fu_2006_p2 = (i_ic_0_i_reg_1072 + 6'd1);

assign icmp_ln313_fu_1103_p2 = ((i_0_i_reg_655 == 9'd289) ? 1'b1 : 1'b0);

assign icmp_ln315_fu_1115_p2 = ((i1_0_i_reg_666 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln324_fu_1210_p2 = ((in_index_reg_1061 == 8'd144) ? 1'b1 : 1'b0);

assign icmp_ln326_13_fu_1146_p2 = ((sY_4 == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln326_14_fu_1166_p2 = (($signed(tmp_11_fu_1156_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln326_15_fu_1186_p2 = (($signed(tmp_12_fu_1176_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln326_fu_1136_p2 = ((sX_4 == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln338_fu_2000_p2 = ((i_ic_0_i_reg_1072 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln346_fu_2017_p2 = ((pX_4_load_reg_2561 == 32'd16) ? 1'b1 : 1'b0);

assign icmp_ln350_fu_2063_p2 = ((pY_4_load_reg_2555 == 32'd16) ? 1'b1 : 1'b0);

assign ir_fu_1216_p2 = (in_index_reg_1061 + 8'd1);

assign res_V_V_din = layer_out_i_q0;

assign select_ln356_fu_2084_p3 = ((icmp_ln326_13_reg_2550[0:0] === 1'b1) ? 32'd1 : add_ln356_fu_2079_p2);

assign select_ln361_fu_2038_p3 = ((icmp_ln326_reg_2540[0:0] === 1'b1) ? 32'd1 : add_ln361_fu_2033_p2);

assign sext_ln1116_fu_1232_p0 = layer_in_V_8_q0;

assign sext_ln1116_fu_1232_p1 = sext_ln1116_fu_1232_p0;

assign start_out = real_start;

assign tmp_11_fu_1156_p4 = {{pY_4[31:1]}};

assign tmp_12_fu_1176_p4 = {{pX_4[31:1]}};

assign tmp_22_fu_1664_p4 = {{w32_V_q0[252:248]}};

assign tmp_425_fu_1244_p4 = {{w32_V_q0[15:8]}};

assign tmp_426_fu_1258_p4 = {{w32_V_q0[23:16]}};

assign tmp_427_fu_1272_p4 = {{w32_V_q0[31:24]}};

assign tmp_428_fu_1286_p4 = {{w32_V_q0[39:32]}};

assign tmp_429_fu_1300_p4 = {{w32_V_q0[47:40]}};

assign tmp_430_fu_1314_p4 = {{w32_V_q0[55:48]}};

assign tmp_431_fu_1328_p4 = {{w32_V_q0[63:56]}};

assign tmp_432_fu_1342_p4 = {{w32_V_q0[71:64]}};

assign tmp_433_fu_1356_p4 = {{w32_V_q0[79:72]}};

assign tmp_434_fu_1370_p4 = {{w32_V_q0[87:80]}};

assign tmp_435_fu_1384_p4 = {{w32_V_q0[95:88]}};

assign tmp_436_fu_1398_p4 = {{w32_V_q0[103:96]}};

assign tmp_437_fu_1412_p4 = {{w32_V_q0[111:104]}};

assign tmp_438_fu_1426_p4 = {{w32_V_q0[119:112]}};

assign tmp_439_fu_1440_p4 = {{w32_V_q0[127:120]}};

assign tmp_440_fu_1454_p4 = {{w32_V_q0[135:128]}};

assign tmp_441_fu_1468_p4 = {{w32_V_q0[143:136]}};

assign tmp_442_fu_1482_p4 = {{w32_V_q0[151:144]}};

assign tmp_443_fu_1496_p4 = {{w32_V_q0[159:152]}};

assign tmp_444_fu_1510_p4 = {{w32_V_q0[167:160]}};

assign tmp_445_fu_1524_p4 = {{w32_V_q0[175:168]}};

assign tmp_446_fu_1538_p4 = {{w32_V_q0[183:176]}};

assign tmp_447_fu_1552_p4 = {{w32_V_q0[191:184]}};

assign tmp_448_fu_1566_p4 = {{w32_V_q0[199:192]}};

assign tmp_449_fu_1580_p4 = {{w32_V_q0[207:200]}};

assign tmp_450_fu_1594_p4 = {{w32_V_q0[215:208]}};

assign tmp_451_fu_1608_p4 = {{w32_V_q0[223:216]}};

assign tmp_452_fu_1622_p4 = {{w32_V_q0[231:224]}};

assign tmp_453_fu_1636_p4 = {{w32_V_q0[239:232]}};

assign tmp_454_fu_1650_p4 = {{w32_V_q0[247:240]}};

assign trunc_ln332_fu_1228_p1 = w32_V_q0[7:0];

assign w32_V_address0 = zext_ln332_fu_1222_p1;

assign zext_ln317_fu_1127_p1 = i1_0_i_reg_666;

assign zext_ln332_fu_1222_p1 = in_index_reg_1061;

assign zext_ln340_fu_2012_p1 = i_ic_0_i_reg_1072;

endmodule //conv_2d_cl_ss_ap_fixed_ap_fixed_16_5_5_3_0_config32_s
