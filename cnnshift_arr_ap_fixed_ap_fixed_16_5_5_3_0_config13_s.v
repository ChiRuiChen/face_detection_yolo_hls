// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config13_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        data_V_address0,
        data_V_ce0,
        data_V_q0,
        output_V_address0,
        output_V_ce0,
        output_V_we0,
        output_V_d0,
        output_V_q0
);

parameter    ap_ST_fsm_state1 = 14'd1;
parameter    ap_ST_fsm_state2 = 14'd2;
parameter    ap_ST_fsm_state3 = 14'd4;
parameter    ap_ST_fsm_state4 = 14'd8;
parameter    ap_ST_fsm_state5 = 14'd16;
parameter    ap_ST_fsm_state6 = 14'd32;
parameter    ap_ST_fsm_state7 = 14'd64;
parameter    ap_ST_fsm_state8 = 14'd128;
parameter    ap_ST_fsm_state9 = 14'd256;
parameter    ap_ST_fsm_state10 = 14'd512;
parameter    ap_ST_fsm_state11 = 14'd1024;
parameter    ap_ST_fsm_state12 = 14'd2048;
parameter    ap_ST_fsm_state13 = 14'd4096;
parameter    ap_ST_fsm_state14 = 14'd8192;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] data_V_address0;
output   data_V_ce0;
input  [15:0] data_V_q0;
output  [7:0] output_V_address0;
output   output_V_ce0;
output   output_V_we0;
output  [15:0] output_V_d0;
input  [15:0] output_V_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg data_V_ce0;
reg[7:0] output_V_address0;
reg output_V_ce0;
reg output_V_we0;
reg[15:0] output_V_d0;

(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [10:0] linebuffer_V_address0;
reg    linebuffer_V_ce0;
reg    linebuffer_V_we0;
reg   [15:0] linebuffer_V_d0;
wire   [15:0] linebuffer_V_q0;
wire   [4:0] i0_fu_293_p2;
reg   [4:0] i0_reg_749;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln246_fu_287_p2;
wire   [11:0] zext_ln203_75_fu_304_p1;
reg   [11:0] zext_ln203_75_reg_759;
wire    ap_CS_fsm_state3;
wire   [6:0] zext_ln203_76_fu_308_p1;
reg   [6:0] zext_ln203_76_reg_766;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln250_fu_321_p2;
wire   [1:0] add_ln255_fu_355_p2;
reg   [1:0] add_ln255_reg_781;
wire   [15:0] tmpinput_V_q0;
reg   [15:0] tmp1_V_reg_792;
wire    ap_CS_fsm_state5;
wire   [7:0] zext_ln255_fu_383_p1;
reg   [7:0] zext_ln255_reg_797;
reg   [10:0] linebuffer_V_addr_1_reg_803;
reg   [15:0] tmp_V_reg_808;
wire   [5:0] i2_fu_411_p2;
reg   [5:0] i2_reg_816;
wire    ap_CS_fsm_state6;
wire   [11:0] add_ln203_49_fu_442_p2;
reg   [11:0] add_ln203_49_reg_821;
wire   [0:0] icmp_ln258_fu_405_p2;
wire   [1:0] i1_fu_510_p2;
wire   [1:0] i0_7_fu_526_p2;
reg   [1:0] i0_7_reg_839;
wire    ap_CS_fsm_state8;
wire   [5:0] zext_ln192_30_fu_544_p1;
reg   [5:0] zext_ln192_30_reg_844;
wire   [0:0] icmp_ln188_fu_520_p2;
wire   [5:0] add_ln192_fu_548_p2;
reg   [5:0] add_ln192_reg_849;
wire   [1:0] i1_13_fu_560_p2;
reg   [1:0] i1_13_reg_857;
wire    ap_CS_fsm_state9;
wire   [8:0] sub_ln192_fu_590_p2;
reg   [8:0] sub_ln192_reg_862;
wire   [0:0] icmp_ln190_fu_554_p2;
wire   [4:0] i2_14_fu_606_p2;
reg   [4:0] i2_14_reg_871;
wire    ap_CS_fsm_state10;
wire   [8:0] add_ln192_25_fu_621_p2;
reg   [8:0] add_ln192_25_reg_876;
wire   [0:0] icmp_ln191_fu_600_p2;
wire   [1:0] i1_14_fu_663_p2;
reg   [1:0] i1_14_reg_889;
wire    ap_CS_fsm_state12;
wire   [7:0] sub_ln203_fu_689_p2;
reg   [7:0] sub_ln203_reg_894;
wire   [0:0] icmp_ln200_fu_657_p2;
wire   [6:0] zext_ln202_fu_695_p1;
reg   [6:0] zext_ln202_reg_899;
wire   [4:0] i2_13_fu_705_p2;
reg   [4:0] i2_13_reg_907;
wire    ap_CS_fsm_state13;
wire   [7:0] add_ln203_fu_723_p2;
reg   [7:0] add_ln203_reg_912;
wire   [0:0] icmp_ln202_fu_699_p2;
reg   [5:0] tmpinput_V_address0;
reg    tmpinput_V_ce0;
reg    tmpinput_V_we0;
reg   [15:0] tmpinput_V_d0;
reg   [4:0] i0_0_reg_197;
reg   [1:0] i1_0_reg_209;
reg   [5:0] i2_0_reg_221;
wire    ap_CS_fsm_state7;
reg   [1:0] i0_0_i_reg_232;
reg   [1:0] i1_0_i_reg_243;
reg   [4:0] i2_0_i_reg_254;
wire    ap_CS_fsm_state11;
reg   [1:0] i11_0_i_reg_265;
reg   [4:0] i22_0_i_reg_276;
wire    ap_CS_fsm_state14;
wire   [63:0] zext_ln248_fu_299_p1;
wire   [63:0] tmp_94_fu_312_p3;
wire   [63:0] zext_ln252_6_fu_350_p1;
wire   [63:0] zext_ln255_17_fu_378_p1;
wire   [63:0] zext_ln203_77_fu_400_p1;
wire   [63:0] zext_ln203_83_fu_477_p1;
wire   [63:0] zext_ln203_79_fu_505_p1;
wire   [63:0] zext_ln203_81_fu_516_p1;
wire   [63:0] zext_ln192_7_fu_644_p1;
wire   [63:0] zext_ln192_fu_652_p1;
wire   [63:0] zext_ln203_85_fu_737_p1;
wire   [63:0] zext_ln203_fu_742_p1;
wire   [1:0] xor_ln252_fu_327_p2;
wire   [5:0] tmp_96_fu_333_p3;
wire   [6:0] zext_ln252_fu_341_p1;
wire   [6:0] add_ln252_fu_345_p2;
wire   [5:0] tmp_97_fu_361_p3;
wire   [6:0] zext_ln255_16_fu_369_p1;
wire   [6:0] add_ln255_7_fu_373_p2;
wire   [11:0] tmp_98_cast_fu_386_p4;
wire   [11:0] add_ln203_46_fu_395_p2;
wire   [6:0] tmp_101_fu_417_p3;
wire   [7:0] zext_ln203_80_fu_425_p1;
wire   [7:0] add_ln203_48_fu_429_p2;
wire   [11:0] tmp_103_cast_fu_434_p3;
wire   [6:0] tmp_104_fu_447_p3;
wire   [7:0] zext_ln203_82_fu_455_p1;
wire   [7:0] add_ln203_50_fu_459_p2;
wire   [11:0] tmp_106_cast_fu_464_p3;
wire   [11:0] add_ln203_51_fu_472_p2;
wire   [1:0] sub_ln265_fu_482_p2;
wire   [5:0] tmp_100_fu_488_p3;
wire   [6:0] zext_ln203_78_fu_496_p1;
wire   [6:0] add_ln203_47_fu_500_p2;
wire   [0:0] trunc_ln192_fu_532_p1;
wire   [4:0] shl_ln_fu_536_p3;
wire   [7:0] shl_ln192_s_fu_566_p3;
wire   [5:0] shl_ln192_2_fu_578_p3;
wire   [8:0] zext_ln192_31_fu_574_p1;
wire   [8:0] zext_ln192_32_fu_586_p1;
wire   [5:0] zext_ln191_fu_596_p1;
wire   [5:0] add_ln192_26_fu_612_p2;
wire   [8:0] zext_ln192_33_fu_617_p1;
wire   [5:0] add_ln192_27_fu_626_p2;
wire   [8:0] zext_ln192_34_fu_631_p1;
wire   [8:0] add_ln192_28_fu_635_p2;
wire  signed [31:0] sext_ln192_8_fu_640_p1;
wire  signed [31:0] sext_ln192_fu_649_p1;
wire   [5:0] shl_ln203_6_fu_677_p3;
wire   [7:0] shl_ln7_fu_669_p3;
wire   [7:0] zext_ln203_17_fu_685_p1;
wire   [5:0] or_ln_fu_711_p3;
wire   [7:0] zext_ln203_18_fu_719_p1;
wire   [6:0] zext_ln203_84_fu_728_p1;
wire   [6:0] add_ln203_52_fu_732_p2;
reg   [13:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 14'd1;
end

cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config13_s_linejbC #(
    .DataWidth( 16 ),
    .AddressRange( 1056 ),
    .AddressWidth( 11 ))
linebuffer_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_address0),
    .ce0(linebuffer_V_ce0),
    .we0(linebuffer_V_we0),
    .d0(linebuffer_V_d0),
    .q0(linebuffer_V_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config13_s_tmpikbM #(
    .DataWidth( 16 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
tmpinput_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tmpinput_V_address0),
    .ce0(tmpinput_V_ce0),
    .we0(tmpinput_V_we0),
    .d0(tmpinput_V_d0),
    .q0(tmpinput_V_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln246_fu_287_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i0_0_i_reg_232 <= 2'd0;
    end else if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln190_fu_554_p2 == 1'd1))) begin
        i0_0_i_reg_232 <= i0_7_reg_839;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i0_0_reg_197 <= 5'd0;
    end else if (((icmp_ln250_fu_321_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        i0_0_reg_197 <= i0_reg_749;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln188_fu_520_p2 == 1'd1))) begin
        i11_0_i_reg_265 <= 2'd0;
    end else if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln202_fu_699_p2 == 1'd1))) begin
        i11_0_i_reg_265 <= i1_14_reg_889;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln191_fu_600_p2 == 1'd1))) begin
        i1_0_i_reg_243 <= i1_13_reg_857;
    end else if (((icmp_ln188_fu_520_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        i1_0_i_reg_243 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln258_fu_405_p2 == 1'd1))) begin
        i1_0_reg_209 <= i1_fu_510_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        i1_0_reg_209 <= 2'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        i22_0_i_reg_276 <= i2_13_reg_907;
    end else if (((icmp_ln200_fu_657_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        i22_0_i_reg_276 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln190_fu_554_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        i2_0_i_reg_254 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        i2_0_i_reg_254 <= i2_14_reg_871;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        i2_0_reg_221 <= i2_reg_816;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        i2_0_reg_221 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln191_fu_600_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        add_ln192_25_reg_876 <= add_ln192_25_fu_621_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln188_fu_520_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        add_ln192_reg_849[5 : 4] <= add_ln192_fu_548_p2[5 : 4];
        zext_ln192_30_reg_844[4] <= zext_ln192_30_fu_544_p1[4];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln258_fu_405_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        add_ln203_49_reg_821 <= add_ln203_49_fu_442_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln202_fu_699_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        add_ln203_reg_912 <= add_ln203_fu_723_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln250_fu_321_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        add_ln255_reg_781 <= add_ln255_fu_355_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        i0_7_reg_839 <= i0_7_fu_526_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i0_reg_749 <= i0_fu_293_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        i1_13_reg_857 <= i1_13_fu_560_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        i1_14_reg_889 <= i1_14_fu_663_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        i2_13_reg_907 <= i2_13_fu_705_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        i2_14_reg_871 <= i2_14_fu_606_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        i2_reg_816 <= i2_fu_411_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        linebuffer_V_addr_1_reg_803 <= zext_ln203_77_fu_400_p1;
        tmp1_V_reg_792 <= tmpinput_V_q0;
        tmp_V_reg_808 <= linebuffer_V_q0;
        zext_ln255_reg_797[1 : 0] <= zext_ln255_fu_383_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln190_fu_554_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        sub_ln192_reg_862[8 : 4] <= sub_ln192_fu_590_p2[8 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln200_fu_657_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        sub_ln203_reg_894[7 : 4] <= sub_ln203_fu_689_p2[7 : 4];
        zext_ln202_reg_899[5 : 4] <= zext_ln202_fu_695_p1[5 : 4];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        zext_ln203_75_reg_759[4 : 0] <= zext_ln203_75_fu_304_p1[4 : 0];
        zext_ln203_76_reg_766[4 : 0] <= zext_ln203_76_fu_308_p1[4 : 0];
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state12) & (icmp_ln200_fu_657_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln200_fu_657_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        data_V_ce0 = 1'b1;
    end else begin
        data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        linebuffer_V_address0 = zext_ln203_81_fu_516_p1;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln258_fu_405_p2 == 1'd1))) begin
        linebuffer_V_address0 = linebuffer_V_addr_1_reg_803;
    end else if (((icmp_ln258_fu_405_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_address0 = zext_ln203_83_fu_477_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        linebuffer_V_address0 = zext_ln255_17_fu_378_p1;
    end else begin
        linebuffer_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state7) | ((1'b1 == ap_CS_fsm_state6) & (icmp_ln258_fu_405_p2 == 1'd1)) | ((icmp_ln258_fu_405_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6)))) begin
        linebuffer_V_ce0 = 1'b1;
    end else begin
        linebuffer_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        linebuffer_V_d0 = linebuffer_V_q0;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln258_fu_405_p2 == 1'd1))) begin
        linebuffer_V_d0 = tmp1_V_reg_792;
    end else begin
        linebuffer_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((1'b1 == ap_CS_fsm_state6) & (icmp_ln258_fu_405_p2 == 1'd1)))) begin
        linebuffer_V_we0 = 1'b1;
    end else begin
        linebuffer_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        output_V_address0 = zext_ln203_fu_742_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        output_V_address0 = zext_ln192_fu_652_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        output_V_address0 = zext_ln192_7_fu_644_p1;
    end else begin
        output_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        output_V_ce0 = 1'b1;
    end else begin
        output_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        output_V_d0 = tmpinput_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        output_V_d0 = output_V_q0;
    end else begin
        output_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state11))) begin
        output_V_we0 = 1'b1;
    end else begin
        output_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        tmpinput_V_address0 = zext_ln203_85_fu_737_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        tmpinput_V_address0 = zext_ln203_79_fu_505_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmpinput_V_address0 = zext_ln252_6_fu_350_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        tmpinput_V_address0 = tmp_94_fu_312_p3;
    end else begin
        tmpinput_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state6))) begin
        tmpinput_V_ce0 = 1'b1;
    end else begin
        tmpinput_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        tmpinput_V_d0 = tmp_V_reg_808;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        tmpinput_V_d0 = data_V_q0;
    end else begin
        tmpinput_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b1 == ap_CS_fsm_state6) & (icmp_ln258_fu_405_p2 == 1'd1)))) begin
        tmpinput_V_we0 = 1'b1;
    end else begin
        tmpinput_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln246_fu_287_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln250_fu_321_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln258_fu_405_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln188_fu_520_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln190_fu_554_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln191_fu_600_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state12 : begin
            if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln200_fu_657_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln202_fu_699_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln192_25_fu_621_p2 = (zext_ln192_33_fu_617_p1 + sub_ln192_reg_862);

assign add_ln192_26_fu_612_p2 = (zext_ln192_30_reg_844 + zext_ln191_fu_596_p1);

assign add_ln192_27_fu_626_p2 = (add_ln192_reg_849 + zext_ln191_fu_596_p1);

assign add_ln192_28_fu_635_p2 = (zext_ln192_34_fu_631_p1 + sub_ln192_reg_862);

assign add_ln192_fu_548_p2 = (6'd16 + zext_ln192_30_fu_544_p1);

assign add_ln203_46_fu_395_p2 = (tmp_98_cast_fu_386_p4 + zext_ln203_75_reg_759);

assign add_ln203_47_fu_500_p2 = (zext_ln203_76_reg_766 + zext_ln203_78_fu_496_p1);

assign add_ln203_48_fu_429_p2 = (zext_ln255_reg_797 + zext_ln203_80_fu_425_p1);

assign add_ln203_49_fu_442_p2 = (zext_ln203_75_reg_759 + tmp_103_cast_fu_434_p3);

assign add_ln203_50_fu_459_p2 = (zext_ln255_reg_797 + zext_ln203_82_fu_455_p1);

assign add_ln203_51_fu_472_p2 = (zext_ln203_75_reg_759 + tmp_106_cast_fu_464_p3);

assign add_ln203_52_fu_732_p2 = (zext_ln202_reg_899 + zext_ln203_84_fu_728_p1);

assign add_ln203_fu_723_p2 = (sub_ln203_reg_894 + zext_ln203_18_fu_719_p1);

assign add_ln252_fu_345_p2 = (zext_ln252_fu_341_p1 + zext_ln203_76_reg_766);

assign add_ln255_7_fu_373_p2 = (zext_ln255_16_fu_369_p1 + zext_ln203_76_reg_766);

assign add_ln255_fu_355_p2 = ($signed(i1_0_reg_209) + $signed(2'd3));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign data_V_address0 = zext_ln248_fu_299_p1;

assign i0_7_fu_526_p2 = (i0_0_i_reg_232 + 2'd1);

assign i0_fu_293_p2 = (i0_0_reg_197 + 5'd1);

assign i1_13_fu_560_p2 = (i1_0_i_reg_243 + 2'd1);

assign i1_14_fu_663_p2 = (i11_0_i_reg_265 + 2'd1);

assign i1_fu_510_p2 = (i1_0_reg_209 + 2'd1);

assign i2_13_fu_705_p2 = (i22_0_i_reg_276 + 5'd1);

assign i2_14_fu_606_p2 = (i2_0_i_reg_254 + 5'd1);

assign i2_fu_411_p2 = (i2_0_reg_221 + 6'd1);

assign icmp_ln188_fu_520_p2 = ((i0_0_i_reg_232 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln190_fu_554_p2 = ((i1_0_i_reg_243 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln191_fu_600_p2 = ((i2_0_i_reg_254 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln200_fu_657_p2 = ((i11_0_i_reg_265 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln202_fu_699_p2 = ((i22_0_i_reg_276 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln246_fu_287_p2 = ((i0_0_reg_197 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln250_fu_321_p2 = ((i1_0_reg_209 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln258_fu_405_p2 = ((i2_0_reg_221 == 6'd32) ? 1'b1 : 1'b0);

assign or_ln_fu_711_p3 = {{1'd1}, {i22_0_i_reg_276}};

assign sext_ln192_8_fu_640_p1 = $signed(add_ln192_28_fu_635_p2);

assign sext_ln192_fu_649_p1 = $signed(add_ln192_25_reg_876);

assign shl_ln192_2_fu_578_p3 = {{i1_0_i_reg_243}, {4'd0}};

assign shl_ln192_s_fu_566_p3 = {{i1_0_i_reg_243}, {6'd0}};

assign shl_ln203_6_fu_677_p3 = {{i11_0_i_reg_265}, {4'd0}};

assign shl_ln7_fu_669_p3 = {{i11_0_i_reg_265}, {6'd0}};

assign shl_ln_fu_536_p3 = {{trunc_ln192_fu_532_p1}, {4'd0}};

assign sub_ln192_fu_590_p2 = (zext_ln192_31_fu_574_p1 - zext_ln192_32_fu_586_p1);

assign sub_ln203_fu_689_p2 = (shl_ln7_fu_669_p3 - zext_ln203_17_fu_685_p1);

assign sub_ln265_fu_482_p2 = ($signed(2'd2) - $signed(i1_0_reg_209));

assign tmp_100_fu_488_p3 = {{sub_ln265_fu_482_p2}, {4'd0}};

assign tmp_101_fu_417_p3 = {{i2_0_reg_221}, {1'd0}};

assign tmp_103_cast_fu_434_p3 = {{add_ln203_48_fu_429_p2}, {4'd0}};

assign tmp_104_fu_447_p3 = {{i2_fu_411_p2}, {1'd0}};

assign tmp_106_cast_fu_464_p3 = {{add_ln203_50_fu_459_p2}, {4'd0}};

assign tmp_94_fu_312_p3 = {{59'd1}, {i0_0_reg_197}};

assign tmp_96_fu_333_p3 = {{xor_ln252_fu_327_p2}, {4'd0}};

assign tmp_97_fu_361_p3 = {{add_ln255_fu_355_p2}, {4'd0}};

assign tmp_98_cast_fu_386_p4 = {{{{6'd16}, {add_ln255_reg_781}}}, {4'd0}};

assign trunc_ln192_fu_532_p1 = i0_0_i_reg_232[0:0];

assign xor_ln252_fu_327_p2 = (i1_0_reg_209 ^ 2'd3);

assign zext_ln191_fu_596_p1 = i2_0_i_reg_254;

assign zext_ln192_30_fu_544_p1 = shl_ln_fu_536_p3;

assign zext_ln192_31_fu_574_p1 = shl_ln192_s_fu_566_p3;

assign zext_ln192_32_fu_586_p1 = shl_ln192_2_fu_578_p3;

assign zext_ln192_33_fu_617_p1 = add_ln192_26_fu_612_p2;

assign zext_ln192_34_fu_631_p1 = add_ln192_27_fu_626_p2;

assign zext_ln192_7_fu_644_p1 = $unsigned(sext_ln192_8_fu_640_p1);

assign zext_ln192_fu_652_p1 = $unsigned(sext_ln192_fu_649_p1);

assign zext_ln202_fu_695_p1 = shl_ln203_6_fu_677_p3;

assign zext_ln203_17_fu_685_p1 = shl_ln203_6_fu_677_p3;

assign zext_ln203_18_fu_719_p1 = or_ln_fu_711_p3;

assign zext_ln203_75_fu_304_p1 = i0_0_reg_197;

assign zext_ln203_76_fu_308_p1 = i0_0_reg_197;

assign zext_ln203_77_fu_400_p1 = add_ln203_46_fu_395_p2;

assign zext_ln203_78_fu_496_p1 = tmp_100_fu_488_p3;

assign zext_ln203_79_fu_505_p1 = add_ln203_47_fu_500_p2;

assign zext_ln203_80_fu_425_p1 = tmp_101_fu_417_p3;

assign zext_ln203_81_fu_516_p1 = add_ln203_49_reg_821;

assign zext_ln203_82_fu_455_p1 = tmp_104_fu_447_p3;

assign zext_ln203_83_fu_477_p1 = add_ln203_51_fu_472_p2;

assign zext_ln203_84_fu_728_p1 = i22_0_i_reg_276;

assign zext_ln203_85_fu_737_p1 = add_ln203_52_fu_732_p2;

assign zext_ln203_fu_742_p1 = add_ln203_reg_912;

assign zext_ln248_fu_299_p1 = i0_0_reg_197;

assign zext_ln252_6_fu_350_p1 = add_ln252_fu_345_p2;

assign zext_ln252_fu_341_p1 = tmp_96_fu_333_p3;

assign zext_ln255_16_fu_369_p1 = tmp_97_fu_361_p3;

assign zext_ln255_17_fu_378_p1 = add_ln255_7_fu_373_p2;

assign zext_ln255_fu_383_p1 = add_ln255_reg_781;

always @ (posedge ap_clk) begin
    zext_ln203_75_reg_759[11:5] <= 7'b0000000;
    zext_ln203_76_reg_766[6:5] <= 2'b00;
    zext_ln255_reg_797[7:2] <= 6'b000000;
    zext_ln192_30_reg_844[3:0] <= 4'b0000;
    zext_ln192_30_reg_844[5] <= 1'b0;
    add_ln192_reg_849[3:0] <= 4'b0000;
    sub_ln192_reg_862[3:0] <= 4'b0000;
    sub_ln203_reg_894[3:0] <= 4'b0000;
    zext_ln202_reg_899[3:0] <= 4'b0000;
    zext_ln202_reg_899[6] <= 1'b0;
end

endmodule //cnnshift_arr_ap_fixed_ap_fixed_16_5_5_3_0_config13_s
